{"mappings":"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","sources":["node_modules/three/build/three.js"],"sourcesContent":["/**\n * @license\n * Copyright 2010-2021 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.THREE = {}));\n}(this, (function (exports) { 'use strict';\n\n\tconst REVISION = '130';\n\tconst MOUSE = {\n\t\tLEFT: 0,\n\t\tMIDDLE: 1,\n\t\tRIGHT: 2,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2\n\t};\n\tconst TOUCH = {\n\t\tROTATE: 0,\n\t\tPAN: 1,\n\t\tDOLLY_PAN: 2,\n\t\tDOLLY_ROTATE: 3\n\t};\n\tconst CullFaceNone = 0;\n\tconst CullFaceBack = 1;\n\tconst CullFaceFront = 2;\n\tconst CullFaceFrontBack = 3;\n\tconst BasicShadowMap = 0;\n\tconst PCFShadowMap = 1;\n\tconst PCFSoftShadowMap = 2;\n\tconst VSMShadowMap = 3;\n\tconst FrontSide = 0;\n\tconst BackSide = 1;\n\tconst DoubleSide = 2;\n\tconst FlatShading = 1;\n\tconst SmoothShading = 2;\n\tconst NoBlending = 0;\n\tconst NormalBlending = 1;\n\tconst AdditiveBlending = 2;\n\tconst SubtractiveBlending = 3;\n\tconst MultiplyBlending = 4;\n\tconst CustomBlending = 5;\n\tconst AddEquation = 100;\n\tconst SubtractEquation = 101;\n\tconst ReverseSubtractEquation = 102;\n\tconst MinEquation = 103;\n\tconst MaxEquation = 104;\n\tconst ZeroFactor = 200;\n\tconst OneFactor = 201;\n\tconst SrcColorFactor = 202;\n\tconst OneMinusSrcColorFactor = 203;\n\tconst SrcAlphaFactor = 204;\n\tconst OneMinusSrcAlphaFactor = 205;\n\tconst DstAlphaFactor = 206;\n\tconst OneMinusDstAlphaFactor = 207;\n\tconst DstColorFactor = 208;\n\tconst OneMinusDstColorFactor = 209;\n\tconst SrcAlphaSaturateFactor = 210;\n\tconst NeverDepth = 0;\n\tconst AlwaysDepth = 1;\n\tconst LessDepth = 2;\n\tconst LessEqualDepth = 3;\n\tconst EqualDepth = 4;\n\tconst GreaterEqualDepth = 5;\n\tconst GreaterDepth = 6;\n\tconst NotEqualDepth = 7;\n\tconst MultiplyOperation = 0;\n\tconst MixOperation = 1;\n\tconst AddOperation = 2;\n\tconst NoToneMapping = 0;\n\tconst LinearToneMapping = 1;\n\tconst ReinhardToneMapping = 2;\n\tconst CineonToneMapping = 3;\n\tconst ACESFilmicToneMapping = 4;\n\tconst CustomToneMapping = 5;\n\tconst UVMapping = 300;\n\tconst CubeReflectionMapping = 301;\n\tconst CubeRefractionMapping = 302;\n\tconst EquirectangularReflectionMapping = 303;\n\tconst EquirectangularRefractionMapping = 304;\n\tconst CubeUVReflectionMapping = 306;\n\tconst CubeUVRefractionMapping = 307;\n\tconst RepeatWrapping = 1000;\n\tconst ClampToEdgeWrapping = 1001;\n\tconst MirroredRepeatWrapping = 1002;\n\tconst NearestFilter = 1003;\n\tconst NearestMipmapNearestFilter = 1004;\n\tconst NearestMipMapNearestFilter = 1004;\n\tconst NearestMipmapLinearFilter = 1005;\n\tconst NearestMipMapLinearFilter = 1005;\n\tconst LinearFilter = 1006;\n\tconst LinearMipmapNearestFilter = 1007;\n\tconst LinearMipMapNearestFilter = 1007;\n\tconst LinearMipmapLinearFilter = 1008;\n\tconst LinearMipMapLinearFilter = 1008;\n\tconst UnsignedByteType = 1009;\n\tconst ByteType = 1010;\n\tconst ShortType = 1011;\n\tconst UnsignedShortType = 1012;\n\tconst IntType = 1013;\n\tconst UnsignedIntType = 1014;\n\tconst FloatType = 1015;\n\tconst HalfFloatType = 1016;\n\tconst UnsignedShort4444Type = 1017;\n\tconst UnsignedShort5551Type = 1018;\n\tconst UnsignedShort565Type = 1019;\n\tconst UnsignedInt248Type = 1020;\n\tconst AlphaFormat = 1021;\n\tconst RGBFormat = 1022;\n\tconst RGBAFormat = 1023;\n\tconst LuminanceFormat = 1024;\n\tconst LuminanceAlphaFormat = 1025;\n\tconst RGBEFormat = RGBAFormat;\n\tconst DepthFormat = 1026;\n\tconst DepthStencilFormat = 1027;\n\tconst RedFormat = 1028;\n\tconst RedIntegerFormat = 1029;\n\tconst RGFormat = 1030;\n\tconst RGIntegerFormat = 1031;\n\tconst RGBIntegerFormat = 1032;\n\tconst RGBAIntegerFormat = 1033;\n\tconst RGB_S3TC_DXT1_Format = 33776;\n\tconst RGBA_S3TC_DXT1_Format = 33777;\n\tconst RGBA_S3TC_DXT3_Format = 33778;\n\tconst RGBA_S3TC_DXT5_Format = 33779;\n\tconst RGB_PVRTC_4BPPV1_Format = 35840;\n\tconst RGB_PVRTC_2BPPV1_Format = 35841;\n\tconst RGBA_PVRTC_4BPPV1_Format = 35842;\n\tconst RGBA_PVRTC_2BPPV1_Format = 35843;\n\tconst RGB_ETC1_Format = 36196;\n\tconst RGB_ETC2_Format = 37492;\n\tconst RGBA_ETC2_EAC_Format = 37496;\n\tconst RGBA_ASTC_4x4_Format = 37808;\n\tconst RGBA_ASTC_5x4_Format = 37809;\n\tconst RGBA_ASTC_5x5_Format = 37810;\n\tconst RGBA_ASTC_6x5_Format = 37811;\n\tconst RGBA_ASTC_6x6_Format = 37812;\n\tconst RGBA_ASTC_8x5_Format = 37813;\n\tconst RGBA_ASTC_8x6_Format = 37814;\n\tconst RGBA_ASTC_8x8_Format = 37815;\n\tconst RGBA_ASTC_10x5_Format = 37816;\n\tconst RGBA_ASTC_10x6_Format = 37817;\n\tconst RGBA_ASTC_10x8_Format = 37818;\n\tconst RGBA_ASTC_10x10_Format = 37819;\n\tconst RGBA_ASTC_12x10_Format = 37820;\n\tconst RGBA_ASTC_12x12_Format = 37821;\n\tconst RGBA_BPTC_Format = 36492;\n\tconst SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\n\tconst SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\n\tconst SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\n\tconst SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\n\tconst SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\n\tconst SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\n\tconst SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\n\tconst SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\n\tconst SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\n\tconst SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\n\tconst SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\n\tconst SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\n\tconst SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\n\tconst SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\n\tconst LoopOnce = 2200;\n\tconst LoopRepeat = 2201;\n\tconst LoopPingPong = 2202;\n\tconst InterpolateDiscrete = 2300;\n\tconst InterpolateLinear = 2301;\n\tconst InterpolateSmooth = 2302;\n\tconst ZeroCurvatureEnding = 2400;\n\tconst ZeroSlopeEnding = 2401;\n\tconst WrapAroundEnding = 2402;\n\tconst NormalAnimationBlendMode = 2500;\n\tconst AdditiveAnimationBlendMode = 2501;\n\tconst TrianglesDrawMode = 0;\n\tconst TriangleStripDrawMode = 1;\n\tconst TriangleFanDrawMode = 2;\n\tconst LinearEncoding = 3000;\n\tconst sRGBEncoding = 3001;\n\tconst GammaEncoding = 3007;\n\tconst RGBEEncoding = 3002;\n\tconst LogLuvEncoding = 3003;\n\tconst RGBM7Encoding = 3004;\n\tconst RGBM16Encoding = 3005;\n\tconst RGBDEncoding = 3006;\n\tconst BasicDepthPacking = 3200;\n\tconst RGBADepthPacking = 3201;\n\tconst TangentSpaceNormalMap = 0;\n\tconst ObjectSpaceNormalMap = 1;\n\tconst ZeroStencilOp = 0;\n\tconst KeepStencilOp = 7680;\n\tconst ReplaceStencilOp = 7681;\n\tconst IncrementStencilOp = 7682;\n\tconst DecrementStencilOp = 7683;\n\tconst IncrementWrapStencilOp = 34055;\n\tconst DecrementWrapStencilOp = 34056;\n\tconst InvertStencilOp = 5386;\n\tconst NeverStencilFunc = 512;\n\tconst LessStencilFunc = 513;\n\tconst EqualStencilFunc = 514;\n\tconst LessEqualStencilFunc = 515;\n\tconst GreaterStencilFunc = 516;\n\tconst NotEqualStencilFunc = 517;\n\tconst GreaterEqualStencilFunc = 518;\n\tconst AlwaysStencilFunc = 519;\n\tconst StaticDrawUsage = 35044;\n\tconst DynamicDrawUsage = 35048;\n\tconst StreamDrawUsage = 35040;\n\tconst StaticReadUsage = 35045;\n\tconst DynamicReadUsage = 35049;\n\tconst StreamReadUsage = 35041;\n\tconst StaticCopyUsage = 35046;\n\tconst DynamicCopyUsage = 35050;\n\tconst StreamCopyUsage = 35042;\n\tconst GLSL1 = '100';\n\tconst GLSL3 = '300 es';\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\tclass EventDispatcher {\n\t\taddEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) this._listeners = {};\n\t\t\tconst listeners = this._listeners;\n\n\t\t\tif (listeners[type] === undefined) {\n\t\t\t\tlisteners[type] = [];\n\t\t\t}\n\n\t\t\tif (listeners[type].indexOf(listener) === -1) {\n\t\t\t\tlisteners[type].push(listener);\n\t\t\t}\n\t\t}\n\n\t\thasEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) return false;\n\t\t\tconst listeners = this._listeners;\n\t\t\treturn listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n\t\t}\n\n\t\tremoveEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) return;\n\t\t\tconst listeners = this._listeners;\n\t\t\tconst listenerArray = listeners[type];\n\n\t\t\tif (listenerArray !== undefined) {\n\t\t\t\tconst index = listenerArray.indexOf(listener);\n\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tlistenerArray.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdispatchEvent(event) {\n\t\t\tif (this._listeners === undefined) return;\n\t\t\tconst listeners = this._listeners;\n\t\t\tconst listenerArray = listeners[event.type];\n\n\t\t\tif (listenerArray !== undefined) {\n\t\t\t\tevent.target = this; // Make a copy, in case listeners are removed while iterating.\n\n\t\t\t\tconst array = listenerArray.slice(0);\n\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i++) {\n\t\t\t\t\tarray[i].call(this, event);\n\t\t\t\t}\n\n\t\t\t\tevent.target = null;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst _lut = [];\n\n\tfor (let i = 0; i < 256; i++) {\n\t\t_lut[i] = (i < 16 ? '0' : '') + i.toString(16);\n\t}\n\n\tlet _seed = 1234567;\n\tconst DEG2RAD = Math.PI / 180;\n\tconst RAD2DEG = 180 / Math.PI; // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\tfunction generateUUID() {\n\t\tconst d0 = Math.random() * 0xffffffff | 0;\n\t\tconst d1 = Math.random() * 0xffffffff | 0;\n\t\tconst d2 = Math.random() * 0xffffffff | 0;\n\t\tconst d3 = Math.random() * 0xffffffff | 0;\n\t\tconst uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' + _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' + _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] + _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff]; // .toUpperCase() here flattens concatenated strings to save heap memory space.\n\n\t\treturn uuid.toUpperCase();\n\t}\n\n\tfunction clamp(value, min, max) {\n\t\treturn Math.max(min, Math.min(max, value));\n\t} // compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\n\tfunction euclideanModulo(n, m) {\n\t\treturn (n % m + m) % m;\n\t} // Linear mapping from range <a1, a2> to range <b1, b2>\n\n\n\tfunction mapLinear(x, a1, a2, b1, b2) {\n\t\treturn b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n\t} // https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\n\n\n\tfunction inverseLerp(x, y, value) {\n\t\tif (x !== y) {\n\t\t\treturn (value - x) / (y - x);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t} // https://en.wikipedia.org/wiki/Linear_interpolation\n\n\n\tfunction lerp(x, y, t) {\n\t\treturn (1 - t) * x + t * y;\n\t} // http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\n\n\n\tfunction damp(x, y, lambda, dt) {\n\t\treturn lerp(x, y, 1 - Math.exp(-lambda * dt));\n\t} // https://www.desmos.com/calculator/vcsjnyz7x4\n\n\n\tfunction pingpong(x, length = 1) {\n\t\treturn length - Math.abs(euclideanModulo(x, length * 2) - length);\n\t} // http://en.wikipedia.org/wiki/Smoothstep\n\n\n\tfunction smoothstep(x, min, max) {\n\t\tif (x <= min) return 0;\n\t\tif (x >= max) return 1;\n\t\tx = (x - min) / (max - min);\n\t\treturn x * x * (3 - 2 * x);\n\t}\n\n\tfunction smootherstep(x, min, max) {\n\t\tif (x <= min) return 0;\n\t\tif (x >= max) return 1;\n\t\tx = (x - min) / (max - min);\n\t\treturn x * x * x * (x * (x * 6 - 15) + 10);\n\t} // Random integer from <low, high> interval\n\n\n\tfunction randInt(low, high) {\n\t\treturn low + Math.floor(Math.random() * (high - low + 1));\n\t} // Random float from <low, high> interval\n\n\n\tfunction randFloat(low, high) {\n\t\treturn low + Math.random() * (high - low);\n\t} // Random float from <-range/2, range/2> interval\n\n\n\tfunction randFloatSpread(range) {\n\t\treturn range * (0.5 - Math.random());\n\t} // Deterministic pseudo-random float in the interval [ 0, 1 ]\n\n\n\tfunction seededRandom(s) {\n\t\tif (s !== undefined) _seed = s % 2147483647; // Park-Miller algorithm\n\n\t\t_seed = _seed * 16807 % 2147483647;\n\t\treturn (_seed - 1) / 2147483646;\n\t}\n\n\tfunction degToRad(degrees) {\n\t\treturn degrees * DEG2RAD;\n\t}\n\n\tfunction radToDeg(radians) {\n\t\treturn radians * RAD2DEG;\n\t}\n\n\tfunction isPowerOfTwo(value) {\n\t\treturn (value & value - 1) === 0 && value !== 0;\n\t}\n\n\tfunction ceilPowerOfTwo(value) {\n\t\treturn Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\n\t}\n\n\tfunction floorPowerOfTwo(value) {\n\t\treturn Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\n\t}\n\n\tfunction setQuaternionFromProperEuler(q, a, b, c, order) {\n\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\t\t// rotations are applied to the axes in the order specified by 'order'\n\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t\t// angles are in radians\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\t\tconst c2 = cos(b / 2);\n\t\tconst s2 = sin(b / 2);\n\t\tconst c13 = cos((a + c) / 2);\n\t\tconst s13 = sin((a + c) / 2);\n\t\tconst c1_3 = cos((a - c) / 2);\n\t\tconst s1_3 = sin((a - c) / 2);\n\t\tconst c3_1 = cos((c - a) / 2);\n\t\tconst s3_1 = sin((c - a) / 2);\n\n\t\tswitch (order) {\n\t\t\tcase 'XYX':\n\t\t\t\tq.set(c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZY':\n\t\t\t\tq.set(s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXZ':\n\t\t\t\tq.set(s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZX':\n\t\t\t\tq.set(c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXY':\n\t\t\t\tq.set(s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYZ':\n\t\t\t\tq.set(s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order);\n\t\t}\n\t}\n\n\tvar MathUtils = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tDEG2RAD: DEG2RAD,\n\t\tRAD2DEG: RAD2DEG,\n\t\tgenerateUUID: generateUUID,\n\t\tclamp: clamp,\n\t\teuclideanModulo: euclideanModulo,\n\t\tmapLinear: mapLinear,\n\t\tinverseLerp: inverseLerp,\n\t\tlerp: lerp,\n\t\tdamp: damp,\n\t\tpingpong: pingpong,\n\t\tsmoothstep: smoothstep,\n\t\tsmootherstep: smootherstep,\n\t\trandInt: randInt,\n\t\trandFloat: randFloat,\n\t\trandFloatSpread: randFloatSpread,\n\t\tseededRandom: seededRandom,\n\t\tdegToRad: degToRad,\n\t\tradToDeg: radToDeg,\n\t\tisPowerOfTwo: isPowerOfTwo,\n\t\tceilPowerOfTwo: ceilPowerOfTwo,\n\t\tfloorPowerOfTwo: floorPowerOfTwo,\n\t\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler\n\t});\n\n\tclass Vector2 {\n\t\tconstructor(x = 0, y = 0) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.x;\n\t\t}\n\n\t\tset width(value) {\n\t\t\tthis.x = value;\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.y;\n\t\t}\n\n\t\tset height(value) {\n\t\t\tthis.y = value;\n\t\t}\n\n\t\tset(x, y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.x, this.y);\n\t\t}\n\n\t\tcopy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\treturn this;\n\t\t}\n\n\t\taddVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(v) {\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivide(v) {\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t}\n\n\t\tapplyMatrix3(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[3] * y + e[6];\n\t\t\tthis.y = e[1] * x + e[4] * y + e[7];\n\t\t\treturn this;\n\t\t}\n\n\t\tmin(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tmax(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tclamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampLength(min, max) {\n\t\t\tconst length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t}\n\n\t\tfloor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tround() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\troundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y;\n\t\t}\n\n\t\tcross(v) {\n\t\t\treturn this.x * v.y - this.y * v.x;\n\t\t}\n\n\t\tlengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t}\n\n\t\tmanhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y);\n\t\t}\n\n\t\tnormalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t}\n\n\t\tangle() {\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\t\t\tconst angle = Math.atan2(-this.y, -this.x) + Math.PI;\n\t\t\treturn angle;\n\t\t}\n\n\t\tdistanceTo(v) {\n\t\t\treturn Math.sqrt(this.distanceToSquared(v));\n\t\t}\n\n\t\tdistanceToSquared(v) {\n\t\t\tconst dx = this.x - v.x,\n\t\t\t\t\t\tdy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\t\t}\n\n\t\tmanhattanDistanceTo(v) {\n\t\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n\t\t}\n\n\t\tsetLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t}\n\n\t\tlerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateAround(center, angle) {\n\t\t\tconst c = Math.cos(angle),\n\t\t\t\t\t\ts = Math.sin(angle);\n\t\t\tconst x = this.x - center.x;\n\t\t\tconst y = this.y - center.y;\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\t\t\treturn this;\n\t\t}\n\n\t\trandom() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tVector2.prototype.isVector2 = true;\n\n\tclass Matrix3 {\n\t\tconstructor() {\n\t\t\tthis.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n\t\t\tif (arguments.length > 0) {\n\t\t\t\tconsole.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n\t\t\t}\n\t\t}\n\n\t\tset(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] = n11;\n\t\t\tte[1] = n21;\n\t\t\tte[2] = n31;\n\t\t\tte[3] = n12;\n\t\t\tte[4] = n22;\n\t\t\tte[5] = n32;\n\t\t\tte[6] = n13;\n\t\t\tte[7] = n23;\n\t\t\tte[8] = n33;\n\t\t\treturn this;\n\t\t}\n\n\t\tidentity() {\n\t\t\tthis.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(m) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\t\t\tte[0] = me[0];\n\t\t\tte[1] = me[1];\n\t\t\tte[2] = me[2];\n\t\t\tte[3] = me[3];\n\t\t\tte[4] = me[4];\n\t\t\tte[5] = me[5];\n\t\t\tte[6] = me[6];\n\t\t\tte[7] = me[7];\n\t\t\tte[8] = me[8];\n\t\t\treturn this;\n\t\t}\n\n\t\textractBasis(xAxis, yAxis, zAxis) {\n\t\t\txAxis.setFromMatrix3Column(this, 0);\n\t\t\tyAxis.setFromMatrix3Column(this, 1);\n\t\t\tzAxis.setFromMatrix3Column(this, 2);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrix4(m) {\n\t\t\tconst me = m.elements;\n\t\t\tthis.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(m) {\n\t\t\treturn this.multiplyMatrices(this, m);\n\t\t}\n\n\t\tpremultiply(m) {\n\t\t\treturn this.multiplyMatrices(m, this);\n\t\t}\n\n\t\tmultiplyMatrices(a, b) {\n\t\t\tconst ae = a.elements;\n\t\t\tconst be = b.elements;\n\t\t\tconst te = this.elements;\n\t\t\tconst a11 = ae[0],\n\t\t\t\t\t\ta12 = ae[3],\n\t\t\t\t\t\ta13 = ae[6];\n\t\t\tconst a21 = ae[1],\n\t\t\t\t\t\ta22 = ae[4],\n\t\t\t\t\t\ta23 = ae[7];\n\t\t\tconst a31 = ae[2],\n\t\t\t\t\t\ta32 = ae[5],\n\t\t\t\t\t\ta33 = ae[8];\n\t\t\tconst b11 = be[0],\n\t\t\t\t\t\tb12 = be[3],\n\t\t\t\t\t\tb13 = be[6];\n\t\t\tconst b21 = be[1],\n\t\t\t\t\t\tb22 = be[4],\n\t\t\t\t\t\tb23 = be[7];\n\t\t\tconst b31 = be[2],\n\t\t\t\t\t\tb32 = be[5],\n\t\t\t\t\t\tb33 = be[8];\n\t\t\tte[0] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t\tte[3] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t\tte[6] = a11 * b13 + a12 * b23 + a13 * b33;\n\t\t\tte[1] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t\tte[4] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t\tte[7] = a21 * b13 + a22 * b23 + a23 * b33;\n\t\t\tte[2] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t\tte[5] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t\tte[8] = a31 * b13 + a32 * b23 + a33 * b33;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(s) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] *= s;\n\t\t\tte[3] *= s;\n\t\t\tte[6] *= s;\n\t\t\tte[1] *= s;\n\t\t\tte[4] *= s;\n\t\t\tte[7] *= s;\n\t\t\tte[2] *= s;\n\t\t\tte[5] *= s;\n\t\t\tte[8] *= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tdeterminant() {\n\t\t\tconst te = this.elements;\n\t\t\tconst a = te[0],\n\t\t\t\t\t\tb = te[1],\n\t\t\t\t\t\tc = te[2],\n\t\t\t\t\t\td = te[3],\n\t\t\t\t\t\te = te[4],\n\t\t\t\t\t\tf = te[5],\n\t\t\t\t\t\tg = te[6],\n\t\t\t\t\t\th = te[7],\n\t\t\t\t\t\ti = te[8];\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\t\t}\n\n\t\tinvert() {\n\t\t\tconst te = this.elements,\n\t\t\t\t\t\tn11 = te[0],\n\t\t\t\t\t\tn21 = te[1],\n\t\t\t\t\t\tn31 = te[2],\n\t\t\t\t\t\tn12 = te[3],\n\t\t\t\t\t\tn22 = te[4],\n\t\t\t\t\t\tn32 = te[5],\n\t\t\t\t\t\tn13 = te[6],\n\t\t\t\t\t\tn23 = te[7],\n\t\t\t\t\t\tn33 = te[8],\n\t\t\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\t\t\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\t\t\tif (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\n\t\t\tconst detInv = 1 / det;\n\t\t\tte[0] = t11 * detInv;\n\t\t\tte[1] = (n31 * n23 - n33 * n21) * detInv;\n\t\t\tte[2] = (n32 * n21 - n31 * n22) * detInv;\n\t\t\tte[3] = t12 * detInv;\n\t\t\tte[4] = (n33 * n11 - n31 * n13) * detInv;\n\t\t\tte[5] = (n31 * n12 - n32 * n11) * detInv;\n\t\t\tte[6] = t13 * detInv;\n\t\t\tte[7] = (n21 * n13 - n23 * n11) * detInv;\n\t\t\tte[8] = (n22 * n11 - n21 * n12) * detInv;\n\t\t\treturn this;\n\t\t}\n\n\t\ttranspose() {\n\t\t\tlet tmp;\n\t\t\tconst m = this.elements;\n\t\t\ttmp = m[1];\n\t\t\tm[1] = m[3];\n\t\t\tm[3] = tmp;\n\t\t\ttmp = m[2];\n\t\t\tm[2] = m[6];\n\t\t\tm[6] = tmp;\n\t\t\ttmp = m[5];\n\t\t\tm[5] = m[7];\n\t\t\tm[7] = tmp;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetNormalMatrix(matrix4) {\n\t\t\treturn this.setFromMatrix4(matrix4).invert().transpose();\n\t\t}\n\n\t\ttransposeIntoArray(r) {\n\t\t\tconst m = this.elements;\n\t\t\tr[0] = m[0];\n\t\t\tr[1] = m[3];\n\t\t\tr[2] = m[6];\n\t\t\tr[3] = m[1];\n\t\t\tr[4] = m[4];\n\t\t\tr[5] = m[7];\n\t\t\tr[6] = m[2];\n\t\t\tr[7] = m[5];\n\t\t\tr[8] = m[8];\n\t\t\treturn this;\n\t\t}\n\n\t\tsetUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\n\t\t\tconst c = Math.cos(rotation);\n\t\t\tconst s = Math.sin(rotation);\n\t\t\tthis.set(sx * c, sx * s, -sx * (c * cx + s * cy) + cx + tx, -sy * s, sy * c, -sy * (-s * cx + c * cy) + cy + ty, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(sx, sy) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] *= sx;\n\t\t\tte[3] *= sx;\n\t\t\tte[6] *= sx;\n\t\t\tte[1] *= sy;\n\t\t\tte[4] *= sy;\n\t\t\tte[7] *= sy;\n\t\t\treturn this;\n\t\t}\n\n\t\trotate(theta) {\n\t\t\tconst c = Math.cos(theta);\n\t\t\tconst s = Math.sin(theta);\n\t\t\tconst te = this.elements;\n\t\t\tconst a11 = te[0],\n\t\t\t\t\t\ta12 = te[3],\n\t\t\t\t\t\ta13 = te[6];\n\t\t\tconst a21 = te[1],\n\t\t\t\t\t\ta22 = te[4],\n\t\t\t\t\t\ta23 = te[7];\n\t\t\tte[0] = c * a11 + s * a21;\n\t\t\tte[3] = c * a12 + s * a22;\n\t\t\tte[6] = c * a13 + s * a23;\n\t\t\tte[1] = -s * a11 + c * a21;\n\t\t\tte[4] = -s * a12 + c * a22;\n\t\t\tte[7] = -s * a13 + c * a23;\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(tx, ty) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] += tx * te[2];\n\t\t\tte[3] += tx * te[5];\n\t\t\tte[6] += tx * te[8];\n\t\t\tte[1] += ty * te[2];\n\t\t\tte[4] += ty * te[5];\n\t\t\tte[7] += ty * te[8];\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(matrix) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = matrix.elements;\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tif (te[i] !== me[i]) return false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.elements[i] = array[i + offset];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tconst te = this.elements;\n\t\t\tarray[offset] = te[0];\n\t\t\tarray[offset + 1] = te[1];\n\t\t\tarray[offset + 2] = te[2];\n\t\t\tarray[offset + 3] = te[3];\n\t\t\tarray[offset + 4] = te[4];\n\t\t\tarray[offset + 5] = te[5];\n\t\t\tarray[offset + 6] = te[6];\n\t\t\tarray[offset + 7] = te[7];\n\t\t\tarray[offset + 8] = te[8];\n\t\t\treturn array;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().fromArray(this.elements);\n\t\t}\n\n\t}\n\n\tMatrix3.prototype.isMatrix3 = true;\n\n\tlet _canvas;\n\n\tclass ImageUtils {\n\t\tstatic getDataURL(image) {\n\t\t\tif (/^data:/i.test(image.src)) {\n\t\t\t\treturn image.src;\n\t\t\t}\n\n\t\t\tif (typeof HTMLCanvasElement == 'undefined') {\n\t\t\t\treturn image.src;\n\t\t\t}\n\n\t\t\tlet canvas;\n\n\t\t\tif (image instanceof HTMLCanvasElement) {\n\t\t\t\tcanvas = image;\n\t\t\t} else {\n\t\t\t\tif (_canvas === undefined) _canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n\t\t\t\t_canvas.width = image.width;\n\t\t\t\t_canvas.height = image.height;\n\n\t\t\t\tconst context = _canvas.getContext('2d');\n\n\t\t\t\tif (image instanceof ImageData) {\n\t\t\t\t\tcontext.putImageData(image, 0, 0);\n\t\t\t\t} else {\n\t\t\t\t\tcontext.drawImage(image, 0, 0, image.width, image.height);\n\t\t\t\t}\n\n\t\t\t\tcanvas = _canvas;\n\t\t\t}\n\n\t\t\tif (canvas.width > 2048 || canvas.height > 2048) {\n\t\t\t\tconsole.warn('THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image);\n\t\t\t\treturn canvas.toDataURL('image/jpeg', 0.6);\n\t\t\t} else {\n\t\t\t\treturn canvas.toDataURL('image/png');\n\t\t\t}\n\t\t}\n\n\t}\n\n\tlet textureId = 0;\n\n\tclass Texture extends EventDispatcher {\n\t\tconstructor(image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding) {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: textureId++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.image = image;\n\t\t\tthis.mipmaps = [];\n\t\t\tthis.mapping = mapping;\n\t\t\tthis.wrapS = wrapS;\n\t\t\tthis.wrapT = wrapT;\n\t\t\tthis.magFilter = magFilter;\n\t\t\tthis.minFilter = minFilter;\n\t\t\tthis.anisotropy = anisotropy;\n\t\t\tthis.format = format;\n\t\t\tthis.internalFormat = null;\n\t\t\tthis.type = type;\n\t\t\tthis.offset = new Vector2(0, 0);\n\t\t\tthis.repeat = new Vector2(1, 1);\n\t\t\tthis.center = new Vector2(0, 0);\n\t\t\tthis.rotation = 0;\n\t\t\tthis.matrixAutoUpdate = true;\n\t\t\tthis.matrix = new Matrix3();\n\t\t\tthis.generateMipmaps = true;\n\t\t\tthis.premultiplyAlpha = false;\n\t\t\tthis.flipY = true;\n\t\t\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\t\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t\t//\n\t\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n\t\t\tthis.encoding = encoding;\n\t\t\tthis.version = 0;\n\t\t\tthis.onUpdate = null;\n\t\t}\n\n\t\tupdateMatrix() {\n\t\t\tthis.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice(0);\n\t\t\tthis.mapping = source.mapping;\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\t\t\tthis.anisotropy = source.anisotropy;\n\t\t\tthis.format = source.format;\n\t\t\tthis.internalFormat = source.internalFormat;\n\t\t\tthis.type = source.type;\n\t\t\tthis.offset.copy(source.offset);\n\t\t\tthis.repeat.copy(source.repeat);\n\t\t\tthis.center.copy(source.center);\n\t\t\tthis.rotation = source.rotation;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrix.copy(source.matrix);\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst isRootObject = meta === undefined || typeof meta === 'string';\n\n\t\t\tif (!isRootObject && meta.textures[this.uuid] !== undefined) {\n\t\t\t\treturn meta.textures[this.uuid];\n\t\t\t}\n\n\t\t\tconst output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\t\t\t\tmapping: this.mapping,\n\t\t\t\trepeat: [this.repeat.x, this.repeat.y],\n\t\t\t\toffset: [this.offset.x, this.offset.y],\n\t\t\t\tcenter: [this.center.x, this.center.y],\n\t\t\t\trotation: this.rotation,\n\t\t\t\twrap: [this.wrapS, this.wrapT],\n\t\t\t\tformat: this.format,\n\t\t\t\ttype: this.type,\n\t\t\t\tencoding: this.encoding,\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\t\t\t\tflipY: this.flipY,\n\t\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\t\tunpackAlignment: this.unpackAlignment\n\t\t\t};\n\n\t\t\tif (this.image !== undefined) {\n\t\t\t\t// TODO: Move to THREE.Image\n\t\t\t\tconst image = this.image;\n\n\t\t\t\tif (image.uuid === undefined) {\n\t\t\t\t\timage.uuid = generateUUID(); // UGH\n\t\t\t\t}\n\n\t\t\t\tif (!isRootObject && meta.images[image.uuid] === undefined) {\n\t\t\t\t\tlet url;\n\n\t\t\t\t\tif (Array.isArray(image)) {\n\t\t\t\t\t\t// process array of images e.g. CubeTexture\n\t\t\t\t\t\turl = [];\n\n\t\t\t\t\t\tfor (let i = 0, l = image.length; i < l; i++) {\n\t\t\t\t\t\t\t// check cube texture with data textures\n\t\t\t\t\t\t\tif (image[i].isDataTexture) {\n\t\t\t\t\t\t\t\turl.push(serializeImage(image[i].image));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\turl.push(serializeImage(image[i]));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// process single image\n\t\t\t\t\t\turl = serializeImage(image);\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.images[image.uuid] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: url\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\t\t\t}\n\n\t\t\tif (!isRootObject) {\n\t\t\t\tmeta.textures[this.uuid] = output;\n\t\t\t}\n\n\t\t\treturn output;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t\ttransformUv(uv) {\n\t\t\tif (this.mapping !== UVMapping) return uv;\n\t\t\tuv.applyMatrix3(this.matrix);\n\n\t\t\tif (uv.x < 0 || uv.x > 1) {\n\t\t\t\tswitch (this.wrapS) {\n\t\t\t\t\tcase RepeatWrapping:\n\t\t\t\t\t\tuv.x = uv.x - Math.floor(uv.x);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\t\t\t\t\t\tif (Math.abs(Math.floor(uv.x) % 2) === 1) {\n\t\t\t\t\t\t\tuv.x = Math.ceil(uv.x) - uv.x;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor(uv.x);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (uv.y < 0 || uv.y > 1) {\n\t\t\t\tswitch (this.wrapT) {\n\t\t\t\t\tcase RepeatWrapping:\n\t\t\t\t\t\tuv.y = uv.y - Math.floor(uv.y);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\t\t\t\t\t\tif (Math.abs(Math.floor(uv.y) % 2) === 1) {\n\t\t\t\t\t\t\tuv.y = Math.ceil(uv.y) - uv.y;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor(uv.y);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.flipY) {\n\t\t\t\tuv.y = 1 - uv.y;\n\t\t\t}\n\n\t\t\treturn uv;\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\tTexture.prototype.isTexture = true;\n\n\tfunction serializeImage(image) {\n\t\tif (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n\t\t\t// default images\n\t\t\treturn ImageUtils.getDataURL(image);\n\t\t} else {\n\t\t\tif (image.data) {\n\t\t\t\t// images of DataTexture\n\t\t\t\treturn {\n\t\t\t\t\tdata: Array.prototype.slice.call(image.data),\n\t\t\t\t\twidth: image.width,\n\t\t\t\t\theight: image.height,\n\t\t\t\t\ttype: image.data.constructor.name\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.Texture: Unable to serialize Texture.');\n\t\t\t\treturn {};\n\t\t\t}\n\t\t}\n\t}\n\n\tclass Vector4 {\n\t\tconstructor(x = 0, y = 0, z = 0, w = 1) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.z;\n\t\t}\n\n\t\tset width(value) {\n\t\t\tthis.z = value;\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.w;\n\t\t}\n\n\t\tset height(value) {\n\t\t\tthis.w = value;\n\t\t}\n\n\t\tset(x, y, z, w) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetZ(z) {\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetW(w) {\n\t\t\tthis.w = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tthis.z = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.w = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tcase 2:\n\t\t\t\t\treturn this.z;\n\n\t\t\t\tcase 3:\n\t\t\t\t\treturn this.w;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.x, this.y, this.z, this.w);\n\t\t}\n\n\t\tcopy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = v.w !== undefined ? v.w : 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\t\t\treturn this;\n\t\t}\n\n\t\taddVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(v) {\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\t\t\tthis.w *= v.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z,\n\t\t\t\t\t\tw = this.w;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n\t\t\tthis.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n\t\t\tthis.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n\t\t\tthis.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t}\n\n\t\tsetAxisAngleFromQuaternion(q) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\t\t\t// q is assumed to be normalized\n\t\t\tthis.w = 2 * Math.acos(q.w);\n\t\t\tconst s = Math.sqrt(1 - q.w * q.w);\n\n\t\t\tif (s < 0.0001) {\n\t\t\t\tthis.x = 1;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\t\t\t} else {\n\t\t\t\tthis.x = q.x / s;\n\t\t\t\tthis.y = q.y / s;\n\t\t\t\tthis.z = q.z / s;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetAxisAngleFromRotationMatrix(m) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tlet angle, x, y, z; // variables for result\n\n\t\t\tconst epsilon = 0.01,\n\t\t\t\t\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\n\t\t\t\t\t\t// margin to distinguish between 0 and 180 degrees\n\t\t\tte = m.elements,\n\t\t\t\t\t\tm11 = te[0],\n\t\t\t\t\t\tm12 = te[4],\n\t\t\t\t\t\tm13 = te[8],\n\t\t\t\t\t\tm21 = te[1],\n\t\t\t\t\t\tm22 = te[5],\n\t\t\t\t\t\tm23 = te[9],\n\t\t\t\t\t\tm31 = te[2],\n\t\t\t\t\t\tm32 = te[6],\n\t\t\t\t\t\tm33 = te[10];\n\n\t\t\tif (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\t\t\t\tif (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\t\t\t\t\tthis.set(1, 0, 0, 0);\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\t\t\t\t} // otherwise this singularity is angle = 180\n\n\n\t\t\t\tangle = Math.PI;\n\t\t\t\tconst xx = (m11 + 1) / 2;\n\t\t\t\tconst yy = (m22 + 1) / 2;\n\t\t\t\tconst zz = (m33 + 1) / 2;\n\t\t\t\tconst xy = (m12 + m21) / 4;\n\t\t\t\tconst xz = (m13 + m31) / 4;\n\t\t\t\tconst yz = (m23 + m32) / 4;\n\n\t\t\t\tif (xx > yy && xx > zz) {\n\t\t\t\t\t// m11 is the largest diagonal term\n\t\t\t\t\tif (xx < epsilon) {\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx = Math.sqrt(xx);\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\t\t\t\t\t}\n\t\t\t\t} else if (yy > zz) {\n\t\t\t\t\t// m22 is the largest diagonal term\n\t\t\t\t\tif (yy < epsilon) {\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ty = Math.sqrt(yy);\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\t\t\t\t\tif (zz < epsilon) {\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tz = Math.sqrt(zz);\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.set(x, y, z, angle);\n\t\t\t\treturn this; // return 180 deg rotation\n\t\t\t} // as we have reached here there are no singularities so we can handle normally\n\n\n\t\t\tlet s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n\t\t\tif (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = (m32 - m23) / s;\n\t\t\tthis.y = (m13 - m31) / s;\n\t\t\tthis.z = (m21 - m12) / s;\n\t\t\tthis.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n\t\t\treturn this;\n\t\t}\n\n\t\tmin(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\tthis.z = Math.min(this.z, v.z);\n\t\t\tthis.w = Math.min(this.w, v.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tmax(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\tthis.z = Math.max(this.z, v.z);\n\t\t\tthis.w = Math.max(this.w, v.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tclamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\n\t\t\tthis.w = Math.max(min.w, Math.min(max.w, this.w));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\n\t\t\tthis.w = Math.max(minVal, Math.min(maxVal, this.w));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampLength(min, max) {\n\t\t\tconst length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t}\n\n\t\tfloor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\tthis.z = Math.floor(this.z);\n\t\t\tthis.w = Math.floor(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\tthis.z = Math.ceil(this.z);\n\t\t\tthis.w = Math.ceil(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tround() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\tthis.z = Math.round(this.z);\n\t\t\tthis.w = Math.round(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\troundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\tthis.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n\t\t\tthis.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\tthis.z = -this.z;\n\t\t\tthis.w = -this.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\t\t}\n\n\t\tlengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n\t\t}\n\n\t\tmanhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n\t\t}\n\n\t\tnormalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t}\n\n\t\tsetLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t}\n\n\t\tlerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\tthis.z += (v.z - this.z) * alpha;\n\t\t\tthis.w += (v.w - this.w) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\tthis.z = v1.z + (v2.z - v1.z) * alpha;\n\t\t\tthis.w = v1.w + (v2.w - v1.w) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\tthis.z = array[offset + 2];\n\t\t\tthis.w = array[offset + 3];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\tarray[offset + 2] = this.z;\n\t\t\tarray[offset + 3] = this.w;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\tthis.z = attribute.getZ(index);\n\t\t\tthis.w = attribute.getW(index);\n\t\t\treturn this;\n\t\t}\n\n\t\trandom() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\t\t\tthis.w = Math.random();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tVector4.prototype.isVector4 = true;\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\n\tclass WebGLRenderTarget extends EventDispatcher {\n\t\tconstructor(width, height, options = {}) {\n\t\t\tsuper();\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = 1;\n\t\t\tthis.scissor = new Vector4(0, 0, width, height);\n\t\t\tthis.scissorTest = false;\n\t\t\tthis.viewport = new Vector4(0, 0, width, height);\n\t\t\tthis.texture = new Texture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n\t\t\tthis.texture.image = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: 1\n\t\t\t};\n\t\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\t\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\t\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\t\t}\n\n\t\tsetTexture(texture) {\n\t\t\ttexture.image = {\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t\tdepth: this.depth\n\t\t\t};\n\t\t\tthis.texture = texture;\n\t\t}\n\n\t\tsetSize(width, height, depth = 1) {\n\t\t\tif (this.width !== width || this.height !== height || this.depth !== depth) {\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\t\t\t\tthis.depth = depth;\n\t\t\t\tthis.texture.image.width = width;\n\t\t\t\tthis.texture.image.height = height;\n\t\t\t\tthis.texture.image.depth = depth;\n\t\t\t\tthis.dispose();\n\t\t\t}\n\n\t\t\tthis.viewport.set(0, 0, width, height);\n\t\t\tthis.scissor.set(0, 0, width, height);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\tthis.depth = source.depth;\n\t\t\tthis.viewport.copy(source.viewport);\n\t\t\tthis.texture = source.texture.clone();\n\t\t\tthis.texture.image = { ...this.texture.image\n\t\t\t}; // See #20328.\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t}\n\n\tWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n\n\tclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\t\tconstructor(width, height, count) {\n\t\t\tsuper(width, height);\n\t\t\tconst texture = this.texture;\n\t\t\tthis.texture = [];\n\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tthis.texture[i] = texture.clone();\n\t\t\t}\n\t\t}\n\n\t\tsetSize(width, height, depth = 1) {\n\t\t\tif (this.width !== width || this.height !== height || this.depth !== depth) {\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\t\t\t\tthis.depth = depth;\n\n\t\t\t\tfor (let i = 0, il = this.texture.length; i < il; i++) {\n\t\t\t\t\tthis.texture[i].image.width = width;\n\t\t\t\t\tthis.texture[i].image.height = height;\n\t\t\t\t\tthis.texture[i].image.depth = depth;\n\t\t\t\t}\n\n\t\t\t\tthis.dispose();\n\t\t\t}\n\n\t\t\tthis.viewport.set(0, 0, width, height);\n\t\t\tthis.scissor.set(0, 0, width, height);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.dispose();\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\tthis.depth = source.depth;\n\t\t\tthis.viewport.set(0, 0, this.width, this.height);\n\t\t\tthis.scissor.set(0, 0, this.width, this.height);\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\t\t\tthis.texture.length = 0;\n\n\t\t\tfor (let i = 0, il = source.texture.length; i < il; i++) {\n\t\t\t\tthis.texture[i] = source.texture[i].clone();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tWebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\n\n\tclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\t\tconstructor(width, height, options) {\n\t\t\tsuper(width, height, options);\n\t\t\tthis.samples = 4;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy.call(this, source);\n\t\t\tthis.samples = source.samples;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tWebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget = true;\n\n\tclass Quaternion {\n\t\tconstructor(x = 0, y = 0, z = 0, w = 1) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\t\t}\n\n\t\tstatic slerp(qa, qb, qm, t) {\n\t\t\tconsole.warn('THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.');\n\t\t\treturn qm.slerpQuaternions(qa, qb, t);\n\t\t}\n\n\t\tstatic slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\t\t\tlet x0 = src0[srcOffset0 + 0],\n\t\t\t\t\ty0 = src0[srcOffset0 + 1],\n\t\t\t\t\tz0 = src0[srcOffset0 + 2],\n\t\t\t\t\tw0 = src0[srcOffset0 + 3];\n\t\t\tconst x1 = src1[srcOffset1 + 0],\n\t\t\t\t\t\ty1 = src1[srcOffset1 + 1],\n\t\t\t\t\t\tz1 = src1[srcOffset1 + 2],\n\t\t\t\t\t\tw1 = src1[srcOffset1 + 3];\n\n\t\t\tif (t === 0) {\n\t\t\t\tdst[dstOffset + 0] = x0;\n\t\t\t\tdst[dstOffset + 1] = y0;\n\t\t\t\tdst[dstOffset + 2] = z0;\n\t\t\t\tdst[dstOffset + 3] = w0;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (t === 1) {\n\t\t\t\tdst[dstOffset + 0] = x1;\n\t\t\t\tdst[dstOffset + 1] = y1;\n\t\t\t\tdst[dstOffset + 2] = z1;\n\t\t\t\tdst[dstOffset + 3] = w1;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n\t\t\t\tlet s = 1 - t;\n\t\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\t\t\t\tdir = cos >= 0 ? 1 : -1,\n\t\t\t\t\t\t\tsqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n\t\t\t\tif (sqrSin > Number.EPSILON) {\n\t\t\t\t\tconst sin = Math.sqrt(sqrSin),\n\t\t\t\t\t\t\t\tlen = Math.atan2(sin, cos * dir);\n\t\t\t\t\ts = Math.sin(s * len) / sin;\n\t\t\t\t\tt = Math.sin(t * len) / sin;\n\t\t\t\t}\n\n\t\t\t\tconst tDir = t * dir;\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n\t\t\t\tif (s === 1 - t) {\n\t\t\t\t\tconst f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdst[dstOffset] = x0;\n\t\t\tdst[dstOffset + 1] = y0;\n\t\t\tdst[dstOffset + 2] = z0;\n\t\t\tdst[dstOffset + 3] = w0;\n\t\t}\n\n\t\tstatic multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {\n\t\t\tconst x0 = src0[srcOffset0];\n\t\t\tconst y0 = src0[srcOffset0 + 1];\n\t\t\tconst z0 = src0[srcOffset0 + 2];\n\t\t\tconst w0 = src0[srcOffset0 + 3];\n\t\t\tconst x1 = src1[srcOffset1];\n\t\t\tconst y1 = src1[srcOffset1 + 1];\n\t\t\tconst z1 = src1[srcOffset1 + 2];\n\t\t\tconst w1 = src1[srcOffset1 + 3];\n\t\t\tdst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\t\tdst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\t\tdst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\t\tdst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\t\t\treturn dst;\n\t\t}\n\n\t\tget x() {\n\t\t\treturn this._x;\n\t\t}\n\n\t\tset x(value) {\n\t\t\tthis._x = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget y() {\n\t\t\treturn this._y;\n\t\t}\n\n\t\tset y(value) {\n\t\t\tthis._y = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget z() {\n\t\t\treturn this._z;\n\t\t}\n\n\t\tset z(value) {\n\t\t\tthis._z = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget w() {\n\t\t\treturn this._w;\n\t\t}\n\n\t\tset w(value) {\n\t\t\tthis._w = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tset(x, y, z, w) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this._x, this._y, this._z, this._w);\n\t\t}\n\n\t\tcopy(quaternion) {\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromEuler(euler, update) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tthrow new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\tconst x = euler._x,\n\t\t\t\t\t\ty = euler._y,\n\t\t\t\t\t\tz = euler._z,\n\t\t\t\t\t\torder = euler._order; // http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tconst cos = Math.cos;\n\t\t\tconst sin = Math.sin;\n\t\t\tconst c1 = cos(x / 2);\n\t\t\tconst c2 = cos(y / 2);\n\t\t\tconst c3 = cos(z / 2);\n\t\t\tconst s1 = sin(x / 2);\n\t\t\tconst s2 = sin(y / 2);\n\t\t\tconst s3 = sin(z / 2);\n\n\t\t\tswitch (order) {\n\t\t\t\tcase 'XYZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order);\n\t\t\t}\n\n\t\t\tif (update !== false) this._onChangeCallback();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromAxisAngle(axis, angle) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\t\t\t// assumes axis is normalized\n\t\t\tconst halfAngle = angle / 2,\n\t\t\t\t\t\ts = Math.sin(halfAngle);\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos(halfAngle);\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromRotationMatrix(m) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tconst te = m.elements,\n\t\t\t\t\t\tm11 = te[0],\n\t\t\t\t\t\tm12 = te[4],\n\t\t\t\t\t\tm13 = te[8],\n\t\t\t\t\t\tm21 = te[1],\n\t\t\t\t\t\tm22 = te[5],\n\t\t\t\t\t\tm23 = te[9],\n\t\t\t\t\t\tm31 = te[2],\n\t\t\t\t\t\tm32 = te[6],\n\t\t\t\t\t\tm33 = te[10],\n\t\t\t\t\t\ttrace = m11 + m22 + m33;\n\n\t\t\tif (trace > 0) {\n\t\t\t\tconst s = 0.5 / Math.sqrt(trace + 1.0);\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = (m32 - m23) * s;\n\t\t\t\tthis._y = (m13 - m31) * s;\n\t\t\t\tthis._z = (m21 - m12) * s;\n\t\t\t} else if (m11 > m22 && m11 > m33) {\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\t\t\t\tthis._w = (m32 - m23) / s;\n\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\tthis._y = (m12 + m21) / s;\n\t\t\t\tthis._z = (m13 + m31) / s;\n\t\t\t} else if (m22 > m33) {\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\t\t\t\tthis._w = (m13 - m31) / s;\n\t\t\t\tthis._x = (m12 + m21) / s;\n\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\tthis._z = (m23 + m32) / s;\n\t\t\t} else {\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\t\t\t\tthis._w = (m21 - m12) / s;\n\t\t\t\tthis._x = (m13 + m31) / s;\n\t\t\t\tthis._y = (m23 + m32) / s;\n\t\t\t\tthis._z = 0.25 * s;\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromUnitVectors(vFrom, vTo) {\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\t\t\tlet r = vFrom.dot(vTo) + 1;\n\n\t\t\tif (r < Number.EPSILON) {\n\t\t\t\t// vFrom and vTo point in opposite directions\n\t\t\t\tr = 0;\n\n\t\t\t\tif (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n\t\t\t\t\tthis._x = -vFrom.y;\n\t\t\t\t\tthis._y = vFrom.x;\n\t\t\t\t\tthis._z = 0;\n\t\t\t\t\tthis._w = r;\n\t\t\t\t} else {\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = -vFrom.z;\n\t\t\t\t\tthis._z = vFrom.y;\n\t\t\t\t\tthis._w = r;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\t\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\t\tthis._w = r;\n\t\t\t}\n\n\t\t\treturn this.normalize();\n\t\t}\n\n\t\tangleTo(q) {\n\t\t\treturn 2 * Math.acos(Math.abs(clamp(this.dot(q), -1, 1)));\n\t\t}\n\n\t\trotateTowards(q, step) {\n\t\t\tconst angle = this.angleTo(q);\n\t\t\tif (angle === 0) return this;\n\t\t\tconst t = Math.min(1, step / angle);\n\t\t\tthis.slerp(q, t);\n\t\t\treturn this;\n\t\t}\n\n\t\tidentity() {\n\t\t\treturn this.set(0, 0, 0, 1);\n\t\t}\n\n\t\tinvert() {\n\t\t\t// quaternion is assumed to have unit length\n\t\t\treturn this.conjugate();\n\t\t}\n\n\t\tconjugate() {\n\t\t\tthis._x *= -1;\n\t\t\tthis._y *= -1;\n\t\t\tthis._z *= -1;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\t\t}\n\n\t\tlengthSq() {\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n\t\t}\n\n\t\tnormalize() {\n\t\t\tlet l = this.length();\n\n\t\t\tif (l === 0) {\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\t\t\t} else {\n\t\t\t\tl = 1 / l;\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(q, p) {\n\t\t\tif (p !== undefined) {\n\t\t\t\tconsole.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n\t\t\t\treturn this.multiplyQuaternions(q, p);\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions(this, q);\n\t\t}\n\n\t\tpremultiply(q) {\n\t\t\treturn this.multiplyQuaternions(q, this);\n\t\t}\n\n\t\tmultiplyQuaternions(a, b) {\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\t\t\tconst qax = a._x,\n\t\t\t\t\t\tqay = a._y,\n\t\t\t\t\t\tqaz = a._z,\n\t\t\t\t\t\tqaw = a._w;\n\t\t\tconst qbx = b._x,\n\t\t\t\t\t\tqby = b._y,\n\t\t\t\t\t\tqbz = b._z,\n\t\t\t\t\t\tqbw = b._w;\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tslerp(qb, t) {\n\t\t\tif (t === 0) return this;\n\t\t\tif (t === 1) return this.copy(qb);\n\t\t\tconst x = this._x,\n\t\t\t\t\t\ty = this._y,\n\t\t\t\t\t\tz = this._z,\n\t\t\t\t\t\tw = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif (cosHalfTheta < 0) {\n\t\t\t\tthis._w = -qb._w;\n\t\t\t\tthis._x = -qb._x;\n\t\t\t\tthis._y = -qb._y;\n\t\t\t\tthis._z = -qb._z;\n\t\t\t\tcosHalfTheta = -cosHalfTheta;\n\t\t\t} else {\n\t\t\t\tthis.copy(qb);\n\t\t\t}\n\n\t\t\tif (cosHalfTheta >= 1.0) {\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\t\tif (sqrSinHalfTheta <= Number.EPSILON) {\n\t\t\t\tconst s = 1 - t;\n\t\t\t\tthis._w = s * w + t * this._w;\n\t\t\t\tthis._x = s * x + t * this._x;\n\t\t\t\tthis._y = s * y + t * this._y;\n\t\t\t\tthis._z = s * z + t * this._z;\n\t\t\t\tthis.normalize();\n\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n\t\t\tconst halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n\t\t\tconst ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n\t\t\t\t\t\tratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n\t\t\tthis._w = w * ratioA + this._w * ratioB;\n\t\t\tthis._x = x * ratioA + this._x * ratioB;\n\t\t\tthis._y = y * ratioA + this._y * ratioB;\n\t\t\tthis._z = z * ratioA + this._z * ratioB;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tslerpQuaternions(qa, qb, t) {\n\t\t\tthis.copy(qa).slerp(qb, t);\n\t\t}\n\n\t\tequals(quaternion) {\n\t\t\treturn quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis._x = array[offset];\n\t\t\tthis._y = array[offset + 1];\n\t\t\tthis._z = array[offset + 2];\n\t\t\tthis._w = array[offset + 3];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this._x;\n\t\t\tarray[offset + 1] = this._y;\n\t\t\tarray[offset + 2] = this._z;\n\t\t\tarray[offset + 3] = this._w;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index) {\n\t\t\tthis._x = attribute.getX(index);\n\t\t\tthis._y = attribute.getY(index);\n\t\t\tthis._z = attribute.getZ(index);\n\t\t\tthis._w = attribute.getW(index);\n\t\t\treturn this;\n\t\t}\n\n\t\t_onChange(callback) {\n\t\t\tthis._onChangeCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\t_onChangeCallback() {}\n\n\t}\n\n\tQuaternion.prototype.isQuaternion = true;\n\n\tclass Vector3 {\n\t\tconstructor(x = 0, y = 0, z = 0) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\n\t\tset(x, y, z) {\n\t\t\tif (z === undefined) z = this.z; // sprite.scale.set(x,y)\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetZ(z) {\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tthis.z = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tcase 2:\n\t\t\t\t\treturn this.z;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.x, this.y, this.z);\n\t\t}\n\n\t\tcopy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\treturn this;\n\t\t}\n\n\t\taddVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n\t\t\t\treturn this.multiplyVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyVectors(a, b) {\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyEuler(euler) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tconsole.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion(_quaternion$4.setFromEuler(euler));\n\t\t}\n\n\t\tapplyAxisAngle(axis, angle) {\n\t\t\treturn this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis, angle));\n\t\t}\n\n\t\tapplyMatrix3(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[3] * y + e[6] * z;\n\t\t\tthis.y = e[1] * x + e[4] * y + e[7] * z;\n\t\t\tthis.z = e[2] * x + e[5] * y + e[8] * z;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyNormalMatrix(m) {\n\t\t\treturn this.applyMatrix3(m).normalize();\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst e = m.elements;\n\t\t\tconst w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n\t\t\tthis.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n\t\t\tthis.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n\t\t\tthis.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyQuaternion(q) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst qx = q.x,\n\t\t\t\t\t\tqy = q.y,\n\t\t\t\t\t\tqz = q.z,\n\t\t\t\t\t\tqw = q.w; // calculate quat * vector\n\n\t\t\tconst ix = qw * x + qy * z - qz * y;\n\t\t\tconst iy = qw * y + qz * x - qx * z;\n\t\t\tconst iz = qw * z + qx * y - qy * x;\n\t\t\tconst iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n\t\t\tthis.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n\t\t\tthis.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\t\t\treturn this;\n\t\t}\n\n\t\tproject(camera) {\n\t\t\treturn this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n\t\t}\n\n\t\tunproject(camera) {\n\t\t\treturn this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n\t\t}\n\n\t\ttransformDirection(m) {\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[4] * y + e[8] * z;\n\t\t\tthis.y = e[1] * x + e[5] * y + e[9] * z;\n\t\t\tthis.z = e[2] * x + e[6] * y + e[10] * z;\n\t\t\treturn this.normalize();\n\t\t}\n\n\t\tdivide(v) {\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t}\n\n\t\tmin(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\tthis.z = Math.min(this.z, v.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tmax(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\tthis.z = Math.max(this.z, v.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tclamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampLength(min, max) {\n\t\t\tconst length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t}\n\n\t\tfloor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\tthis.z = Math.floor(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\tthis.z = Math.ceil(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tround() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\tthis.z = Math.round(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\troundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\tthis.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\tthis.z = -this.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\t\t} // TODO lengthSquared?\n\n\n\t\tlengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t}\n\n\t\tmanhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n\t\t}\n\n\t\tnormalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t}\n\n\t\tsetLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t}\n\n\t\tlerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\tthis.z += (v.z - this.z) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\tthis.z = v1.z + (v2.z - v1.z) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tcross(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n\t\t\t\treturn this.crossVectors(v, w);\n\t\t\t}\n\n\t\t\treturn this.crossVectors(this, v);\n\t\t}\n\n\t\tcrossVectors(a, b) {\n\t\t\tconst ax = a.x,\n\t\t\t\t\t\tay = a.y,\n\t\t\t\t\t\taz = a.z;\n\t\t\tconst bx = b.x,\n\t\t\t\t\t\tby = b.y,\n\t\t\t\t\t\tbz = b.z;\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\t\t\treturn this;\n\t\t}\n\n\t\tprojectOnVector(v) {\n\t\t\tconst denominator = v.lengthSq();\n\t\t\tif (denominator === 0) return this.set(0, 0, 0);\n\t\t\tconst scalar = v.dot(this) / denominator;\n\t\t\treturn this.copy(v).multiplyScalar(scalar);\n\t\t}\n\n\t\tprojectOnPlane(planeNormal) {\n\t\t\t_vector$c.copy(this).projectOnVector(planeNormal);\n\n\t\t\treturn this.sub(_vector$c);\n\t\t}\n\n\t\treflect(normal) {\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\t\t\treturn this.sub(_vector$c.copy(normal).multiplyScalar(2 * this.dot(normal)));\n\t\t}\n\n\t\tangleTo(v) {\n\t\t\tconst denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n\t\t\tif (denominator === 0) return Math.PI / 2;\n\t\t\tconst theta = this.dot(v) / denominator; // clamp, to handle numerical problems\n\n\t\t\treturn Math.acos(clamp(theta, -1, 1));\n\t\t}\n\n\t\tdistanceTo(v) {\n\t\t\treturn Math.sqrt(this.distanceToSquared(v));\n\t\t}\n\n\t\tdistanceToSquared(v) {\n\t\t\tconst dx = this.x - v.x,\n\t\t\t\t\t\tdy = this.y - v.y,\n\t\t\t\t\t\tdz = this.z - v.z;\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\t\t}\n\n\t\tmanhattanDistanceTo(v) {\n\t\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n\t\t}\n\n\t\tsetFromSpherical(s) {\n\t\t\treturn this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n\t\t}\n\n\t\tsetFromSphericalCoords(radius, phi, theta) {\n\t\t\tconst sinPhiRadius = Math.sin(phi) * radius;\n\t\t\tthis.x = sinPhiRadius * Math.sin(theta);\n\t\t\tthis.y = Math.cos(phi) * radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos(theta);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCylindrical(c) {\n\t\t\treturn this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n\t\t}\n\n\t\tsetFromCylindricalCoords(radius, theta, y) {\n\t\t\tthis.x = radius * Math.sin(theta);\n\t\t\tthis.y = y;\n\t\t\tthis.z = radius * Math.cos(theta);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrixPosition(m) {\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[12];\n\t\t\tthis.y = e[13];\n\t\t\tthis.z = e[14];\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrixScale(m) {\n\t\t\tconst sx = this.setFromMatrixColumn(m, 0).length();\n\t\t\tconst sy = this.setFromMatrixColumn(m, 1).length();\n\t\t\tconst sz = this.setFromMatrixColumn(m, 2).length();\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrixColumn(m, index) {\n\t\t\treturn this.fromArray(m.elements, index * 4);\n\t\t}\n\n\t\tsetFromMatrix3Column(m, index) {\n\t\t\treturn this.fromArray(m.elements, index * 3);\n\t\t}\n\n\t\tequals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y && v.z === this.z;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\tthis.z = array[offset + 2];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\tarray[offset + 2] = this.z;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\tthis.z = attribute.getZ(index);\n\t\t\treturn this;\n\t\t}\n\n\t\trandom() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tVector3.prototype.isVector3 = true;\n\n\tconst _vector$c = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion$4 = /*@__PURE__*/new Quaternion();\n\n\tclass Box3 {\n\t\tconstructor(min = new Vector3(+Infinity, +Infinity, +Infinity), max = new Vector3(-Infinity, -Infinity, -Infinity)) {\n\t\t\tthis.min = min;\n\t\t\tthis.max = max;\n\t\t}\n\n\t\tset(min, max) {\n\t\t\tthis.min.copy(min);\n\t\t\tthis.max.copy(max);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromArray(array) {\n\t\t\tlet minX = +Infinity;\n\t\t\tlet minY = +Infinity;\n\t\t\tlet minZ = +Infinity;\n\t\t\tlet maxX = -Infinity;\n\t\t\tlet maxY = -Infinity;\n\t\t\tlet maxZ = -Infinity;\n\n\t\t\tfor (let i = 0, l = array.length; i < l; i += 3) {\n\t\t\t\tconst x = array[i];\n\t\t\t\tconst y = array[i + 1];\n\t\t\t\tconst z = array[i + 2];\n\t\t\t\tif (x < minX) minX = x;\n\t\t\t\tif (y < minY) minY = y;\n\t\t\t\tif (z < minZ) minZ = z;\n\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\tif (z > maxZ) maxZ = z;\n\t\t\t}\n\n\t\t\tthis.min.set(minX, minY, minZ);\n\t\t\tthis.max.set(maxX, maxY, maxZ);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromBufferAttribute(attribute) {\n\t\t\tlet minX = +Infinity;\n\t\t\tlet minY = +Infinity;\n\t\t\tlet minZ = +Infinity;\n\t\t\tlet maxX = -Infinity;\n\t\t\tlet maxY = -Infinity;\n\t\t\tlet maxZ = -Infinity;\n\n\t\t\tfor (let i = 0, l = attribute.count; i < l; i++) {\n\t\t\t\tconst x = attribute.getX(i);\n\t\t\t\tconst y = attribute.getY(i);\n\t\t\t\tconst z = attribute.getZ(i);\n\t\t\t\tif (x < minX) minX = x;\n\t\t\t\tif (y < minY) minY = y;\n\t\t\t\tif (z < minZ) minZ = z;\n\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\tif (z > maxZ) maxZ = z;\n\t\t\t}\n\n\t\t\tthis.min.set(minX, minY, minZ);\n\t\t\tthis.max.set(maxX, maxY, maxZ);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\n\t\t\t\tthis.expandByPoint(points[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCenterAndSize(center, size) {\n\t\t\tconst halfSize = _vector$b.copy(size).multiplyScalar(0.5);\n\n\t\t\tthis.min.copy(center).sub(halfSize);\n\t\t\tthis.max.copy(center).add(halfSize);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromObject(object) {\n\t\t\tthis.makeEmpty();\n\t\t\treturn this.expandByObject(object);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(box) {\n\t\t\tthis.min.copy(box.min);\n\t\t\tthis.max.copy(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeEmpty() {\n\t\t\tthis.min.x = this.min.y = this.min.z = +Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = -Infinity;\n\t\t\treturn this;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\t\t\treturn this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n\t\t}\n\n\t\tgetCenter(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n\t\t}\n\n\t\tgetSize(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\n\t\t}\n\n\t\texpandByPoint(point) {\n\t\t\tthis.min.min(point);\n\t\t\tthis.max.max(point);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByVector(vector) {\n\t\t\tthis.min.sub(vector);\n\t\t\tthis.max.add(vector);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByScalar(scalar) {\n\t\t\tthis.min.addScalar(-scalar);\n\t\t\tthis.max.addScalar(scalar);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByObject(object) {\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\t\t\tobject.updateWorldMatrix(false, false);\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif (geometry !== undefined) {\n\t\t\t\tif (geometry.boundingBox === null) {\n\t\t\t\t\tgeometry.computeBoundingBox();\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy(geometry.boundingBox);\n\n\t\t\t\t_box$3.applyMatrix4(object.matrixWorld);\n\n\t\t\t\tthis.union(_box$3);\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tthis.expandByObject(children[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;\n\t\t}\n\n\t\tcontainsBox(box) {\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n\t\t}\n\n\t\tgetParameter(point, target) {\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\t\t\treturn target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\t// using 6 splitting planes to rule out intersections.\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint(sphere.center, _vector$b); // If that point is inside the sphere, the AABB and sphere intersect.\n\n\t\t\treturn _vector$b.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n\t\t}\n\n\t\tintersectsPlane(plane) {\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\t\t\tlet min, max;\n\n\t\t\tif (plane.normal.x > 0) {\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\t\t\t} else {\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\t\t\t}\n\n\t\t\tif (plane.normal.y > 0) {\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\t\t\t} else {\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\t\t\t}\n\n\t\t\tif (plane.normal.z > 0) {\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\t\t\t} else {\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\t\t\t}\n\n\t\t\treturn min <= -plane.constant && max >= -plane.constant;\n\t\t}\n\n\t\tintersectsTriangle(triangle) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t} // compute box center and extents\n\n\n\t\t\tthis.getCenter(_center);\n\n\t\t\t_extents.subVectors(this.max, _center); // translate triangle to aabb origin\n\n\n\t\t\t_v0$2.subVectors(triangle.a, _center);\n\n\t\t\t_v1$7.subVectors(triangle.b, _center);\n\n\t\t\t_v2$3.subVectors(triangle.c, _center); // compute edge vectors for triangle\n\n\n\t\t\t_f0.subVectors(_v1$7, _v0$2);\n\n\t\t\t_f1.subVectors(_v2$3, _v1$7);\n\n\t\t\t_f2.subVectors(_v0$2, _v2$3); // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\n\n\t\t\tlet axes = [0, -_f0.z, _f0.y, 0, -_f1.z, _f1.y, 0, -_f2.z, _f2.y, _f0.z, 0, -_f0.x, _f1.z, 0, -_f1.x, _f2.z, 0, -_f2.x, -_f0.y, _f0.x, 0, -_f1.y, _f1.x, 0, -_f2.y, _f2.x, 0];\n\n\t\t\tif (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\n\t\t\t\treturn false;\n\t\t\t} // test 3 face normals from the aabb\n\n\n\t\t\taxes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n\t\t\tif (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\n\t\t\t\treturn false;\n\t\t\t} // finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\n\n\t\t\t_triangleNormal.crossVectors(_f0, _f1);\n\n\t\t\taxes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];\n\t\t\treturn satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents);\n\t\t}\n\n\t\tclampPoint(point, target) {\n\t\t\treturn target.copy(point).clamp(this.min, this.max);\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\tconst clampedPoint = _vector$b.copy(point).clamp(this.min, this.max);\n\n\t\t\treturn clampedPoint.sub(point).length();\n\t\t}\n\n\t\tgetBoundingSphere(target) {\n\t\t\tthis.getCenter(target.center);\n\t\t\ttarget.radius = this.getSize(_vector$b).length() * 0.5;\n\t\t\treturn target;\n\t\t}\n\n\t\tintersect(box) {\n\t\t\tthis.min.max(box.min);\n\t\t\tthis.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n\t\t\tif (this.isEmpty()) this.makeEmpty();\n\t\t\treturn this;\n\t\t}\n\n\t\tunion(box) {\n\t\t\tthis.min.min(box.min);\n\t\t\tthis.max.max(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\n\t\t\t_points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n\n\t\t\t_points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n\n\t\t\t_points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n\n\t\t\t_points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n\n\t\t\t_points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n\n\t\t\t_points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n\n\t\t\t_points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n\n\t\t\t_points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n\n\t\t\tthis.setFromPoints(_points);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.min.add(offset);\n\t\t\tthis.max.add(offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(box) {\n\t\t\treturn box.min.equals(this.min) && box.max.equals(this.max);\n\t\t}\n\n\t}\n\n\tBox3.prototype.isBox3 = true;\n\tconst _points = [/*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3()];\n\n\tconst _vector$b = /*@__PURE__*/new Vector3();\n\n\tconst _box$3 = /*@__PURE__*/new Box3(); // triangle centered vertices\n\n\n\tconst _v0$2 = /*@__PURE__*/new Vector3();\n\n\tconst _v1$7 = /*@__PURE__*/new Vector3();\n\n\tconst _v2$3 = /*@__PURE__*/new Vector3(); // triangle edge vectors\n\n\n\tconst _f0 = /*@__PURE__*/new Vector3();\n\n\tconst _f1 = /*@__PURE__*/new Vector3();\n\n\tconst _f2 = /*@__PURE__*/new Vector3();\n\n\tconst _center = /*@__PURE__*/new Vector3();\n\n\tconst _extents = /*@__PURE__*/new Vector3();\n\n\tconst _triangleNormal = /*@__PURE__*/new Vector3();\n\n\tconst _testAxis = /*@__PURE__*/new Vector3();\n\n\tfunction satForAxes(axes, v0, v1, v2, extents) {\n\t\tfor (let i = 0, j = axes.length - 3; i <= j; i += 3) {\n\t\t\t_testAxis.fromArray(axes, i); // project the aabb onto the seperating axis\n\n\n\t\t\tconst r = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z); // project all 3 vertices of the triangle onto the seperating axis\n\n\t\t\tconst p0 = v0.dot(_testAxis);\n\t\t\tconst p1 = v1.dot(_testAxis);\n\t\t\tconst p2 = v2.dot(_testAxis); // actual test, basically see if either of the most extreme of the triangle points intersects r\n\n\t\t\tif (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\n\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tconst _box$2 = /*@__PURE__*/new Box3();\n\n\tconst _v1$6 = /*@__PURE__*/new Vector3();\n\n\tconst _toFarthestPoint = /*@__PURE__*/new Vector3();\n\n\tconst _toPoint = /*@__PURE__*/new Vector3();\n\n\tclass Sphere {\n\t\tconstructor(center = new Vector3(), radius = -1) {\n\t\t\tthis.center = center;\n\t\t\tthis.radius = radius;\n\t\t}\n\n\t\tset(center, radius) {\n\t\t\tthis.center.copy(center);\n\t\t\tthis.radius = radius;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points, optionalCenter) {\n\t\t\tconst center = this.center;\n\n\t\t\tif (optionalCenter !== undefined) {\n\t\t\t\tcenter.copy(optionalCenter);\n\t\t\t} else {\n\t\t\t\t_box$2.setFromPoints(points).getCenter(center);\n\t\t\t}\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\n\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt(maxRadiusSq);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(sphere) {\n\t\t\tthis.center.copy(sphere.center);\n\t\t\tthis.radius = sphere.radius;\n\t\t\treturn this;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\treturn this.radius < 0;\n\t\t}\n\n\t\tmakeEmpty() {\n\t\t\tthis.center.set(0, 0, 0);\n\t\t\tthis.radius = -1;\n\t\t\treturn this;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn point.distanceToSquared(this.center) <= this.radius * this.radius;\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\treturn point.distanceTo(this.center) - this.radius;\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\tconst radiusSum = this.radius + sphere.radius;\n\t\t\treturn sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn box.intersectsSphere(this);\n\t\t}\n\n\t\tintersectsPlane(plane) {\n\t\t\treturn Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\n\t\t}\n\n\t\tclampPoint(point, target) {\n\t\t\tconst deltaLengthSq = this.center.distanceToSquared(point);\n\t\t\ttarget.copy(point);\n\n\t\t\tif (deltaLengthSq > this.radius * this.radius) {\n\t\t\t\ttarget.sub(this.center).normalize();\n\t\t\t\ttarget.multiplyScalar(this.radius).add(this.center);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\tgetBoundingBox(target) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\t// Empty sphere produces empty bounding box\n\t\t\t\ttarget.makeEmpty();\n\t\t\t\treturn target;\n\t\t\t}\n\n\t\t\ttarget.set(this.center, this.center);\n\t\t\ttarget.expandByScalar(this.radius);\n\t\t\treturn target;\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tthis.center.applyMatrix4(matrix);\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.center.add(offset);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByPoint(point) {\n\t\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\t\t\t_toPoint.subVectors(point, this.center);\n\n\t\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\t\tif (lengthSq > this.radius * this.radius) {\n\t\t\t\tconst length = Math.sqrt(lengthSq);\n\t\t\t\tconst missingRadiusHalf = (length - this.radius) * 0.5; // Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\t\tthis.center.add(_toPoint.multiplyScalar(missingRadiusHalf / length));\n\t\t\t\tthis.radius += missingRadiusHalf;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tunion(sphere) {\n\t\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\t\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\t\t\t_toFarthestPoint.subVectors(sphere.center, this.center).normalize().multiplyScalar(sphere.radius);\n\n\t\t\tthis.expandByPoint(_v1$6.copy(sphere.center).add(_toFarthestPoint));\n\t\t\tthis.expandByPoint(_v1$6.copy(sphere.center).sub(_toFarthestPoint));\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(sphere) {\n\t\t\treturn sphere.center.equals(this.center) && sphere.radius === this.radius;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tconst _vector$a = /*@__PURE__*/new Vector3();\n\n\tconst _segCenter = /*@__PURE__*/new Vector3();\n\n\tconst _segDir = /*@__PURE__*/new Vector3();\n\n\tconst _diff = /*@__PURE__*/new Vector3();\n\n\tconst _edge1 = /*@__PURE__*/new Vector3();\n\n\tconst _edge2 = /*@__PURE__*/new Vector3();\n\n\tconst _normal$1 = /*@__PURE__*/new Vector3();\n\n\tclass Ray {\n\t\tconstructor(origin = new Vector3(), direction = new Vector3(0, 0, -1)) {\n\t\t\tthis.origin = origin;\n\t\t\tthis.direction = direction;\n\t\t}\n\n\t\tset(origin, direction) {\n\t\t\tthis.origin.copy(origin);\n\t\t\tthis.direction.copy(direction);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(ray) {\n\t\t\tthis.origin.copy(ray.origin);\n\t\t\tthis.direction.copy(ray.direction);\n\t\t\treturn this;\n\t\t}\n\n\t\tat(t, target) {\n\t\t\treturn target.copy(this.direction).multiplyScalar(t).add(this.origin);\n\t\t}\n\n\t\tlookAt(v) {\n\t\t\tthis.direction.copy(v).sub(this.origin).normalize();\n\t\t\treturn this;\n\t\t}\n\n\t\trecast(t) {\n\t\t\tthis.origin.copy(this.at(t, _vector$a));\n\t\t\treturn this;\n\t\t}\n\n\t\tclosestPointToPoint(point, target) {\n\t\t\ttarget.subVectors(point, this.origin);\n\t\t\tconst directionDistance = target.dot(this.direction);\n\n\t\t\tif (directionDistance < 0) {\n\t\t\t\treturn target.copy(this.origin);\n\t\t\t}\n\n\t\t\treturn target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\treturn Math.sqrt(this.distanceSqToPoint(point));\n\t\t}\n\n\t\tdistanceSqToPoint(point) {\n\t\t\tconst directionDistance = _vector$a.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n\n\t\t\tif (directionDistance < 0) {\n\t\t\t\treturn this.origin.distanceToSquared(point);\n\t\t\t}\n\n\t\t\t_vector$a.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\n\t\t\treturn _vector$a.distanceToSquared(point);\n\t\t}\n\n\t\tdistanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\t\t\t_segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n\n\t\t\t_segDir.copy(v1).sub(v0).normalize();\n\n\t\t\t_diff.copy(this.origin).sub(_segCenter);\n\n\t\t\tconst segExtent = v0.distanceTo(v1) * 0.5;\n\t\t\tconst a01 = -this.direction.dot(_segDir);\n\n\t\t\tconst b0 = _diff.dot(this.direction);\n\n\t\t\tconst b1 = -_diff.dot(_segDir);\n\n\t\t\tconst c = _diff.lengthSq();\n\n\t\t\tconst det = Math.abs(1 - a01 * a01);\n\t\t\tlet s0, s1, sqrDist, extDet;\n\n\t\t\tif (det > 0) {\n\t\t\t\t// The ray and segment are not parallel.\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif (s0 >= 0) {\n\t\t\t\t\tif (s1 >= -extDet) {\n\t\t\t\t\t\tif (s1 <= extDet) {\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\t\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// region 1\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// region 5\n\t\t\t\t\t\ts1 = -segExtent;\n\t\t\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (s1 <= -extDet) {\n\t\t\t\t\t\t// region 4\n\t\t\t\t\t\ts0 = Math.max(0, -(-a01 * segExtent + b0));\n\t\t\t\t\t\ts1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t} else if (s1 <= extDet) {\n\t\t\t\t\t\t// region 3\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// region 2\n\t\t\t\t\t\ts0 = Math.max(0, -(a01 * segExtent + b0));\n\t\t\t\t\t\ts1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Ray and segment are parallel.\n\t\t\t\ts1 = a01 > 0 ? -segExtent : segExtent;\n\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t}\n\n\t\t\tif (optionalPointOnRay) {\n\t\t\t\toptionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n\t\t\t}\n\n\t\t\tif (optionalPointOnSegment) {\n\t\t\t\toptionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\t\t}\n\n\t\tintersectSphere(sphere, target) {\n\t\t\t_vector$a.subVectors(sphere.center, this.origin);\n\n\t\t\tconst tca = _vector$a.dot(this.direction);\n\n\t\t\tconst d2 = _vector$a.dot(_vector$a) - tca * tca;\n\t\t\tconst radius2 = sphere.radius * sphere.radius;\n\t\t\tif (d2 > radius2) return null;\n\t\t\tconst thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n\t\t\tconst t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n\t\t\tconst t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n\t\t\tif (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\n\t\t\tif (t0 < 0) return this.at(t1, target); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n\t\t\treturn this.at(t0, target);\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\treturn this.distanceSqToPoint(sphere.center) <= sphere.radius * sphere.radius;\n\t\t}\n\n\t\tdistanceToPlane(plane) {\n\t\t\tconst denominator = plane.normal.dot(this.direction);\n\n\t\t\tif (denominator === 0) {\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif (plane.distanceToPoint(this.origin) === 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t} // Null is preferable to undefined since undefined means.... it is undefined\n\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t : null;\n\t\t}\n\n\t\tintersectPlane(plane, target) {\n\t\t\tconst t = this.distanceToPlane(plane);\n\n\t\t\tif (t === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn this.at(t, target);\n\t\t}\n\n\t\tintersectsPlane(plane) {\n\t\t\t// check if the ray lies on the plane first\n\t\t\tconst distToPoint = plane.distanceToPoint(this.origin);\n\n\t\t\tif (distToPoint === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst denominator = plane.normal.dot(this.direction);\n\n\t\t\tif (denominator * distToPoint < 0) {\n\t\t\t\treturn true;\n\t\t\t} // ray origin is behind the plane (and is pointing behind it)\n\n\n\t\t\treturn false;\n\t\t}\n\n\t\tintersectBox(box, target) {\n\t\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\t\t\tconst invdirx = 1 / this.direction.x,\n\t\t\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\t\t\tinvdirz = 1 / this.direction.z;\n\t\t\tconst origin = this.origin;\n\n\t\t\tif (invdirx >= 0) {\n\t\t\t\ttmin = (box.min.x - origin.x) * invdirx;\n\t\t\t\ttmax = (box.max.x - origin.x) * invdirx;\n\t\t\t} else {\n\t\t\t\ttmin = (box.max.x - origin.x) * invdirx;\n\t\t\t\ttmax = (box.min.x - origin.x) * invdirx;\n\t\t\t}\n\n\t\t\tif (invdiry >= 0) {\n\t\t\t\ttymin = (box.min.y - origin.y) * invdiry;\n\t\t\t\ttymax = (box.max.y - origin.y) * invdiry;\n\t\t\t} else {\n\t\t\t\ttymin = (box.max.y - origin.y) * invdiry;\n\t\t\t\ttymax = (box.min.y - origin.y) * invdiry;\n\t\t\t}\n\n\t\t\tif (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif (tymin > tmin || tmin !== tmin) tmin = tymin;\n\t\t\tif (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n\t\t\tif (invdirz >= 0) {\n\t\t\t\ttzmin = (box.min.z - origin.z) * invdirz;\n\t\t\t\ttzmax = (box.max.z - origin.z) * invdirz;\n\t\t\t} else {\n\t\t\t\ttzmin = (box.max.z - origin.z) * invdirz;\n\t\t\t\ttzmax = (box.min.z - origin.z) * invdirz;\n\t\t\t}\n\n\t\t\tif (tmin > tzmax || tzmin > tmax) return null;\n\t\t\tif (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n\t\t\tif (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n\t\t\tif (tmax < 0) return null;\n\t\t\treturn this.at(tmin >= 0 ? tmin : tmax, target);\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn this.intersectBox(box, _vector$a) !== null;\n\t\t}\n\n\t\tintersectTriangle(a, b, c, backfaceCulling, target) {\n\t\t\t// Compute the offset origin, edges, and normal.\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\t\t\t_edge1.subVectors(b, a);\n\n\t\t\t_edge2.subVectors(c, a);\n\n\t\t\t_normal$1.crossVectors(_edge1, _edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//\t |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//\t |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//\t |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n\n\t\t\tlet DdN = this.direction.dot(_normal$1);\n\t\t\tlet sign;\n\n\t\t\tif (DdN > 0) {\n\t\t\t\tif (backfaceCulling) return null;\n\t\t\t\tsign = 1;\n\t\t\t} else if (DdN < 0) {\n\t\t\t\tsign = -1;\n\t\t\t\tDdN = -DdN;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t_diff.subVectors(this.origin, a);\n\n\t\t\tconst DdQxE2 = sign * this.direction.dot(_edge2.crossVectors(_diff, _edge2)); // b1 < 0, no intersection\n\n\t\t\tif (DdQxE2 < 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst DdE1xQ = sign * this.direction.dot(_edge1.cross(_diff)); // b2 < 0, no intersection\n\n\t\t\tif (DdE1xQ < 0) {\n\t\t\t\treturn null;\n\t\t\t} // b1+b2 > 1, no intersection\n\n\n\t\t\tif (DdQxE2 + DdE1xQ > DdN) {\n\t\t\t\treturn null;\n\t\t\t} // Line intersects triangle, check if ray does.\n\n\n\t\t\tconst QdN = -sign * _diff.dot(_normal$1); // t < 0, no intersection\n\n\n\t\t\tif (QdN < 0) {\n\t\t\t\treturn null;\n\t\t\t} // Ray intersects triangle.\n\n\n\t\t\treturn this.at(QdN / DdN, target);\n\t\t}\n\n\t\tapplyMatrix4(matrix4) {\n\t\t\tthis.origin.applyMatrix4(matrix4);\n\t\t\tthis.direction.transformDirection(matrix4);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(ray) {\n\t\t\treturn ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tclass Matrix4 {\n\t\tconstructor() {\n\t\t\tthis.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n\t\t\tif (arguments.length > 0) {\n\t\t\t\tconsole.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n\t\t\t}\n\t\t}\n\n\t\tset(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] = n11;\n\t\t\tte[4] = n12;\n\t\t\tte[8] = n13;\n\t\t\tte[12] = n14;\n\t\t\tte[1] = n21;\n\t\t\tte[5] = n22;\n\t\t\tte[9] = n23;\n\t\t\tte[13] = n24;\n\t\t\tte[2] = n31;\n\t\t\tte[6] = n32;\n\t\t\tte[10] = n33;\n\t\t\tte[14] = n34;\n\t\t\tte[3] = n41;\n\t\t\tte[7] = n42;\n\t\t\tte[11] = n43;\n\t\t\tte[15] = n44;\n\t\t\treturn this;\n\t\t}\n\n\t\tidentity() {\n\t\t\tthis.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Matrix4().fromArray(this.elements);\n\t\t}\n\n\t\tcopy(m) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\t\t\tte[0] = me[0];\n\t\t\tte[1] = me[1];\n\t\t\tte[2] = me[2];\n\t\t\tte[3] = me[3];\n\t\t\tte[4] = me[4];\n\t\t\tte[5] = me[5];\n\t\t\tte[6] = me[6];\n\t\t\tte[7] = me[7];\n\t\t\tte[8] = me[8];\n\t\t\tte[9] = me[9];\n\t\t\tte[10] = me[10];\n\t\t\tte[11] = me[11];\n\t\t\tte[12] = me[12];\n\t\t\tte[13] = me[13];\n\t\t\tte[14] = me[14];\n\t\t\tte[15] = me[15];\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyPosition(m) {\n\t\t\tconst te = this.elements,\n\t\t\t\t\t\tme = m.elements;\n\t\t\tte[12] = me[12];\n\t\t\tte[13] = me[13];\n\t\t\tte[14] = me[14];\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrix3(m) {\n\t\t\tconst me = m.elements;\n\t\t\tthis.set(me[0], me[3], me[6], 0, me[1], me[4], me[7], 0, me[2], me[5], me[8], 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\textractBasis(xAxis, yAxis, zAxis) {\n\t\t\txAxis.setFromMatrixColumn(this, 0);\n\t\t\tyAxis.setFromMatrixColumn(this, 1);\n\t\t\tzAxis.setFromMatrixColumn(this, 2);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeBasis(xAxis, yAxis, zAxis) {\n\t\t\tthis.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\textractRotation(m) {\n\t\t\t// this method does not support reflection matrices\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\n\t\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn(m, 0).length();\n\n\t\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn(m, 1).length();\n\n\t\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn(m, 2).length();\n\n\t\t\tte[0] = me[0] * scaleX;\n\t\t\tte[1] = me[1] * scaleX;\n\t\t\tte[2] = me[2] * scaleX;\n\t\t\tte[3] = 0;\n\t\t\tte[4] = me[4] * scaleY;\n\t\t\tte[5] = me[5] * scaleY;\n\t\t\tte[6] = me[6] * scaleY;\n\t\t\tte[7] = 0;\n\t\t\tte[8] = me[8] * scaleZ;\n\t\t\tte[9] = me[9] * scaleZ;\n\t\t\tte[10] = me[10] * scaleZ;\n\t\t\tte[11] = 0;\n\t\t\tte[12] = 0;\n\t\t\tte[13] = 0;\n\t\t\tte[14] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationFromEuler(euler) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tconsole.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\tconst te = this.elements;\n\t\t\tconst x = euler.x,\n\t\t\t\t\t\ty = euler.y,\n\t\t\t\t\t\tz = euler.z;\n\t\t\tconst a = Math.cos(x),\n\t\t\t\t\t\tb = Math.sin(x);\n\t\t\tconst c = Math.cos(y),\n\t\t\t\t\t\td = Math.sin(y);\n\t\t\tconst e = Math.cos(z),\n\t\t\t\t\t\tf = Math.sin(z);\n\n\t\t\tif (euler.order === 'XYZ') {\n\t\t\t\tconst ae = a * e,\n\t\t\t\t\t\t\taf = a * f,\n\t\t\t\t\t\t\tbe = b * e,\n\t\t\t\t\t\t\tbf = b * f;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = -c * f;\n\t\t\t\tte[8] = d;\n\t\t\t\tte[1] = af + be * d;\n\t\t\t\tte[5] = ae - bf * d;\n\t\t\t\tte[9] = -b * c;\n\t\t\t\tte[2] = bf - ae * d;\n\t\t\t\tte[6] = be + af * d;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'YXZ') {\n\t\t\t\tconst ce = c * e,\n\t\t\t\t\t\t\tcf = c * f,\n\t\t\t\t\t\t\tde = d * e,\n\t\t\t\t\t\t\tdf = d * f;\n\t\t\t\tte[0] = ce + df * b;\n\t\t\t\tte[4] = de * b - cf;\n\t\t\t\tte[8] = a * d;\n\t\t\t\tte[1] = a * f;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = -b;\n\t\t\t\tte[2] = cf * b - de;\n\t\t\t\tte[6] = df + ce * b;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'ZXY') {\n\t\t\t\tconst ce = c * e,\n\t\t\t\t\t\t\tcf = c * f,\n\t\t\t\t\t\t\tde = d * e,\n\t\t\t\t\t\t\tdf = d * f;\n\t\t\t\tte[0] = ce - df * b;\n\t\t\t\tte[4] = -a * f;\n\t\t\t\tte[8] = de + cf * b;\n\t\t\t\tte[1] = cf + de * b;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = df - ce * b;\n\t\t\t\tte[2] = -a * d;\n\t\t\t\tte[6] = b;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'ZYX') {\n\t\t\t\tconst ae = a * e,\n\t\t\t\t\t\t\taf = a * f,\n\t\t\t\t\t\t\tbe = b * e,\n\t\t\t\t\t\t\tbf = b * f;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = be * d - af;\n\t\t\t\tte[8] = ae * d + bf;\n\t\t\t\tte[1] = c * f;\n\t\t\t\tte[5] = bf * d + ae;\n\t\t\t\tte[9] = af * d - be;\n\t\t\t\tte[2] = -d;\n\t\t\t\tte[6] = b * c;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'YZX') {\n\t\t\t\tconst ac = a * c,\n\t\t\t\t\t\t\tad = a * d,\n\t\t\t\t\t\t\tbc = b * c,\n\t\t\t\t\t\t\tbd = b * d;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = bd - ac * f;\n\t\t\t\tte[8] = bc * f + ad;\n\t\t\t\tte[1] = f;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = -b * e;\n\t\t\t\tte[2] = -d * e;\n\t\t\t\tte[6] = ad * f + bc;\n\t\t\t\tte[10] = ac - bd * f;\n\t\t\t} else if (euler.order === 'XZY') {\n\t\t\t\tconst ac = a * c,\n\t\t\t\t\t\t\tad = a * d,\n\t\t\t\t\t\t\tbc = b * c,\n\t\t\t\t\t\t\tbd = b * d;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = -f;\n\t\t\t\tte[8] = d * e;\n\t\t\t\tte[1] = ac * f + bd;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = ad * f - bc;\n\t\t\t\tte[2] = bc * f - ad;\n\t\t\t\tte[6] = b * e;\n\t\t\t\tte[10] = bd * f + ac;\n\t\t\t} // bottom row\n\n\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = 0; // last column\n\n\t\t\tte[12] = 0;\n\t\t\tte[13] = 0;\n\t\t\tte[14] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationFromQuaternion(q) {\n\t\t\treturn this.compose(_zero, q, _one);\n\t\t}\n\n\t\tlookAt(eye, target, up) {\n\t\t\tconst te = this.elements;\n\n\t\t\t_z.subVectors(eye, target);\n\n\t\t\tif (_z.lengthSq() === 0) {\n\t\t\t\t// eye and target are in the same position\n\t\t\t\t_z.z = 1;\n\t\t\t}\n\n\t\t\t_z.normalize();\n\n\t\t\t_x.crossVectors(up, _z);\n\n\t\t\tif (_x.lengthSq() === 0) {\n\t\t\t\t// up and z are parallel\n\t\t\t\tif (Math.abs(up.z) === 1) {\n\t\t\t\t\t_z.x += 0.0001;\n\t\t\t\t} else {\n\t\t\t\t\t_z.z += 0.0001;\n\t\t\t\t}\n\n\t\t\t\t_z.normalize();\n\n\t\t\t\t_x.crossVectors(up, _z);\n\t\t\t}\n\n\t\t\t_x.normalize();\n\n\t\t\t_y.crossVectors(_z, _x);\n\n\t\t\tte[0] = _x.x;\n\t\t\tte[4] = _y.x;\n\t\t\tte[8] = _z.x;\n\t\t\tte[1] = _x.y;\n\t\t\tte[5] = _y.y;\n\t\t\tte[9] = _z.y;\n\t\t\tte[2] = _x.z;\n\t\t\tte[6] = _y.z;\n\t\t\tte[10] = _z.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(m, n) {\n\t\t\tif (n !== undefined) {\n\t\t\t\tconsole.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n\t\t\t\treturn this.multiplyMatrices(m, n);\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices(this, m);\n\t\t}\n\n\t\tpremultiply(m) {\n\t\t\treturn this.multiplyMatrices(m, this);\n\t\t}\n\n\t\tmultiplyMatrices(a, b) {\n\t\t\tconst ae = a.elements;\n\t\t\tconst be = b.elements;\n\t\t\tconst te = this.elements;\n\t\t\tconst a11 = ae[0],\n\t\t\t\t\t\ta12 = ae[4],\n\t\t\t\t\t\ta13 = ae[8],\n\t\t\t\t\t\ta14 = ae[12];\n\t\t\tconst a21 = ae[1],\n\t\t\t\t\t\ta22 = ae[5],\n\t\t\t\t\t\ta23 = ae[9],\n\t\t\t\t\t\ta24 = ae[13];\n\t\t\tconst a31 = ae[2],\n\t\t\t\t\t\ta32 = ae[6],\n\t\t\t\t\t\ta33 = ae[10],\n\t\t\t\t\t\ta34 = ae[14];\n\t\t\tconst a41 = ae[3],\n\t\t\t\t\t\ta42 = ae[7],\n\t\t\t\t\t\ta43 = ae[11],\n\t\t\t\t\t\ta44 = ae[15];\n\t\t\tconst b11 = be[0],\n\t\t\t\t\t\tb12 = be[4],\n\t\t\t\t\t\tb13 = be[8],\n\t\t\t\t\t\tb14 = be[12];\n\t\t\tconst b21 = be[1],\n\t\t\t\t\t\tb22 = be[5],\n\t\t\t\t\t\tb23 = be[9],\n\t\t\t\t\t\tb24 = be[13];\n\t\t\tconst b31 = be[2],\n\t\t\t\t\t\tb32 = be[6],\n\t\t\t\t\t\tb33 = be[10],\n\t\t\t\t\t\tb34 = be[14];\n\t\t\tconst b41 = be[3],\n\t\t\t\t\t\tb42 = be[7],\n\t\t\t\t\t\tb43 = be[11],\n\t\t\t\t\t\tb44 = be[15];\n\t\t\tte[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\t\t\tte[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\t\t\tte[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\t\t\tte[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(s) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] *= s;\n\t\t\tte[4] *= s;\n\t\t\tte[8] *= s;\n\t\t\tte[12] *= s;\n\t\t\tte[1] *= s;\n\t\t\tte[5] *= s;\n\t\t\tte[9] *= s;\n\t\t\tte[13] *= s;\n\t\t\tte[2] *= s;\n\t\t\tte[6] *= s;\n\t\t\tte[10] *= s;\n\t\t\tte[14] *= s;\n\t\t\tte[3] *= s;\n\t\t\tte[7] *= s;\n\t\t\tte[11] *= s;\n\t\t\tte[15] *= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tdeterminant() {\n\t\t\tconst te = this.elements;\n\t\t\tconst n11 = te[0],\n\t\t\t\t\t\tn12 = te[4],\n\t\t\t\t\t\tn13 = te[8],\n\t\t\t\t\t\tn14 = te[12];\n\t\t\tconst n21 = te[1],\n\t\t\t\t\t\tn22 = te[5],\n\t\t\t\t\t\tn23 = te[9],\n\t\t\t\t\t\tn24 = te[13];\n\t\t\tconst n31 = te[2],\n\t\t\t\t\t\tn32 = te[6],\n\t\t\t\t\t\tn33 = te[10],\n\t\t\t\t\t\tn34 = te[14];\n\t\t\tconst n41 = te[3],\n\t\t\t\t\t\tn42 = te[7],\n\t\t\t\t\t\tn43 = te[11],\n\t\t\t\t\t\tn44 = te[15]; //TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n\t\t}\n\n\t\ttranspose() {\n\t\t\tconst te = this.elements;\n\t\t\tlet tmp;\n\t\t\ttmp = te[1];\n\t\t\tte[1] = te[4];\n\t\t\tte[4] = tmp;\n\t\t\ttmp = te[2];\n\t\t\tte[2] = te[8];\n\t\t\tte[8] = tmp;\n\t\t\ttmp = te[6];\n\t\t\tte[6] = te[9];\n\t\t\tte[9] = tmp;\n\t\t\ttmp = te[3];\n\t\t\tte[3] = te[12];\n\t\t\tte[12] = tmp;\n\t\t\ttmp = te[7];\n\t\t\tte[7] = te[13];\n\t\t\tte[13] = tmp;\n\t\t\ttmp = te[11];\n\t\t\tte[11] = te[14];\n\t\t\tte[14] = tmp;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetPosition(x, y, z) {\n\t\t\tconst te = this.elements;\n\n\t\t\tif (x.isVector3) {\n\t\t\t\tte[12] = x.x;\n\t\t\t\tte[13] = x.y;\n\t\t\t\tte[14] = x.z;\n\t\t\t} else {\n\t\t\t\tte[12] = x;\n\t\t\t\tte[13] = y;\n\t\t\t\tte[14] = z;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tinvert() {\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tconst te = this.elements,\n\t\t\t\t\t\tn11 = te[0],\n\t\t\t\t\t\tn21 = te[1],\n\t\t\t\t\t\tn31 = te[2],\n\t\t\t\t\t\tn41 = te[3],\n\t\t\t\t\t\tn12 = te[4],\n\t\t\t\t\t\tn22 = te[5],\n\t\t\t\t\t\tn32 = te[6],\n\t\t\t\t\t\tn42 = te[7],\n\t\t\t\t\t\tn13 = te[8],\n\t\t\t\t\t\tn23 = te[9],\n\t\t\t\t\t\tn33 = te[10],\n\t\t\t\t\t\tn43 = te[11],\n\t\t\t\t\t\tn14 = te[12],\n\t\t\t\t\t\tn24 = te[13],\n\t\t\t\t\t\tn34 = te[14],\n\t\t\t\t\t\tn44 = te[15],\n\t\t\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\t\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\t\t\tif (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n\t\t\tconst detInv = 1 / det;\n\t\t\tte[0] = t11 * detInv;\n\t\t\tte[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n\t\t\tte[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n\t\t\tte[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n\t\t\tte[4] = t12 * detInv;\n\t\t\tte[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n\t\t\tte[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n\t\t\tte[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n\t\t\tte[8] = t13 * detInv;\n\t\t\tte[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n\t\t\tte[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n\t\t\tte[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n\t\t\tte[12] = t14 * detInv;\n\t\t\tte[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n\t\t\tte[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n\t\t\tte[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(v) {\n\t\t\tconst te = this.elements;\n\t\t\tconst x = v.x,\n\t\t\t\t\t\ty = v.y,\n\t\t\t\t\t\tz = v.z;\n\t\t\tte[0] *= x;\n\t\t\tte[4] *= y;\n\t\t\tte[8] *= z;\n\t\t\tte[1] *= x;\n\t\t\tte[5] *= y;\n\t\t\tte[9] *= z;\n\t\t\tte[2] *= x;\n\t\t\tte[6] *= y;\n\t\t\tte[10] *= z;\n\t\t\tte[3] *= x;\n\t\t\tte[7] *= y;\n\t\t\tte[11] *= z;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetMaxScaleOnAxis() {\n\t\t\tconst te = this.elements;\n\t\t\tconst scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n\t\t\tconst scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n\t\t\tconst scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n\t\t\treturn Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n\t\t}\n\n\t\tmakeTranslation(x, y, z) {\n\t\t\tthis.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationX(theta) {\n\t\t\tconst c = Math.cos(theta),\n\t\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationY(theta) {\n\t\t\tconst c = Math.cos(theta),\n\t\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationZ(theta) {\n\t\t\tconst c = Math.cos(theta),\n\t\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationAxis(axis, angle) {\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\t\t\tconst c = Math.cos(angle);\n\t\t\tconst s = Math.sin(angle);\n\t\t\tconst t = 1 - c;\n\t\t\tconst x = axis.x,\n\t\t\t\t\t\ty = axis.y,\n\t\t\t\t\t\tz = axis.z;\n\t\t\tconst tx = t * x,\n\t\t\t\t\t\tty = t * y;\n\t\t\tthis.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeScale(x, y, z) {\n\t\t\tthis.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeShear(xy, xz, yx, yz, zx, zy) {\n\t\t\tthis.set(1, yx, zx, 0, xy, 1, zy, 0, xz, yz, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tcompose(position, quaternion, scale) {\n\t\t\tconst te = this.elements;\n\t\t\tconst x = quaternion._x,\n\t\t\t\t\t\ty = quaternion._y,\n\t\t\t\t\t\tz = quaternion._z,\n\t\t\t\t\t\tw = quaternion._w;\n\t\t\tconst x2 = x + x,\n\t\t\t\t\t\ty2 = y + y,\n\t\t\t\t\t\tz2 = z + z;\n\t\t\tconst xx = x * x2,\n\t\t\t\t\t\txy = x * y2,\n\t\t\t\t\t\txz = x * z2;\n\t\t\tconst yy = y * y2,\n\t\t\t\t\t\tyz = y * z2,\n\t\t\t\t\t\tzz = z * z2;\n\t\t\tconst wx = w * x2,\n\t\t\t\t\t\twy = w * y2,\n\t\t\t\t\t\twz = w * z2;\n\t\t\tconst sx = scale.x,\n\t\t\t\t\t\tsy = scale.y,\n\t\t\t\t\t\tsz = scale.z;\n\t\t\tte[0] = (1 - (yy + zz)) * sx;\n\t\t\tte[1] = (xy + wz) * sx;\n\t\t\tte[2] = (xz - wy) * sx;\n\t\t\tte[3] = 0;\n\t\t\tte[4] = (xy - wz) * sy;\n\t\t\tte[5] = (1 - (xx + zz)) * sy;\n\t\t\tte[6] = (yz + wx) * sy;\n\t\t\tte[7] = 0;\n\t\t\tte[8] = (xz + wy) * sz;\n\t\t\tte[9] = (yz - wx) * sz;\n\t\t\tte[10] = (1 - (xx + yy)) * sz;\n\t\t\tte[11] = 0;\n\t\t\tte[12] = position.x;\n\t\t\tte[13] = position.y;\n\t\t\tte[14] = position.z;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tdecompose(position, quaternion, scale) {\n\t\t\tconst te = this.elements;\n\n\t\t\tlet sx = _v1$5.set(te[0], te[1], te[2]).length();\n\n\t\t\tconst sy = _v1$5.set(te[4], te[5], te[6]).length();\n\n\t\t\tconst sz = _v1$5.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n\n\t\t\tconst det = this.determinant();\n\t\t\tif (det < 0) sx = -sx;\n\t\t\tposition.x = te[12];\n\t\t\tposition.y = te[13];\n\t\t\tposition.z = te[14]; // scale the rotation part\n\n\t\t\t_m1$2.copy(this);\n\n\t\t\tconst invSX = 1 / sx;\n\t\t\tconst invSY = 1 / sy;\n\t\t\tconst invSZ = 1 / sz;\n\t\t\t_m1$2.elements[0] *= invSX;\n\t\t\t_m1$2.elements[1] *= invSX;\n\t\t\t_m1$2.elements[2] *= invSX;\n\t\t\t_m1$2.elements[4] *= invSY;\n\t\t\t_m1$2.elements[5] *= invSY;\n\t\t\t_m1$2.elements[6] *= invSY;\n\t\t\t_m1$2.elements[8] *= invSZ;\n\t\t\t_m1$2.elements[9] *= invSZ;\n\t\t\t_m1$2.elements[10] *= invSZ;\n\t\t\tquaternion.setFromRotationMatrix(_m1$2);\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakePerspective(left, right, top, bottom, near, far) {\n\t\t\tif (far === undefined) {\n\t\t\t\tconsole.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');\n\t\t\t}\n\n\t\t\tconst te = this.elements;\n\t\t\tconst x = 2 * near / (right - left);\n\t\t\tconst y = 2 * near / (top - bottom);\n\t\t\tconst a = (right + left) / (right - left);\n\t\t\tconst b = (top + bottom) / (top - bottom);\n\t\t\tconst c = -(far + near) / (far - near);\n\t\t\tconst d = -2 * far * near / (far - near);\n\t\t\tte[0] = x;\n\t\t\tte[4] = 0;\n\t\t\tte[8] = a;\n\t\t\tte[12] = 0;\n\t\t\tte[1] = 0;\n\t\t\tte[5] = y;\n\t\t\tte[9] = b;\n\t\t\tte[13] = 0;\n\t\t\tte[2] = 0;\n\t\t\tte[6] = 0;\n\t\t\tte[10] = c;\n\t\t\tte[14] = d;\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = -1;\n\t\t\tte[15] = 0;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeOrthographic(left, right, top, bottom, near, far) {\n\t\t\tconst te = this.elements;\n\t\t\tconst w = 1.0 / (right - left);\n\t\t\tconst h = 1.0 / (top - bottom);\n\t\t\tconst p = 1.0 / (far - near);\n\t\t\tconst x = (right + left) * w;\n\t\t\tconst y = (top + bottom) * h;\n\t\t\tconst z = (far + near) * p;\n\t\t\tte[0] = 2 * w;\n\t\t\tte[4] = 0;\n\t\t\tte[8] = 0;\n\t\t\tte[12] = -x;\n\t\t\tte[1] = 0;\n\t\t\tte[5] = 2 * h;\n\t\t\tte[9] = 0;\n\t\t\tte[13] = -y;\n\t\t\tte[2] = 0;\n\t\t\tte[6] = 0;\n\t\t\tte[10] = -2 * p;\n\t\t\tte[14] = -z;\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(matrix) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = matrix.elements;\n\n\t\t\tfor (let i = 0; i < 16; i++) {\n\t\t\t\tif (te[i] !== me[i]) return false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tfor (let i = 0; i < 16; i++) {\n\t\t\t\tthis.elements[i] = array[i + offset];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tconst te = this.elements;\n\t\t\tarray[offset] = te[0];\n\t\t\tarray[offset + 1] = te[1];\n\t\t\tarray[offset + 2] = te[2];\n\t\t\tarray[offset + 3] = te[3];\n\t\t\tarray[offset + 4] = te[4];\n\t\t\tarray[offset + 5] = te[5];\n\t\t\tarray[offset + 6] = te[6];\n\t\t\tarray[offset + 7] = te[7];\n\t\t\tarray[offset + 8] = te[8];\n\t\t\tarray[offset + 9] = te[9];\n\t\t\tarray[offset + 10] = te[10];\n\t\t\tarray[offset + 11] = te[11];\n\t\t\tarray[offset + 12] = te[12];\n\t\t\tarray[offset + 13] = te[13];\n\t\t\tarray[offset + 14] = te[14];\n\t\t\tarray[offset + 15] = te[15];\n\t\t\treturn array;\n\t\t}\n\n\t}\n\n\tMatrix4.prototype.isMatrix4 = true;\n\n\tconst _v1$5 = /*@__PURE__*/new Vector3();\n\n\tconst _m1$2 = /*@__PURE__*/new Matrix4();\n\n\tconst _zero = /*@__PURE__*/new Vector3(0, 0, 0);\n\n\tconst _one = /*@__PURE__*/new Vector3(1, 1, 1);\n\n\tconst _x = /*@__PURE__*/new Vector3();\n\n\tconst _y = /*@__PURE__*/new Vector3();\n\n\tconst _z = /*@__PURE__*/new Vector3();\n\n\tconst _matrix$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _quaternion$3 = /*@__PURE__*/new Quaternion();\n\n\tclass Euler {\n\t\tconstructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order;\n\t\t}\n\n\t\tget x() {\n\t\t\treturn this._x;\n\t\t}\n\n\t\tset x(value) {\n\t\t\tthis._x = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget y() {\n\t\t\treturn this._y;\n\t\t}\n\n\t\tset y(value) {\n\t\t\tthis._y = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget z() {\n\t\t\treturn this._z;\n\t\t}\n\n\t\tset z(value) {\n\t\t\tthis._z = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget order() {\n\t\t\treturn this._order;\n\t\t}\n\n\t\tset order(value) {\n\t\t\tthis._order = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tset(x, y, z, order = this._order) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this._x, this._y, this._z, this._order);\n\t\t}\n\n\t\tcopy(euler) {\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromRotationMatrix(m, order = this._order, update = true) {\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tconst te = m.elements;\n\t\t\tconst m11 = te[0],\n\t\t\t\t\t\tm12 = te[4],\n\t\t\t\t\t\tm13 = te[8];\n\t\t\tconst m21 = te[1],\n\t\t\t\t\t\tm22 = te[5],\n\t\t\t\t\t\tm23 = te[9];\n\t\t\tconst m31 = te[2],\n\t\t\t\t\t\tm32 = te[6],\n\t\t\t\t\t\tm33 = te[10];\n\n\t\t\tswitch (order) {\n\t\t\t\tcase 'XYZ':\n\t\t\t\t\tthis._y = Math.asin(clamp(m13, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m13) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m22);\n\t\t\t\t\t\tthis._z = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\t\t\t\t\tthis._x = Math.asin(-clamp(m23, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m23) < 0.9999999) {\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m22);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m11);\n\t\t\t\t\t\tthis._z = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\t\t\t\t\tthis._x = Math.asin(clamp(m32, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m32) < 0.9999999) {\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m22);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._y = 0;\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m11);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\t\t\t\t\tthis._y = Math.asin(-clamp(m31, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m31) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m22);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\t\t\t\t\tthis._z = Math.asin(clamp(m21, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m21) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m22);\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m33);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\t\t\t\t\tthis._z = Math.asin(-clamp(m12, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m12) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m22);\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m33);\n\t\t\t\t\t\tthis._y = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order);\n\t\t\t}\n\n\t\t\tthis._order = order;\n\t\t\tif (update === true) this._onChangeCallback();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromQuaternion(q, order, update) {\n\t\t\t_matrix$1.makeRotationFromQuaternion(q);\n\n\t\t\treturn this.setFromRotationMatrix(_matrix$1, order, update);\n\t\t}\n\n\t\tsetFromVector3(v, order = this._order) {\n\t\t\treturn this.set(v.x, v.y, v.z, order);\n\t\t}\n\n\t\treorder(newOrder) {\n\t\t\t// WARNING: this discards revolution information -bhouston\n\t\t\t_quaternion$3.setFromEuler(this);\n\n\t\t\treturn this.setFromQuaternion(_quaternion$3, newOrder);\n\t\t}\n\n\t\tequals(euler) {\n\t\t\treturn euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n\t\t}\n\n\t\tfromArray(array) {\n\t\t\tthis._x = array[0];\n\t\t\tthis._y = array[1];\n\t\t\tthis._z = array[2];\n\t\t\tif (array[3] !== undefined) this._order = array[3];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this._x;\n\t\t\tarray[offset + 1] = this._y;\n\t\t\tarray[offset + 2] = this._z;\n\t\t\tarray[offset + 3] = this._order;\n\t\t\treturn array;\n\t\t}\n\n\t\ttoVector3(optionalResult) {\n\t\t\tif (optionalResult) {\n\t\t\t\treturn optionalResult.set(this._x, this._y, this._z);\n\t\t\t} else {\n\t\t\t\treturn new Vector3(this._x, this._y, this._z);\n\t\t\t}\n\t\t}\n\n\t\t_onChange(callback) {\n\t\t\tthis._onChangeCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\t_onChangeCallback() {}\n\n\t}\n\n\tEuler.prototype.isEuler = true;\n\tEuler.DefaultOrder = 'XYZ';\n\tEuler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\n\n\tclass Layers {\n\t\tconstructor() {\n\t\t\tthis.mask = 1 | 0;\n\t\t}\n\n\t\tset(channel) {\n\t\t\tthis.mask = 1 << channel | 0;\n\t\t}\n\n\t\tenable(channel) {\n\t\t\tthis.mask |= 1 << channel | 0;\n\t\t}\n\n\t\tenableAll() {\n\t\t\tthis.mask = 0xffffffff | 0;\n\t\t}\n\n\t\ttoggle(channel) {\n\t\t\tthis.mask ^= 1 << channel | 0;\n\t\t}\n\n\t\tdisable(channel) {\n\t\t\tthis.mask &= ~(1 << channel | 0);\n\t\t}\n\n\t\tdisableAll() {\n\t\t\tthis.mask = 0;\n\t\t}\n\n\t\ttest(layers) {\n\t\t\treturn (this.mask & layers.mask) !== 0;\n\t\t}\n\n\t}\n\n\tlet _object3DId = 0;\n\n\tconst _v1$4 = /*@__PURE__*/new Vector3();\n\n\tconst _q1 = /*@__PURE__*/new Quaternion();\n\n\tconst _m1$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _target = /*@__PURE__*/new Vector3();\n\n\tconst _position$3 = /*@__PURE__*/new Vector3();\n\n\tconst _scale$2 = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion$2 = /*@__PURE__*/new Quaternion();\n\n\tconst _xAxis = /*@__PURE__*/new Vector3(1, 0, 0);\n\n\tconst _yAxis = /*@__PURE__*/new Vector3(0, 1, 0);\n\n\tconst _zAxis = /*@__PURE__*/new Vector3(0, 0, 1);\n\n\tconst _addedEvent = {\n\t\ttype: 'added'\n\t};\n\tconst _removedEvent = {\n\t\ttype: 'removed'\n\t};\n\n\tclass Object3D extends EventDispatcher {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: _object3DId++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'Object3D';\n\t\t\tthis.parent = null;\n\t\t\tthis.children = [];\n\t\t\tthis.up = Object3D.DefaultUp.clone();\n\t\t\tconst position = new Vector3();\n\t\t\tconst rotation = new Euler();\n\t\t\tconst quaternion = new Quaternion();\n\t\t\tconst scale = new Vector3(1, 1, 1);\n\n\t\t\tfunction onRotationChange() {\n\t\t\t\tquaternion.setFromEuler(rotation, false);\n\t\t\t}\n\n\t\t\tfunction onQuaternionChange() {\n\t\t\t\trotation.setFromQuaternion(quaternion, undefined, false);\n\t\t\t}\n\n\t\t\trotation._onChange(onRotationChange);\n\n\t\t\tquaternion._onChange(onQuaternionChange);\n\n\t\t\tObject.defineProperties(this, {\n\t\t\t\tposition: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: position\n\t\t\t\t},\n\t\t\t\trotation: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: rotation\n\t\t\t\t},\n\t\t\t\tquaternion: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: quaternion\n\t\t\t\t},\n\t\t\t\tscale: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: scale\n\t\t\t\t},\n\t\t\t\tmodelViewMatrix: {\n\t\t\t\t\tvalue: new Matrix4()\n\t\t\t\t},\n\t\t\t\tnormalMatrix: {\n\t\t\t\t\tvalue: new Matrix3()\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.matrix = new Matrix4();\n\t\t\tthis.matrixWorld = new Matrix4();\n\t\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\t\t\tthis.layers = new Layers();\n\t\t\tthis.visible = true;\n\t\t\tthis.castShadow = false;\n\t\t\tthis.receiveShadow = false;\n\t\t\tthis.frustumCulled = true;\n\t\t\tthis.renderOrder = 0;\n\t\t\tthis.animations = [];\n\t\t\tthis.userData = {};\n\t\t}\n\n\t\tonBeforeRender() {}\n\n\t\tonAfterRender() {}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\t\t\tthis.matrix.premultiply(matrix);\n\t\t\tthis.matrix.decompose(this.position, this.quaternion, this.scale);\n\t\t}\n\n\t\tapplyQuaternion(q) {\n\t\t\tthis.quaternion.premultiply(q);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetRotationFromAxisAngle(axis, angle) {\n\t\t\t// assumes axis is normalized\n\t\t\tthis.quaternion.setFromAxisAngle(axis, angle);\n\t\t}\n\n\t\tsetRotationFromEuler(euler) {\n\t\t\tthis.quaternion.setFromEuler(euler, true);\n\t\t}\n\n\t\tsetRotationFromMatrix(m) {\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tthis.quaternion.setFromRotationMatrix(m);\n\t\t}\n\n\t\tsetRotationFromQuaternion(q) {\n\t\t\t// assumes q is normalized\n\t\t\tthis.quaternion.copy(q);\n\t\t}\n\n\t\trotateOnAxis(axis, angle) {\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\t\t\t_q1.setFromAxisAngle(axis, angle);\n\n\t\t\tthis.quaternion.multiply(_q1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateOnWorldAxis(axis, angle) {\n\t\t\t// rotate object on axis in world space\n\t\t\t// axis is assumed to be normalized\n\t\t\t// method assumes no rotated parent\n\t\t\t_q1.setFromAxisAngle(axis, angle);\n\n\t\t\tthis.quaternion.premultiply(_q1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateX(angle) {\n\t\t\treturn this.rotateOnAxis(_xAxis, angle);\n\t\t}\n\n\t\trotateY(angle) {\n\t\t\treturn this.rotateOnAxis(_yAxis, angle);\n\t\t}\n\n\t\trotateZ(angle) {\n\t\t\treturn this.rotateOnAxis(_zAxis, angle);\n\t\t}\n\n\t\ttranslateOnAxis(axis, distance) {\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\t\t\t_v1$4.copy(axis).applyQuaternion(this.quaternion);\n\n\t\t\tthis.position.add(_v1$4.multiplyScalar(distance));\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslateX(distance) {\n\t\t\treturn this.translateOnAxis(_xAxis, distance);\n\t\t}\n\n\t\ttranslateY(distance) {\n\t\t\treturn this.translateOnAxis(_yAxis, distance);\n\t\t}\n\n\t\ttranslateZ(distance) {\n\t\t\treturn this.translateOnAxis(_zAxis, distance);\n\t\t}\n\n\t\tlocalToWorld(vector) {\n\t\t\treturn vector.applyMatrix4(this.matrixWorld);\n\t\t}\n\n\t\tworldToLocal(vector) {\n\t\t\treturn vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());\n\t\t}\n\n\t\tlookAt(x, y, z) {\n\t\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\t\t\tif (x.isVector3) {\n\t\t\t\t_target.copy(x);\n\t\t\t} else {\n\t\t\t\t_target.set(x, y, z);\n\t\t\t}\n\n\t\t\tconst parent = this.parent;\n\t\t\tthis.updateWorldMatrix(true, false);\n\n\t\t\t_position$3.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\tif (this.isCamera || this.isLight) {\n\t\t\t\t_m1$1.lookAt(_position$3, _target, this.up);\n\t\t\t} else {\n\t\t\t\t_m1$1.lookAt(_target, _position$3, this.up);\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix(_m1$1);\n\n\t\t\tif (parent) {\n\t\t\t\t_m1$1.extractRotation(parent.matrixWorld);\n\n\t\t\t\t_q1.setFromRotationMatrix(_m1$1);\n\n\t\t\t\tthis.quaternion.premultiply(_q1.invert());\n\t\t\t}\n\t\t}\n\n\t\tadd(object) {\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\t\t\tthis.add(arguments[i]);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (object === this) {\n\t\t\t\tconsole.error('THREE.Object3D.add: object can\\'t be added as a child of itself.', object);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (object && object.isObject3D) {\n\t\t\t\tif (object.parent !== null) {\n\t\t\t\t\tobject.parent.remove(object);\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tthis.children.push(object);\n\t\t\t\tobject.dispatchEvent(_addedEvent);\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Object3D.add: object not an instance of THREE.Object3D.', object);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tremove(object) {\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\t\t\tthis.remove(arguments[i]);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst index = this.children.indexOf(object);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tobject.parent = null;\n\t\t\t\tthis.children.splice(index, 1);\n\t\t\t\tobject.dispatchEvent(_removedEvent);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tremoveFromParent() {\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (parent !== null) {\n\t\t\t\tparent.remove(this);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclear() {\n\t\t\tfor (let i = 0; i < this.children.length; i++) {\n\t\t\t\tconst object = this.children[i];\n\t\t\t\tobject.parent = null;\n\t\t\t\tobject.dispatchEvent(_removedEvent);\n\t\t\t}\n\n\t\t\tthis.children.length = 0;\n\t\t\treturn this;\n\t\t}\n\n\t\tattach(object) {\n\t\t\t// adds object as a child of this, while maintaining the object's world transform\n\t\t\tthis.updateWorldMatrix(true, false);\n\n\t\t\t_m1$1.copy(this.matrixWorld).invert();\n\n\t\t\tif (object.parent !== null) {\n\t\t\t\tobject.parent.updateWorldMatrix(true, false);\n\n\t\t\t\t_m1$1.multiply(object.parent.matrixWorld);\n\t\t\t}\n\n\t\t\tobject.applyMatrix4(_m1$1);\n\t\t\tthis.add(object);\n\t\t\tobject.updateWorldMatrix(false, true);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetObjectById(id) {\n\t\t\treturn this.getObjectByProperty('id', id);\n\t\t}\n\n\t\tgetObjectByName(name) {\n\t\t\treturn this.getObjectByProperty('name', name);\n\t\t}\n\n\t\tgetObjectByProperty(name, value) {\n\t\t\tif (this[name] === value) return this;\n\n\t\t\tfor (let i = 0, l = this.children.length; i < l; i++) {\n\t\t\t\tconst child = this.children[i];\n\t\t\t\tconst object = child.getObjectByProperty(name, value);\n\n\t\t\t\tif (object !== undefined) {\n\t\t\t\t\treturn object;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tgetWorldPosition(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\treturn target.setFromMatrixPosition(this.matrixWorld);\n\t\t}\n\n\t\tgetWorldQuaternion(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tthis.matrixWorld.decompose(_position$3, target, _scale$2);\n\t\t\treturn target;\n\t\t}\n\n\t\tgetWorldScale(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tthis.matrixWorld.decompose(_position$3, _quaternion$2, target);\n\t\t\treturn target;\n\t\t}\n\n\t\tgetWorldDirection(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tconst e = this.matrixWorld.elements;\n\t\t\treturn target.set(e[8], e[9], e[10]).normalize();\n\t\t}\n\n\t\traycast() {}\n\n\t\ttraverse(callback) {\n\t\t\tcallback(this);\n\t\t\tconst children = this.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].traverse(callback);\n\t\t\t}\n\t\t}\n\n\t\ttraverseVisible(callback) {\n\t\t\tif (this.visible === false) return;\n\t\t\tcallback(this);\n\t\t\tconst children = this.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].traverseVisible(callback);\n\t\t\t}\n\t\t}\n\n\t\ttraverseAncestors(callback) {\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (parent !== null) {\n\t\t\t\tcallback(parent);\n\t\t\t\tparent.traverseAncestors(callback);\n\t\t\t}\n\t\t}\n\n\t\tupdateMatrix() {\n\t\t\tthis.matrix.compose(this.position, this.quaternion, this.scale);\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\n\t\t\tif (this.matrixWorldNeedsUpdate || force) {\n\t\t\t\tif (this.parent === null) {\n\t\t\t\t\tthis.matrixWorld.copy(this.matrix);\n\t\t\t\t} else {\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\t\t\t\tforce = true;\n\t\t\t} // update children\n\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].updateMatrixWorld(force);\n\t\t\t}\n\t\t}\n\n\t\tupdateWorldMatrix(updateParents, updateChildren) {\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (updateParents === true && parent !== null) {\n\t\t\t\tparent.updateWorldMatrix(true, false);\n\t\t\t}\n\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\n\t\t\tif (this.parent === null) {\n\t\t\t\tthis.matrixWorld.copy(this.matrix);\n\t\t\t} else {\n\t\t\t\tthis.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n\t\t\t} // update children\n\n\n\t\t\tif (updateChildren === true) {\n\t\t\t\tconst children = this.children;\n\n\t\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tchildren[i].updateWorldMatrix(false, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\t// meta is a string when called from JSON.stringify\n\t\t\tconst isRootObject = meta === undefined || typeof meta === 'string';\n\t\t\tconst output = {}; // meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\n\t\t\tif (isRootObject) {\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {},\n\t\t\t\t\tshapes: {},\n\t\t\t\t\tskeletons: {},\n\t\t\t\t\tanimations: {}\n\t\t\t\t};\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\t\t\t} // standard Object3D serialization\n\n\n\t\t\tconst object = {};\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\t\t\tif (this.name !== '') object.name = this.name;\n\t\t\tif (this.castShadow === true) object.castShadow = true;\n\t\t\tif (this.receiveShadow === true) object.receiveShadow = true;\n\t\t\tif (this.visible === false) object.visible = false;\n\t\t\tif (this.frustumCulled === false) object.frustumCulled = false;\n\t\t\tif (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n\t\t\tif (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n\t\t\tobject.layers = this.layers.mask;\n\t\t\tobject.matrix = this.matrix.toArray();\n\t\t\tif (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; // object specific properties\n\n\t\t\tif (this.isInstancedMesh) {\n\t\t\t\tobject.type = 'InstancedMesh';\n\t\t\t\tobject.count = this.count;\n\t\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\t\tif (this.instanceColor !== null) object.instanceColor = this.instanceColor.toJSON();\n\t\t\t} //\n\n\n\t\t\tfunction serialize(library, element) {\n\t\t\t\tif (library[element.uuid] === undefined) {\n\t\t\t\t\tlibrary[element.uuid] = element.toJSON(meta);\n\t\t\t\t}\n\n\t\t\t\treturn element.uuid;\n\t\t\t}\n\n\t\t\tif (this.isScene) {\n\t\t\t\tif (this.background) {\n\t\t\t\t\tif (this.background.isColor) {\n\t\t\t\t\t\tobject.background = this.background.toJSON();\n\t\t\t\t\t} else if (this.background.isTexture) {\n\t\t\t\t\t\tobject.background = this.background.toJSON(meta).uuid;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.environment && this.environment.isTexture) {\n\t\t\t\t\tobject.environment = this.environment.toJSON(meta).uuid;\n\t\t\t\t}\n\t\t\t} else if (this.isMesh || this.isLine || this.isPoints) {\n\t\t\t\tobject.geometry = serialize(meta.geometries, this.geometry);\n\t\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\t\tif (parameters !== undefined && parameters.shapes !== undefined) {\n\t\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\t\tif (Array.isArray(shapes)) {\n\t\t\t\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\t\t\t\tconst shape = shapes[i];\n\t\t\t\t\t\t\tserialize(meta.shapes, shape);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tserialize(meta.shapes, shapes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isSkinnedMesh) {\n\t\t\t\tobject.bindMode = this.bindMode;\n\t\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\t\tif (this.skeleton !== undefined) {\n\t\t\t\t\tserialize(meta.skeletons, this.skeleton);\n\t\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.material !== undefined) {\n\t\t\t\tif (Array.isArray(this.material)) {\n\t\t\t\t\tconst uuids = [];\n\n\t\t\t\t\tfor (let i = 0, l = this.material.length; i < l; i++) {\n\t\t\t\t\t\tuuids.push(serialize(meta.materials, this.material[i]));\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.material = uuids;\n\t\t\t\t} else {\n\t\t\t\t\tobject.material = serialize(meta.materials, this.material);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tif (this.children.length > 0) {\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor (let i = 0; i < this.children.length; i++) {\n\t\t\t\t\tobject.children.push(this.children[i].toJSON(meta).object);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tif (this.animations.length > 0) {\n\t\t\t\tobject.animations = [];\n\n\t\t\t\tfor (let i = 0; i < this.animations.length; i++) {\n\t\t\t\t\tconst animation = this.animations[i];\n\t\t\t\t\tobject.animations.push(serialize(meta.animations, animation));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRootObject) {\n\t\t\t\tconst geometries = extractFromCache(meta.geometries);\n\t\t\t\tconst materials = extractFromCache(meta.materials);\n\t\t\t\tconst textures = extractFromCache(meta.textures);\n\t\t\t\tconst images = extractFromCache(meta.images);\n\t\t\t\tconst shapes = extractFromCache(meta.shapes);\n\t\t\t\tconst skeletons = extractFromCache(meta.skeletons);\n\t\t\t\tconst animations = extractFromCache(meta.animations);\n\t\t\t\tif (geometries.length > 0) output.geometries = geometries;\n\t\t\t\tif (materials.length > 0) output.materials = materials;\n\t\t\t\tif (textures.length > 0) output.textures = textures;\n\t\t\t\tif (images.length > 0) output.images = images;\n\t\t\t\tif (shapes.length > 0) output.shapes = shapes;\n\t\t\t\tif (skeletons.length > 0) output.skeletons = skeletons;\n\t\t\t\tif (animations.length > 0) output.animations = animations;\n\t\t\t}\n\n\t\t\toutput.object = object;\n\t\t\treturn output; // extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\n\t\t\tfunction extractFromCache(cache) {\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor (const key in cache) {\n\t\t\t\t\tconst data = cache[key];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push(data);\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\n\t\tclone(recursive) {\n\t\t\treturn new this.constructor().copy(this, recursive);\n\t\t}\n\n\t\tcopy(source, recursive = true) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.up.copy(source.up);\n\t\t\tthis.position.copy(source.position);\n\t\t\tthis.rotation.order = source.rotation.order;\n\t\t\tthis.quaternion.copy(source.quaternion);\n\t\t\tthis.scale.copy(source.scale);\n\t\t\tthis.matrix.copy(source.matrix);\n\t\t\tthis.matrixWorld.copy(source.matrixWorld);\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\t\t\tthis.layers.mask = source.layers.mask;\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\n\n\t\t\tif (recursive === true) {\n\t\t\t\tfor (let i = 0; i < source.children.length; i++) {\n\t\t\t\t\tconst child = source.children[i];\n\t\t\t\t\tthis.add(child.clone());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tObject3D.DefaultUp = new Vector3(0, 1, 0);\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\tObject3D.prototype.isObject3D = true;\n\n\tconst _v0$1 = /*@__PURE__*/new Vector3();\n\n\tconst _v1$3 = /*@__PURE__*/new Vector3();\n\n\tconst _v2$2 = /*@__PURE__*/new Vector3();\n\n\tconst _v3$1 = /*@__PURE__*/new Vector3();\n\n\tconst _vab = /*@__PURE__*/new Vector3();\n\n\tconst _vac = /*@__PURE__*/new Vector3();\n\n\tconst _vbc = /*@__PURE__*/new Vector3();\n\n\tconst _vap = /*@__PURE__*/new Vector3();\n\n\tconst _vbp = /*@__PURE__*/new Vector3();\n\n\tconst _vcp = /*@__PURE__*/new Vector3();\n\n\tclass Triangle {\n\t\tconstructor(a = new Vector3(), b = new Vector3(), c = new Vector3()) {\n\t\t\tthis.a = a;\n\t\t\tthis.b = b;\n\t\t\tthis.c = c;\n\t\t}\n\n\t\tstatic getNormal(a, b, c, target) {\n\t\t\ttarget.subVectors(c, b);\n\n\t\t\t_v0$1.subVectors(a, b);\n\n\t\t\ttarget.cross(_v0$1);\n\t\t\tconst targetLengthSq = target.lengthSq();\n\n\t\t\tif (targetLengthSq > 0) {\n\t\t\t\treturn target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\n\t\t\t}\n\n\t\t\treturn target.set(0, 0, 0);\n\t\t} // static/instance method to calculate barycentric coordinates\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\n\n\t\tstatic getBarycoord(point, a, b, c, target) {\n\t\t\t_v0$1.subVectors(c, a);\n\n\t\t\t_v1$3.subVectors(b, a);\n\n\t\t\t_v2$2.subVectors(point, a);\n\n\t\t\tconst dot00 = _v0$1.dot(_v0$1);\n\n\t\t\tconst dot01 = _v0$1.dot(_v1$3);\n\n\t\t\tconst dot02 = _v0$1.dot(_v2$2);\n\n\t\t\tconst dot11 = _v1$3.dot(_v1$3);\n\n\t\t\tconst dot12 = _v1$3.dot(_v2$2);\n\n\t\t\tconst denom = dot00 * dot11 - dot01 * dot01; // collinear or singular triangle\n\n\t\t\tif (denom === 0) {\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set(-2, -1, -1);\n\t\t\t}\n\n\t\t\tconst invDenom = 1 / denom;\n\t\t\tconst u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n\t\t\tconst v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n\t\t\treturn target.set(1 - u - v, v, u);\n\t\t}\n\n\t\tstatic containsPoint(point, a, b, c) {\n\t\t\tthis.getBarycoord(point, a, b, c, _v3$1);\n\t\t\treturn _v3$1.x >= 0 && _v3$1.y >= 0 && _v3$1.x + _v3$1.y <= 1;\n\t\t}\n\n\t\tstatic getUV(point, p1, p2, p3, uv1, uv2, uv3, target) {\n\t\t\tthis.getBarycoord(point, p1, p2, p3, _v3$1);\n\t\t\ttarget.set(0, 0);\n\t\t\ttarget.addScaledVector(uv1, _v3$1.x);\n\t\t\ttarget.addScaledVector(uv2, _v3$1.y);\n\t\t\ttarget.addScaledVector(uv3, _v3$1.z);\n\t\t\treturn target;\n\t\t}\n\n\t\tstatic isFrontFacing(a, b, c, direction) {\n\t\t\t_v0$1.subVectors(c, b);\n\n\t\t\t_v1$3.subVectors(a, b); // strictly front facing\n\n\n\t\t\treturn _v0$1.cross(_v1$3).dot(direction) < 0 ? true : false;\n\t\t}\n\n\t\tset(a, b, c) {\n\t\t\tthis.a.copy(a);\n\t\t\tthis.b.copy(b);\n\t\t\tthis.c.copy(c);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPointsAndIndices(points, i0, i1, i2) {\n\t\t\tthis.a.copy(points[i0]);\n\t\t\tthis.b.copy(points[i1]);\n\t\t\tthis.c.copy(points[i2]);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(triangle) {\n\t\t\tthis.a.copy(triangle.a);\n\t\t\tthis.b.copy(triangle.b);\n\t\t\tthis.c.copy(triangle.c);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetArea() {\n\t\t\t_v0$1.subVectors(this.c, this.b);\n\n\t\t\t_v1$3.subVectors(this.a, this.b);\n\n\t\t\treturn _v0$1.cross(_v1$3).length() * 0.5;\n\t\t}\n\n\t\tgetMidpoint(target) {\n\t\t\treturn target.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n\t\t}\n\n\t\tgetNormal(target) {\n\t\t\treturn Triangle.getNormal(this.a, this.b, this.c, target);\n\t\t}\n\n\t\tgetPlane(target) {\n\t\t\treturn target.setFromCoplanarPoints(this.a, this.b, this.c);\n\t\t}\n\n\t\tgetBarycoord(point, target) {\n\t\t\treturn Triangle.getBarycoord(point, this.a, this.b, this.c, target);\n\t\t}\n\n\t\tgetUV(point, uv1, uv2, uv3, target) {\n\t\t\treturn Triangle.getUV(point, this.a, this.b, this.c, uv1, uv2, uv3, target);\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn Triangle.containsPoint(point, this.a, this.b, this.c);\n\t\t}\n\n\t\tisFrontFacing(direction) {\n\t\t\treturn Triangle.isFrontFacing(this.a, this.b, this.c, direction);\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn box.intersectsTriangle(this);\n\t\t}\n\n\t\tclosestPointToPoint(p, target) {\n\t\t\tconst a = this.a,\n\t\t\t\t\t\tb = this.b,\n\t\t\t\t\t\tc = this.c;\n\t\t\tlet v, w; // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\t_vab.subVectors(b, a);\n\n\t\t\t_vac.subVectors(c, a);\n\n\t\t\t_vap.subVectors(p, a);\n\n\t\t\tconst d1 = _vab.dot(_vap);\n\n\t\t\tconst d2 = _vac.dot(_vap);\n\n\t\t\tif (d1 <= 0 && d2 <= 0) {\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy(a);\n\t\t\t}\n\n\t\t\t_vbp.subVectors(p, b);\n\n\t\t\tconst d3 = _vab.dot(_vbp);\n\n\t\t\tconst d4 = _vac.dot(_vbp);\n\n\t\t\tif (d3 >= 0 && d4 <= d3) {\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy(b);\n\t\t\t}\n\n\t\t\tconst vc = d1 * d4 - d3 * d2;\n\n\t\t\tif (vc <= 0 && d1 >= 0 && d3 <= 0) {\n\t\t\t\tv = d1 / (d1 - d3); // edge region of AB; barycentric coords (1-v, v, 0)\n\n\t\t\t\treturn target.copy(a).addScaledVector(_vab, v);\n\t\t\t}\n\n\t\t\t_vcp.subVectors(p, c);\n\n\t\t\tconst d5 = _vab.dot(_vcp);\n\n\t\t\tconst d6 = _vac.dot(_vcp);\n\n\t\t\tif (d6 >= 0 && d5 <= d6) {\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy(c);\n\t\t\t}\n\n\t\t\tconst vb = d5 * d2 - d1 * d6;\n\n\t\t\tif (vb <= 0 && d2 >= 0 && d6 <= 0) {\n\t\t\t\tw = d2 / (d2 - d6); // edge region of AC; barycentric coords (1-w, 0, w)\n\n\t\t\t\treturn target.copy(a).addScaledVector(_vac, w);\n\t\t\t}\n\n\t\t\tconst va = d3 * d6 - d5 * d4;\n\n\t\t\tif (va <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {\n\t\t\t\t_vbc.subVectors(c, b);\n\n\t\t\t\tw = (d4 - d3) / (d4 - d3 + (d5 - d6)); // edge region of BC; barycentric coords (0, 1-w, w)\n\n\t\t\t\treturn target.copy(b).addScaledVector(_vbc, w); // edge region of BC\n\t\t\t} // face region\n\n\n\t\t\tconst denom = 1 / (va + vb + vc); // u = va * denom\n\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\t\t\treturn target.copy(a).addScaledVector(_vab, v).addScaledVector(_vac, w);\n\t\t}\n\n\t\tequals(triangle) {\n\t\t\treturn triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n\t\t}\n\n\t}\n\n\tlet materialId = 0;\n\n\tclass Material extends EventDispatcher {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: materialId++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'Material';\n\t\t\tthis.fog = true;\n\t\t\tthis.blending = NormalBlending;\n\t\t\tthis.side = FrontSide;\n\t\t\tthis.vertexColors = false;\n\t\t\tthis.opacity = 1;\n\t\t\tthis.transparent = false;\n\t\t\tthis.blendSrc = SrcAlphaFactor;\n\t\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\t\tthis.blendEquation = AddEquation;\n\t\t\tthis.blendSrcAlpha = null;\n\t\t\tthis.blendDstAlpha = null;\n\t\t\tthis.blendEquationAlpha = null;\n\t\t\tthis.depthFunc = LessEqualDepth;\n\t\t\tthis.depthTest = true;\n\t\t\tthis.depthWrite = true;\n\t\t\tthis.stencilWriteMask = 0xff;\n\t\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\t\tthis.stencilRef = 0;\n\t\t\tthis.stencilFuncMask = 0xff;\n\t\t\tthis.stencilFail = KeepStencilOp;\n\t\t\tthis.stencilZFail = KeepStencilOp;\n\t\t\tthis.stencilZPass = KeepStencilOp;\n\t\t\tthis.stencilWrite = false;\n\t\t\tthis.clippingPlanes = null;\n\t\t\tthis.clipIntersection = false;\n\t\t\tthis.clipShadows = false;\n\t\t\tthis.shadowSide = null;\n\t\t\tthis.colorWrite = true;\n\t\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\t\tthis.polygonOffset = false;\n\t\t\tthis.polygonOffsetFactor = 0;\n\t\t\tthis.polygonOffsetUnits = 0;\n\t\t\tthis.dithering = false;\n\t\t\tthis.alphaTest = 0;\n\t\t\tthis.alphaToCoverage = false;\n\t\t\tthis.premultipliedAlpha = false;\n\t\t\tthis.visible = true;\n\t\t\tthis.toneMapped = true;\n\t\t\tthis.userData = {};\n\t\t\tthis.version = 0;\n\t\t}\n\n\t\tonBuild()\n\t\t/* shaderobject, renderer */\n\t\t{}\n\n\t\tonBeforeCompile()\n\t\t/* shaderobject, renderer */\n\t\t{}\n\n\t\tcustomProgramCacheKey() {\n\t\t\treturn this.onBeforeCompile.toString();\n\t\t}\n\n\t\tsetValues(values) {\n\t\t\tif (values === undefined) return;\n\n\t\t\tfor (const key in values) {\n\t\t\t\tconst newValue = values[key];\n\n\t\t\t\tif (newValue === undefined) {\n\t\t\t\t\tconsole.warn('THREE.Material: \\'' + key + '\\' parameter is undefined.');\n\t\t\t\t\tcontinue;\n\t\t\t\t} // for backward compatability if shading is set in the constructor\n\n\n\t\t\t\tif (key === 'shading') {\n\t\t\t\t\tconsole.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t\t\tthis.flatShading = newValue === FlatShading ? true : false;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst currentValue = this[key];\n\n\t\t\t\tif (currentValue === undefined) {\n\t\t\t\t\tconsole.warn('THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.');\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (currentValue && currentValue.isColor) {\n\t\t\t\t\tcurrentValue.set(newValue);\n\t\t\t\t} else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n\t\t\t\t\tcurrentValue.copy(newValue);\n\t\t\t\t} else {\n\t\t\t\t\tthis[key] = newValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst isRoot = meta === undefined || typeof meta === 'string';\n\n\t\t\tif (isRoot) {\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t}; // standard Material serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (this.color && this.color.isColor) data.color = this.color.getHex();\n\t\t\tif (this.roughness !== undefined) data.roughness = this.roughness;\n\t\t\tif (this.metalness !== undefined) data.metalness = this.metalness;\n\t\t\tif (this.sheen && this.sheen.isColor) data.sheen = this.sheen.getHex();\n\t\t\tif (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n\t\t\tif (this.emissiveIntensity && this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\n\t\t\tif (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n\t\t\tif (this.shininess !== undefined) data.shininess = this.shininess;\n\t\t\tif (this.clearcoat !== undefined) data.clearcoat = this.clearcoat;\n\t\t\tif (this.clearcoatRoughness !== undefined) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\t\tif (this.clearcoatMap && this.clearcoatMap.isTexture) {\n\t\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {\n\t\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\n\t\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\n\t\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\t\t\t}\n\n\t\t\tif (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n\t\t\tif (this.matcap && this.matcap.isTexture) data.matcap = this.matcap.toJSON(meta).uuid;\n\t\t\tif (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n\n\t\t\tif (this.lightMap && this.lightMap.isTexture) {\n\t\t\t\tdata.lightMap = this.lightMap.toJSON(meta).uuid;\n\t\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\t\t\t}\n\n\t\t\tif (this.aoMap && this.aoMap.isTexture) {\n\t\t\t\tdata.aoMap = this.aoMap.toJSON(meta).uuid;\n\t\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\t\t\t}\n\n\t\t\tif (this.bumpMap && this.bumpMap.isTexture) {\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON(meta).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\t\t\t}\n\n\t\t\tif (this.normalMap && this.normalMap.isTexture) {\n\t\t\t\tdata.normalMap = this.normalMap.toJSON(meta).uuid;\n\t\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\t\t\t}\n\n\t\t\tif (this.displacementMap && this.displacementMap.isTexture) {\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON(meta).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\t\t\t}\n\n\t\t\tif (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n\t\t\tif (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n\t\t\tif (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n\t\t\tif (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\n\t\t\tif (this.envMap && this.envMap.isTexture) {\n\t\t\t\tdata.envMap = this.envMap.toJSON(meta).uuid;\n\t\t\t\tif (this.combine !== undefined) data.combine = this.combine;\n\t\t\t}\n\n\t\t\tif (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\n\t\t\tif (this.reflectivity !== undefined) data.reflectivity = this.reflectivity;\n\t\t\tif (this.refractionRatio !== undefined) data.refractionRatio = this.refractionRatio;\n\n\t\t\tif (this.gradientMap && this.gradientMap.isTexture) {\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.transmission !== undefined) data.transmission = this.transmission;\n\t\t\tif (this.transmissionMap && this.transmissionMap.isTexture) data.transmissionMap = this.transmissionMap.toJSON(meta).uuid;\n\t\t\tif (this.thickness !== undefined) data.thickness = this.thickness;\n\t\t\tif (this.thicknessMap && this.thicknessMap.isTexture) data.thicknessMap = this.thicknessMap.toJSON(meta).uuid;\n\t\t\tif (this.attenuationDistance !== undefined) data.attenuationDistance = this.attenuationDistance;\n\t\t\tif (this.attenuationColor !== undefined) data.attenuationColor = this.attenuationColor.getHex();\n\t\t\tif (this.size !== undefined) data.size = this.size;\n\t\t\tif (this.shadowSide !== null) data.shadowSide = this.shadowSide;\n\t\t\tif (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n\t\t\tif (this.blending !== NormalBlending) data.blending = this.blending;\n\t\t\tif (this.side !== FrontSide) data.side = this.side;\n\t\t\tif (this.vertexColors) data.vertexColors = true;\n\t\t\tif (this.opacity < 1) data.opacity = this.opacity;\n\t\t\tif (this.transparent === true) data.transparent = this.transparent;\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\t\t\tdata.colorWrite = this.colorWrite;\n\t\t\tdata.stencilWrite = this.stencilWrite;\n\t\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\t\tdata.stencilFunc = this.stencilFunc;\n\t\t\tdata.stencilRef = this.stencilRef;\n\t\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\t\tdata.stencilFail = this.stencilFail;\n\t\t\tdata.stencilZFail = this.stencilZFail;\n\t\t\tdata.stencilZPass = this.stencilZPass; // rotation (SpriteMaterial)\n\n\t\t\tif (this.rotation && this.rotation !== 0) data.rotation = this.rotation;\n\t\t\tif (this.polygonOffset === true) data.polygonOffset = true;\n\t\t\tif (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\t\tif (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\t\t\tif (this.linewidth && this.linewidth !== 1) data.linewidth = this.linewidth;\n\t\t\tif (this.dashSize !== undefined) data.dashSize = this.dashSize;\n\t\t\tif (this.gapSize !== undefined) data.gapSize = this.gapSize;\n\t\t\tif (this.scale !== undefined) data.scale = this.scale;\n\t\t\tif (this.dithering === true) data.dithering = true;\n\t\t\tif (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n\t\t\tif (this.alphaToCoverage === true) data.alphaToCoverage = this.alphaToCoverage;\n\t\t\tif (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\t\tif (this.wireframe === true) data.wireframe = this.wireframe;\n\t\t\tif (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\t\tif (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n\t\t\tif (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n\t\t\tif (this.morphTargets === true) data.morphTargets = true;\n\t\t\tif (this.morphNormals === true) data.morphNormals = true;\n\t\t\tif (this.flatShading === true) data.flatShading = this.flatShading;\n\t\t\tif (this.visible === false) data.visible = false;\n\t\t\tif (this.toneMapped === false) data.toneMapped = false;\n\t\t\tif (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache(cache) {\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor (const key in cache) {\n\t\t\t\t\tconst data = cache[key];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push(data);\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t}\n\n\t\t\tif (isRoot) {\n\t\t\t\tconst textures = extractFromCache(meta.textures);\n\t\t\t\tconst images = extractFromCache(meta.images);\n\t\t\t\tif (textures.length > 0) data.textures = textures;\n\t\t\t\tif (images.length > 0) data.images = images;\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.fog = source.fog;\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.vertexColors = source.vertexColors;\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\t\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\t\tthis.stencilFunc = source.stencilFunc;\n\t\t\tthis.stencilRef = source.stencilRef;\n\t\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\t\tthis.stencilFail = source.stencilFail;\n\t\t\tthis.stencilZFail = source.stencilZFail;\n\t\t\tthis.stencilZPass = source.stencilZPass;\n\t\t\tthis.stencilWrite = source.stencilWrite;\n\t\t\tconst srcPlanes = source.clippingPlanes;\n\t\t\tlet dstPlanes = null;\n\n\t\t\tif (srcPlanes !== null) {\n\t\t\t\tconst n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array(n);\n\n\t\t\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\t\t\tdstPlanes[i] = srcPlanes[i].clone();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\t\t\tthis.clipShadows = source.clipShadows;\n\t\t\tthis.shadowSide = source.shadowSide;\n\t\t\tthis.colorWrite = source.colorWrite;\n\t\t\tthis.precision = source.precision;\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\t\t\tthis.dithering = source.dithering;\n\t\t\tthis.alphaTest = source.alphaTest;\n\t\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.toneMapped = source.toneMapped;\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t}\n\n\tMaterial.prototype.isMaterial = true;\n\n\tconst _colorKeywords = {\n\t\t'aliceblue': 0xF0F8FF,\n\t\t'antiquewhite': 0xFAEBD7,\n\t\t'aqua': 0x00FFFF,\n\t\t'aquamarine': 0x7FFFD4,\n\t\t'azure': 0xF0FFFF,\n\t\t'beige': 0xF5F5DC,\n\t\t'bisque': 0xFFE4C4,\n\t\t'black': 0x000000,\n\t\t'blanchedalmond': 0xFFEBCD,\n\t\t'blue': 0x0000FF,\n\t\t'blueviolet': 0x8A2BE2,\n\t\t'brown': 0xA52A2A,\n\t\t'burlywood': 0xDEB887,\n\t\t'cadetblue': 0x5F9EA0,\n\t\t'chartreuse': 0x7FFF00,\n\t\t'chocolate': 0xD2691E,\n\t\t'coral': 0xFF7F50,\n\t\t'cornflowerblue': 0x6495ED,\n\t\t'cornsilk': 0xFFF8DC,\n\t\t'crimson': 0xDC143C,\n\t\t'cyan': 0x00FFFF,\n\t\t'darkblue': 0x00008B,\n\t\t'darkcyan': 0x008B8B,\n\t\t'darkgoldenrod': 0xB8860B,\n\t\t'darkgray': 0xA9A9A9,\n\t\t'darkgreen': 0x006400,\n\t\t'darkgrey': 0xA9A9A9,\n\t\t'darkkhaki': 0xBDB76B,\n\t\t'darkmagenta': 0x8B008B,\n\t\t'darkolivegreen': 0x556B2F,\n\t\t'darkorange': 0xFF8C00,\n\t\t'darkorchid': 0x9932CC,\n\t\t'darkred': 0x8B0000,\n\t\t'darksalmon': 0xE9967A,\n\t\t'darkseagreen': 0x8FBC8F,\n\t\t'darkslateblue': 0x483D8B,\n\t\t'darkslategray': 0x2F4F4F,\n\t\t'darkslategrey': 0x2F4F4F,\n\t\t'darkturquoise': 0x00CED1,\n\t\t'darkviolet': 0x9400D3,\n\t\t'deeppink': 0xFF1493,\n\t\t'deepskyblue': 0x00BFFF,\n\t\t'dimgray': 0x696969,\n\t\t'dimgrey': 0x696969,\n\t\t'dodgerblue': 0x1E90FF,\n\t\t'firebrick': 0xB22222,\n\t\t'floralwhite': 0xFFFAF0,\n\t\t'forestgreen': 0x228B22,\n\t\t'fuchsia': 0xFF00FF,\n\t\t'gainsboro': 0xDCDCDC,\n\t\t'ghostwhite': 0xF8F8FF,\n\t\t'gold': 0xFFD700,\n\t\t'goldenrod': 0xDAA520,\n\t\t'gray': 0x808080,\n\t\t'green': 0x008000,\n\t\t'greenyellow': 0xADFF2F,\n\t\t'grey': 0x808080,\n\t\t'honeydew': 0xF0FFF0,\n\t\t'hotpink': 0xFF69B4,\n\t\t'indianred': 0xCD5C5C,\n\t\t'indigo': 0x4B0082,\n\t\t'ivory': 0xFFFFF0,\n\t\t'khaki': 0xF0E68C,\n\t\t'lavender': 0xE6E6FA,\n\t\t'lavenderblush': 0xFFF0F5,\n\t\t'lawngreen': 0x7CFC00,\n\t\t'lemonchiffon': 0xFFFACD,\n\t\t'lightblue': 0xADD8E6,\n\t\t'lightcoral': 0xF08080,\n\t\t'lightcyan': 0xE0FFFF,\n\t\t'lightgoldenrodyellow': 0xFAFAD2,\n\t\t'lightgray': 0xD3D3D3,\n\t\t'lightgreen': 0x90EE90,\n\t\t'lightgrey': 0xD3D3D3,\n\t\t'lightpink': 0xFFB6C1,\n\t\t'lightsalmon': 0xFFA07A,\n\t\t'lightseagreen': 0x20B2AA,\n\t\t'lightskyblue': 0x87CEFA,\n\t\t'lightslategray': 0x778899,\n\t\t'lightslategrey': 0x778899,\n\t\t'lightsteelblue': 0xB0C4DE,\n\t\t'lightyellow': 0xFFFFE0,\n\t\t'lime': 0x00FF00,\n\t\t'limegreen': 0x32CD32,\n\t\t'linen': 0xFAF0E6,\n\t\t'magenta': 0xFF00FF,\n\t\t'maroon': 0x800000,\n\t\t'mediumaquamarine': 0x66CDAA,\n\t\t'mediumblue': 0x0000CD,\n\t\t'mediumorchid': 0xBA55D3,\n\t\t'mediumpurple': 0x9370DB,\n\t\t'mediumseagreen': 0x3CB371,\n\t\t'mediumslateblue': 0x7B68EE,\n\t\t'mediumspringgreen': 0x00FA9A,\n\t\t'mediumturquoise': 0x48D1CC,\n\t\t'mediumvioletred': 0xC71585,\n\t\t'midnightblue': 0x191970,\n\t\t'mintcream': 0xF5FFFA,\n\t\t'mistyrose': 0xFFE4E1,\n\t\t'moccasin': 0xFFE4B5,\n\t\t'navajowhite': 0xFFDEAD,\n\t\t'navy': 0x000080,\n\t\t'oldlace': 0xFDF5E6,\n\t\t'olive': 0x808000,\n\t\t'olivedrab': 0x6B8E23,\n\t\t'orange': 0xFFA500,\n\t\t'orangered': 0xFF4500,\n\t\t'orchid': 0xDA70D6,\n\t\t'palegoldenrod': 0xEEE8AA,\n\t\t'palegreen': 0x98FB98,\n\t\t'paleturquoise': 0xAFEEEE,\n\t\t'palevioletred': 0xDB7093,\n\t\t'papayawhip': 0xFFEFD5,\n\t\t'peachpuff': 0xFFDAB9,\n\t\t'peru': 0xCD853F,\n\t\t'pink': 0xFFC0CB,\n\t\t'plum': 0xDDA0DD,\n\t\t'powderblue': 0xB0E0E6,\n\t\t'purple': 0x800080,\n\t\t'rebeccapurple': 0x663399,\n\t\t'red': 0xFF0000,\n\t\t'rosybrown': 0xBC8F8F,\n\t\t'royalblue': 0x4169E1,\n\t\t'saddlebrown': 0x8B4513,\n\t\t'salmon': 0xFA8072,\n\t\t'sandybrown': 0xF4A460,\n\t\t'seagreen': 0x2E8B57,\n\t\t'seashell': 0xFFF5EE,\n\t\t'sienna': 0xA0522D,\n\t\t'silver': 0xC0C0C0,\n\t\t'skyblue': 0x87CEEB,\n\t\t'slateblue': 0x6A5ACD,\n\t\t'slategray': 0x708090,\n\t\t'slategrey': 0x708090,\n\t\t'snow': 0xFFFAFA,\n\t\t'springgreen': 0x00FF7F,\n\t\t'steelblue': 0x4682B4,\n\t\t'tan': 0xD2B48C,\n\t\t'teal': 0x008080,\n\t\t'thistle': 0xD8BFD8,\n\t\t'tomato': 0xFF6347,\n\t\t'turquoise': 0x40E0D0,\n\t\t'violet': 0xEE82EE,\n\t\t'wheat': 0xF5DEB3,\n\t\t'white': 0xFFFFFF,\n\t\t'whitesmoke': 0xF5F5F5,\n\t\t'yellow': 0xFFFF00,\n\t\t'yellowgreen': 0x9ACD32\n\t};\n\tconst _hslA = {\n\t\th: 0,\n\t\ts: 0,\n\t\tl: 0\n\t};\n\tconst _hslB = {\n\t\th: 0,\n\t\ts: 0,\n\t\tl: 0\n\t};\n\n\tfunction hue2rgb(p, q, t) {\n\t\tif (t < 0) t += 1;\n\t\tif (t > 1) t -= 1;\n\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\tif (t < 1 / 2) return q;\n\t\tif (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n\t\treturn p;\n\t}\n\n\tfunction SRGBToLinear(c) {\n\t\treturn c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n\t}\n\n\tfunction LinearToSRGB(c) {\n\t\treturn c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n\t}\n\n\tclass Color {\n\t\tconstructor(r, g, b) {\n\t\t\tif (g === undefined && b === undefined) {\n\t\t\t\t// r is THREE.Color, hex or string\n\t\t\t\treturn this.set(r);\n\t\t\t}\n\n\t\t\treturn this.setRGB(r, g, b);\n\t\t}\n\n\t\tset(value) {\n\t\t\tif (value && value.isColor) {\n\t\t\t\tthis.copy(value);\n\t\t\t} else if (typeof value === 'number') {\n\t\t\t\tthis.setHex(value);\n\t\t\t} else if (typeof value === 'string') {\n\t\t\t\tthis.setStyle(value);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetHex(hex) {\n\t\t\thex = Math.floor(hex);\n\t\t\tthis.r = (hex >> 16 & 255) / 255;\n\t\t\tthis.g = (hex >> 8 & 255) / 255;\n\t\t\tthis.b = (hex & 255) / 255;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetRGB(r, g, b) {\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetHSL(h, s, l) {\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = euclideanModulo(h, 1);\n\t\t\ts = clamp(s, 0, 1);\n\t\t\tl = clamp(l, 0, 1);\n\n\t\t\tif (s === 0) {\n\t\t\t\tthis.r = this.g = this.b = l;\n\t\t\t} else {\n\t\t\t\tconst p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n\t\t\t\tconst q = 2 * l - p;\n\t\t\t\tthis.r = hue2rgb(q, p, h + 1 / 3);\n\t\t\t\tthis.g = hue2rgb(q, p, h);\n\t\t\t\tthis.b = hue2rgb(q, p, h - 1 / 3);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetStyle(style) {\n\t\t\tfunction handleAlpha(string) {\n\t\t\t\tif (string === undefined) return;\n\n\t\t\t\tif (parseFloat(string) < 1) {\n\t\t\t\t\tconsole.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet m;\n\n\t\t\tif (m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)) {\n\t\t\t\t// rgb / hsl\n\t\t\t\tlet color;\n\t\t\t\tconst name = m[1];\n\t\t\t\tconst components = m[2];\n\n\t\t\t\tswitch (name) {\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\t\t\t\t\t\tif (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min(255, parseInt(color[1], 10)) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min(255, parseInt(color[2], 10)) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min(255, parseInt(color[3], 10)) / 255;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min(100, parseInt(color[1], 10)) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min(100, parseInt(color[2], 10)) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min(100, parseInt(color[3], 10)) / 100;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\t\t\t\t\t\tif (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tconst h = parseFloat(color[1]) / 360;\n\t\t\t\t\t\t\tconst s = parseInt(color[2], 10) / 100;\n\t\t\t\t\t\t\tconst l = parseInt(color[3], 10) / 100;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this.setHSL(h, s, l);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\n\t\t\t\t// hex color\n\t\t\t\tconst hex = m[1];\n\t\t\t\tconst size = hex.length;\n\n\t\t\t\tif (size === 3) {\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n\t\t\t\t\tthis.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n\t\t\t\t\tthis.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n\t\t\t\t\treturn this;\n\t\t\t\t} else if (size === 6) {\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n\t\t\t\t\tthis.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n\t\t\t\t\tthis.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (style && style.length > 0) {\n\t\t\t\treturn this.setColorName(style);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetColorName(style) {\n\t\t\t// color keywords\n\t\t\tconst hex = _colorKeywords[style.toLowerCase()];\n\n\t\t\tif (hex !== undefined) {\n\t\t\t\t// red\n\t\t\t\tthis.setHex(hex);\n\t\t\t} else {\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn('THREE.Color: Unknown color ' + style);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.r, this.g, this.b);\n\t\t}\n\n\t\tcopy(color) {\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyGammaToLinear(color, gammaFactor = 2.0) {\n\t\t\tthis.r = Math.pow(color.r, gammaFactor);\n\t\t\tthis.g = Math.pow(color.g, gammaFactor);\n\t\t\tthis.b = Math.pow(color.b, gammaFactor);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyLinearToGamma(color, gammaFactor = 2.0) {\n\t\t\tconst safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n\t\t\tthis.r = Math.pow(color.r, safeInverse);\n\t\t\tthis.g = Math.pow(color.g, safeInverse);\n\t\t\tthis.b = Math.pow(color.b, safeInverse);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertGammaToLinear(gammaFactor) {\n\t\t\tthis.copyGammaToLinear(this, gammaFactor);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertLinearToGamma(gammaFactor) {\n\t\t\tthis.copyLinearToGamma(this, gammaFactor);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopySRGBToLinear(color) {\n\t\t\tthis.r = SRGBToLinear(color.r);\n\t\t\tthis.g = SRGBToLinear(color.g);\n\t\t\tthis.b = SRGBToLinear(color.b);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyLinearToSRGB(color) {\n\t\t\tthis.r = LinearToSRGB(color.r);\n\t\t\tthis.g = LinearToSRGB(color.g);\n\t\t\tthis.b = LinearToSRGB(color.b);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertSRGBToLinear() {\n\t\t\tthis.copySRGBToLinear(this);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertLinearToSRGB() {\n\t\t\tthis.copyLinearToSRGB(this);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetHex() {\n\t\t\treturn this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n\t\t}\n\n\t\tgetHexString() {\n\t\t\treturn ('000000' + this.getHex().toString(16)).slice(-6);\n\t\t}\n\n\t\tgetHSL(target) {\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\tconst r = this.r,\n\t\t\t\t\t\tg = this.g,\n\t\t\t\t\t\tb = this.b;\n\t\t\tconst max = Math.max(r, g, b);\n\t\t\tconst min = Math.min(r, g, b);\n\t\t\tlet hue, saturation;\n\t\t\tconst lightness = (min + max) / 2.0;\n\n\t\t\tif (min === max) {\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\t\t\t} else {\n\t\t\t\tconst delta = max - min;\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n\t\t\t\tswitch (max) {\n\t\t\t\t\tcase r:\n\t\t\t\t\t\thue = (g - b) / delta + (g < b ? 6 : 0);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase g:\n\t\t\t\t\t\thue = (b - r) / delta + 2;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase b:\n\t\t\t\t\t\thue = (r - g) / delta + 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\t\t\t}\n\n\t\t\ttarget.h = hue;\n\t\t\ttarget.s = saturation;\n\t\t\ttarget.l = lightness;\n\t\t\treturn target;\n\t\t}\n\n\t\tgetStyle() {\n\t\t\treturn 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n\t\t}\n\n\t\toffsetHSL(h, s, l) {\n\t\t\tthis.getHSL(_hslA);\n\t\t\t_hslA.h += h;\n\t\t\t_hslA.s += s;\n\t\t\t_hslA.l += l;\n\t\t\tthis.setHSL(_hslA.h, _hslA.s, _hslA.l);\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(color) {\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\t\t\treturn this;\n\t\t}\n\n\t\taddColors(color1, color2) {\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(color) {\n\t\t\tthis.r = Math.max(0, this.r - color.r);\n\t\t\tthis.g = Math.max(0, this.g - color.g);\n\t\t\tthis.b = Math.max(0, this.b - color.b);\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(color) {\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(s) {\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerp(color, alpha) {\n\t\t\tthis.r += (color.r - this.r) * alpha;\n\t\t\tthis.g += (color.g - this.g) * alpha;\n\t\t\tthis.b += (color.b - this.b) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpColors(color1, color2, alpha) {\n\t\t\tthis.r = color1.r + (color2.r - color1.r) * alpha;\n\t\t\tthis.g = color1.g + (color2.g - color1.g) * alpha;\n\t\t\tthis.b = color1.b + (color2.b - color1.b) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpHSL(color, alpha) {\n\t\t\tthis.getHSL(_hslA);\n\t\t\tcolor.getHSL(_hslB);\n\t\t\tconst h = lerp(_hslA.h, _hslB.h, alpha);\n\t\t\tconst s = lerp(_hslA.s, _hslB.s, alpha);\n\t\t\tconst l = lerp(_hslA.l, _hslB.l, alpha);\n\t\t\tthis.setHSL(h, s, l);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(c) {\n\t\t\treturn c.r === this.r && c.g === this.g && c.b === this.b;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.r = array[offset];\n\t\t\tthis.g = array[offset + 1];\n\t\t\tthis.b = array[offset + 2];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.r;\n\t\t\tarray[offset + 1] = this.g;\n\t\t\tarray[offset + 2] = this.b;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index) {\n\t\t\tthis.r = attribute.getX(index);\n\t\t\tthis.g = attribute.getY(index);\n\t\t\tthis.b = attribute.getZ(index);\n\n\t\t\tif (attribute.normalized === true) {\n\t\t\t\t// assuming Uint8Array\n\t\t\t\tthis.r /= 255;\n\t\t\t\tthis.g /= 255;\n\t\t\t\tthis.b /= 255;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn this.getHex();\n\t\t}\n\n\t}\n\n\tColor.NAMES = _colorKeywords;\n\tColor.prototype.isColor = true;\n\tColor.prototype.r = 1;\n\tColor.prototype.g = 1;\n\tColor.prototype.b = 1;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.Multiply,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\tdepthTest: <bool>,\n\t *\tdepthWrite: <bool>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tmorphTargets: <bool>\n\t * }\n\t */\n\n\tclass MeshBasicMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshBasicMaterial';\n\t\t\tthis.color = new Color(0xffffff); // emissive\n\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.specularMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.specularMap = source.specularMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tconst _vector$9 = /*@__PURE__*/new Vector3();\n\n\tconst _vector2$1 = /*@__PURE__*/new Vector2();\n\n\tclass BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tif (Array.isArray(array)) {\n\t\t\t\tthrow new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n\t\t\t}\n\n\t\t\tthis.name = '';\n\t\t\tthis.array = array;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\t\tthis.normalized = normalized === true;\n\t\t\tthis.usage = StaticDrawUsage;\n\t\t\tthis.updateRange = {\n\t\t\t\toffset: 0,\n\t\t\t\tcount: -1\n\t\t\t};\n\t\t\tthis.version = 0;\n\t\t}\n\n\t\tonUploadCallback() {}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t\tsetUsage(value) {\n\t\t\tthis.usage = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.array = new source.array.constructor(source.array);\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\t\t\tthis.usage = source.usage;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyAt(index1, attribute, index2) {\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor (let i = 0, l = this.itemSize; i < l; i++) {\n\t\t\t\tthis.array[index1 + i] = attribute.array[index2 + i];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyArray(array) {\n\t\t\tthis.array.set(array);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyColorsArray(colors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = colors.length; i < l; i++) {\n\t\t\t\tlet color = colors[i];\n\n\t\t\t\tif (color === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n\t\t\t\t\tcolor = new Color();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = color.r;\n\t\t\t\tarray[offset++] = color.g;\n\t\t\t\tarray[offset++] = color.b;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyVector2sArray(vectors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tlet vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector2();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyVector3sArray(vectors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tlet vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector3();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t\tarray[offset++] = vector.z;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyVector4sArray(vectors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tlet vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector4();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t\tarray[offset++] = vector.z;\n\t\t\t\tarray[offset++] = vector.w;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix3(m) {\n\t\t\tif (this.itemSize === 2) {\n\t\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t\t_vector2$1.fromBufferAttribute(this, i);\n\n\t\t\t\t\t_vector2$1.applyMatrix3(m);\n\n\t\t\t\t\tthis.setXY(i, _vector2$1.x, _vector2$1.y);\n\t\t\t\t}\n\t\t\t} else if (this.itemSize === 3) {\n\t\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t\t_vector$9.fromBufferAttribute(this, i);\n\n\t\t\t\t\t_vector$9.applyMatrix3(m);\n\n\t\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$9.x = this.getX(i);\n\t\t\t\t_vector$9.y = this.getY(i);\n\t\t\t\t_vector$9.z = this.getZ(i);\n\n\t\t\t\t_vector$9.applyMatrix4(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyNormalMatrix(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$9.x = this.getX(i);\n\t\t\t\t_vector$9.y = this.getY(i);\n\t\t\t\t_vector$9.z = this.getZ(i);\n\n\t\t\t\t_vector$9.applyNormalMatrix(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttransformDirection(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$9.x = this.getX(i);\n\t\t\t\t_vector$9.y = this.getY(i);\n\t\t\t\t_vector$9.z = this.getZ(i);\n\n\t\t\t\t_vector$9.transformDirection(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(value, offset = 0) {\n\t\t\tthis.array.set(value, offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetX(index) {\n\t\t\treturn this.array[index * this.itemSize];\n\t\t}\n\n\t\tsetX(index, x) {\n\t\t\tthis.array[index * this.itemSize] = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetY(index) {\n\t\t\treturn this.array[index * this.itemSize + 1];\n\t\t}\n\n\t\tsetY(index, y) {\n\t\t\tthis.array[index * this.itemSize + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetZ(index) {\n\t\t\treturn this.array[index * this.itemSize + 2];\n\t\t}\n\n\t\tsetZ(index, z) {\n\t\t\tthis.array[index * this.itemSize + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetW(index) {\n\t\t\treturn this.array[index * this.itemSize + 3];\n\t\t}\n\n\t\tsetW(index, w) {\n\t\t\tthis.array[index * this.itemSize + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXY(index, x, y) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZ(index, x, y, z) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\tthis.array[index + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZW(index, x, y, z, w) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\tthis.array[index + 2] = z;\n\t\t\tthis.array[index + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tonUpload(callback) {\n\t\t\tthis.onUploadCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.array, this.itemSize).copy(this);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call(this.array),\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (this.usage !== StaticDrawUsage) data.usage = this.usage;\n\t\t\tif (this.updateRange.offset !== 0 || this.updateRange.count !== -1) data.updateRange = this.updateRange;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tBufferAttribute.prototype.isBufferAttribute = true; //\n\n\tclass Int8BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Int8Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint8BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint8Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint8ClampedArray(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Int16BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Int16Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint16BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint16Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Int32BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Int32Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint32BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint32Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Float16BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint16Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\n\tclass Float32BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Float32Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Float64BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Float64Array(array), itemSize, normalized);\n\t\t}\n\n\t} //\n\n\tfunction arrayMax(array) {\n\t\tif (array.length === 0) return -Infinity;\n\t\tlet max = array[0];\n\n\t\tfor (let i = 1, l = array.length; i < l; ++i) {\n\t\t\tif (array[i] > max) max = array[i];\n\t\t}\n\n\t\treturn max;\n\t}\n\n\tconst TYPED_ARRAYS = {\n\t\tInt8Array: Int8Array,\n\t\tUint8Array: Uint8Array,\n\t\tUint8ClampedArray: Uint8ClampedArray,\n\t\tInt16Array: Int16Array,\n\t\tUint16Array: Uint16Array,\n\t\tInt32Array: Int32Array,\n\t\tUint32Array: Uint32Array,\n\t\tFloat32Array: Float32Array,\n\t\tFloat64Array: Float64Array\n\t};\n\n\tfunction getTypedArray(type, buffer) {\n\t\treturn new TYPED_ARRAYS[type](buffer);\n\t}\n\n\tlet _id = 0;\n\n\tconst _m1 = /*@__PURE__*/new Matrix4();\n\n\tconst _obj = /*@__PURE__*/new Object3D();\n\n\tconst _offset = /*@__PURE__*/new Vector3();\n\n\tconst _box$1 = /*@__PURE__*/new Box3();\n\n\tconst _boxMorphTargets = /*@__PURE__*/new Box3();\n\n\tconst _vector$8 = /*@__PURE__*/new Vector3();\n\n\tclass BufferGeometry extends EventDispatcher {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: _id++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'BufferGeometry';\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.morphTargetsRelative = false;\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\t\t\tthis.drawRange = {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: Infinity\n\t\t\t};\n\t\t\tthis.userData = {};\n\t\t}\n\n\t\tgetIndex() {\n\t\t\treturn this.index;\n\t\t}\n\n\t\tsetIndex(index) {\n\t\t\tif (Array.isArray(index)) {\n\t\t\t\tthis.index = new (arrayMax(index) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);\n\t\t\t} else {\n\t\t\t\tthis.index = index;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetAttribute(name) {\n\t\t\treturn this.attributes[name];\n\t\t}\n\n\t\tsetAttribute(name, attribute) {\n\t\t\tthis.attributes[name] = attribute;\n\t\t\treturn this;\n\t\t}\n\n\t\tdeleteAttribute(name) {\n\t\t\tdelete this.attributes[name];\n\t\t\treturn this;\n\t\t}\n\n\t\thasAttribute(name) {\n\t\t\treturn this.attributes[name] !== undefined;\n\t\t}\n\n\t\taddGroup(start, count, materialIndex = 0) {\n\t\t\tthis.groups.push({\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex\n\t\t\t});\n\t\t}\n\n\t\tclearGroups() {\n\t\t\tthis.groups = [];\n\t\t}\n\n\t\tsetDrawRange(start, count) {\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tconst position = this.attributes.position;\n\n\t\t\tif (position !== undefined) {\n\t\t\t\tposition.applyMatrix4(matrix);\n\t\t\t\tposition.needsUpdate = true;\n\t\t\t}\n\n\t\t\tconst normal = this.attributes.normal;\n\n\t\t\tif (normal !== undefined) {\n\t\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix(matrix);\n\t\t\t\tnormal.applyNormalMatrix(normalMatrix);\n\t\t\t\tnormal.needsUpdate = true;\n\t\t\t}\n\n\t\t\tconst tangent = this.attributes.tangent;\n\n\t\t\tif (tangent !== undefined) {\n\t\t\t\ttangent.transformDirection(matrix);\n\t\t\t\ttangent.needsUpdate = true;\n\t\t\t}\n\n\t\t\tif (this.boundingBox !== null) {\n\t\t\t\tthis.computeBoundingBox();\n\t\t\t}\n\n\t\t\tif (this.boundingSphere !== null) {\n\t\t\t\tthis.computeBoundingSphere();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyQuaternion(q) {\n\t\t\t_m1.makeRotationFromQuaternion(q);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateX(angle) {\n\t\t\t// rotate geometry around world x-axis\n\t\t\t_m1.makeRotationX(angle);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateY(angle) {\n\t\t\t// rotate geometry around world y-axis\n\t\t\t_m1.makeRotationY(angle);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateZ(angle) {\n\t\t\t// rotate geometry around world z-axis\n\t\t\t_m1.makeRotationZ(angle);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(x, y, z) {\n\t\t\t// translate geometry\n\t\t\t_m1.makeTranslation(x, y, z);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(x, y, z) {\n\t\t\t// scale geometry\n\t\t\t_m1.makeScale(x, y, z);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\tlookAt(vector) {\n\t\t\t_obj.lookAt(vector);\n\n\t\t\t_obj.updateMatrix();\n\n\t\t\tthis.applyMatrix4(_obj.matrix);\n\t\t\treturn this;\n\t\t}\n\n\t\tcenter() {\n\t\t\tthis.computeBoundingBox();\n\t\t\tthis.boundingBox.getCenter(_offset).negate();\n\t\t\tthis.translate(_offset.x, _offset.y, _offset.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tconst position = [];\n\n\t\t\tfor (let i = 0, l = points.length; i < l; i++) {\n\t\t\t\tconst point = points[i];\n\t\t\t\tposition.push(point.x, point.y, point.z || 0);\n\t\t\t}\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(position, 3));\n\t\t\treturn this;\n\t\t}\n\n\t\tcomputeBoundingBox() {\n\t\t\tif (this.boundingBox === null) {\n\t\t\t\tthis.boundingBox = new Box3();\n\t\t\t}\n\n\t\t\tconst position = this.attributes.position;\n\t\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif (position && position.isGLBufferAttribute) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n\t\t\t\tthis.boundingBox.set(new Vector3(-Infinity, -Infinity, -Infinity), new Vector3(+Infinity, +Infinity, +Infinity));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (position !== undefined) {\n\t\t\t\tthis.boundingBox.setFromBufferAttribute(position); // process morph attributes if present\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\n\n\t\t\t\t\t\t_box$1.setFromBufferAttribute(morphAttribute);\n\n\t\t\t\t\t\tif (this.morphTargetsRelative) {\n\t\t\t\t\t\t\t_vector$8.addVectors(this.boundingBox.min, _box$1.min);\n\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_vector$8);\n\n\t\t\t\t\t\t\t_vector$8.addVectors(this.boundingBox.max, _box$1.max);\n\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_vector$8);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_box$1.min);\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_box$1.max);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.boundingBox.makeEmpty();\n\t\t\t}\n\n\t\t\tif (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n\t\t\t}\n\t\t}\n\n\t\tcomputeBoundingSphere() {\n\t\t\tif (this.boundingSphere === null) {\n\t\t\t\tthis.boundingSphere = new Sphere();\n\t\t\t}\n\n\t\t\tconst position = this.attributes.position;\n\t\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif (position && position.isGLBufferAttribute) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n\t\t\t\tthis.boundingSphere.set(new Vector3(), Infinity);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (position) {\n\t\t\t\t// first, find the center of the bounding sphere\n\t\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t\t_box$1.setFromBufferAttribute(position); // process morph attributes if present\n\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\n\n\t\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute(morphAttribute);\n\n\t\t\t\t\t\tif (this.morphTargetsRelative) {\n\t\t\t\t\t\t\t_vector$8.addVectors(_box$1.min, _boxMorphTargets.min);\n\n\t\t\t\t\t\t\t_box$1.expandByPoint(_vector$8);\n\n\t\t\t\t\t\t\t_vector$8.addVectors(_box$1.max, _boxMorphTargets.max);\n\n\t\t\t\t\t\t\t_box$1.expandByPoint(_vector$8);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_box$1.expandByPoint(_boxMorphTargets.min);\n\n\t\t\t\t\t\t\t_box$1.expandByPoint(_boxMorphTargets.max);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t_box$1.getCenter(center); // second, try to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\n\t\t\t\tlet maxRadiusSq = 0;\n\n\t\t\t\tfor (let i = 0, il = position.count; i < il; i++) {\n\t\t\t\t\t_vector$8.fromBufferAttribute(position, i);\n\n\t\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\n\t\t\t\t} // process morph attributes if present\n\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\n\t\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\t\tfor (let j = 0, jl = morphAttribute.count; j < jl; j++) {\n\t\t\t\t\t\t\t_vector$8.fromBufferAttribute(morphAttribute, j);\n\n\t\t\t\t\t\t\tif (morphTargetsRelative) {\n\t\t\t\t\t\t\t\t_offset.fromBufferAttribute(position, j);\n\n\t\t\t\t\t\t\t\t_vector$8.add(_offset);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n\t\t\t\tif (isNaN(this.boundingSphere.radius)) {\n\t\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcomputeFaceNormals() {// backwards compatibility\n\t\t}\n\n\t\tcomputeTangents() {\n\t\t\tconst index = this.index;\n\t\t\tconst attributes = this.attributes; // based on http://www.terathon.com/code/tangent.html\n\t\t\t// (per vertex tangents)\n\n\t\t\tif (index === null || attributes.position === undefined || attributes.normal === undefined || attributes.uv === undefined) {\n\t\t\t\tconsole.error('THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst indices = index.array;\n\t\t\tconst positions = attributes.position.array;\n\t\t\tconst normals = attributes.normal.array;\n\t\t\tconst uvs = attributes.uv.array;\n\t\t\tconst nVertices = positions.length / 3;\n\n\t\t\tif (attributes.tangent === undefined) {\n\t\t\t\tthis.setAttribute('tangent', new BufferAttribute(new Float32Array(4 * nVertices), 4));\n\t\t\t}\n\n\t\t\tconst tangents = attributes.tangent.array;\n\t\t\tconst tan1 = [],\n\t\t\t\t\t\ttan2 = [];\n\n\t\t\tfor (let i = 0; i < nVertices; i++) {\n\t\t\t\ttan1[i] = new Vector3();\n\t\t\t\ttan2[i] = new Vector3();\n\t\t\t}\n\n\t\t\tconst vA = new Vector3(),\n\t\t\t\t\t\tvB = new Vector3(),\n\t\t\t\t\t\tvC = new Vector3(),\n\t\t\t\t\t\tuvA = new Vector2(),\n\t\t\t\t\t\tuvB = new Vector2(),\n\t\t\t\t\t\tuvC = new Vector2(),\n\t\t\t\t\t\tsdir = new Vector3(),\n\t\t\t\t\t\ttdir = new Vector3();\n\n\t\t\tfunction handleTriangle(a, b, c) {\n\t\t\t\tvA.fromArray(positions, a * 3);\n\t\t\t\tvB.fromArray(positions, b * 3);\n\t\t\t\tvC.fromArray(positions, c * 3);\n\t\t\t\tuvA.fromArray(uvs, a * 2);\n\t\t\t\tuvB.fromArray(uvs, b * 2);\n\t\t\t\tuvC.fromArray(uvs, c * 2);\n\t\t\t\tvB.sub(vA);\n\t\t\t\tvC.sub(vA);\n\t\t\t\tuvB.sub(uvA);\n\t\t\t\tuvC.sub(uvA);\n\t\t\t\tconst r = 1.0 / (uvB.x * uvC.y - uvC.x * uvB.y); // silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\t\tif (!isFinite(r)) return;\n\t\t\t\tsdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC, -uvB.y).multiplyScalar(r);\n\t\t\t\ttdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB, -uvC.x).multiplyScalar(r);\n\t\t\t\ttan1[a].add(sdir);\n\t\t\t\ttan1[b].add(sdir);\n\t\t\t\ttan1[c].add(sdir);\n\t\t\t\ttan2[a].add(tdir);\n\t\t\t\ttan2[b].add(tdir);\n\t\t\t\ttan2[c].add(tdir);\n\t\t\t}\n\n\t\t\tlet groups = this.groups;\n\n\t\t\tif (groups.length === 0) {\n\t\t\t\tgroups = [{\n\t\t\t\t\tstart: 0,\n\t\t\t\t\tcount: indices.length\n\t\t\t\t}];\n\t\t\t}\n\n\t\t\tfor (let i = 0, il = groups.length; i < il; ++i) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tconst start = group.start;\n\t\t\t\tconst count = group.count;\n\n\t\t\t\tfor (let j = start, jl = start + count; j < jl; j += 3) {\n\t\t\t\t\thandleTriangle(indices[j + 0], indices[j + 1], indices[j + 2]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst tmp = new Vector3(),\n\t\t\t\t\t\ttmp2 = new Vector3();\n\t\t\tconst n = new Vector3(),\n\t\t\t\t\t\tn2 = new Vector3();\n\n\t\t\tfunction handleVertex(v) {\n\t\t\t\tn.fromArray(normals, v * 3);\n\t\t\t\tn2.copy(n);\n\t\t\t\tconst t = tan1[v]; // Gram-Schmidt orthogonalize\n\n\t\t\t\ttmp.copy(t);\n\t\t\t\ttmp.sub(n.multiplyScalar(n.dot(t))).normalize(); // Calculate handedness\n\n\t\t\t\ttmp2.crossVectors(n2, t);\n\t\t\t\tconst test = tmp2.dot(tan2[v]);\n\t\t\t\tconst w = test < 0.0 ? -1.0 : 1.0;\n\t\t\t\ttangents[v * 4] = tmp.x;\n\t\t\t\ttangents[v * 4 + 1] = tmp.y;\n\t\t\t\ttangents[v * 4 + 2] = tmp.z;\n\t\t\t\ttangents[v * 4 + 3] = w;\n\t\t\t}\n\n\t\t\tfor (let i = 0, il = groups.length; i < il; ++i) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tconst start = group.start;\n\t\t\t\tconst count = group.count;\n\n\t\t\t\tfor (let j = start, jl = start + count; j < jl; j += 3) {\n\t\t\t\t\thandleVertex(indices[j + 0]);\n\t\t\t\t\thandleVertex(indices[j + 1]);\n\t\t\t\t\thandleVertex(indices[j + 2]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcomputeVertexNormals() {\n\t\t\tconst index = this.index;\n\t\t\tconst positionAttribute = this.getAttribute('position');\n\n\t\t\tif (positionAttribute !== undefined) {\n\t\t\t\tlet normalAttribute = this.getAttribute('normal');\n\n\t\t\t\tif (normalAttribute === undefined) {\n\t\t\t\t\tnormalAttribute = new BufferAttribute(new Float32Array(positionAttribute.count * 3), 3);\n\t\t\t\t\tthis.setAttribute('normal', normalAttribute);\n\t\t\t\t} else {\n\t\t\t\t\t// reset existing normals to zero\n\t\t\t\t\tfor (let i = 0, il = normalAttribute.count; i < il; i++) {\n\t\t\t\t\t\tnormalAttribute.setXYZ(i, 0, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst pA = new Vector3(),\n\t\t\t\t\t\t\tpB = new Vector3(),\n\t\t\t\t\t\t\tpC = new Vector3();\n\t\t\t\tconst nA = new Vector3(),\n\t\t\t\t\t\t\tnB = new Vector3(),\n\t\t\t\t\t\t\tnC = new Vector3();\n\t\t\t\tconst cb = new Vector3(),\n\t\t\t\t\t\t\tab = new Vector3(); // indexed elements\n\n\t\t\t\tif (index) {\n\t\t\t\t\tfor (let i = 0, il = index.count; i < il; i += 3) {\n\t\t\t\t\t\tconst vA = index.getX(i + 0);\n\t\t\t\t\t\tconst vB = index.getX(i + 1);\n\t\t\t\t\t\tconst vC = index.getX(i + 2);\n\t\t\t\t\t\tpA.fromBufferAttribute(positionAttribute, vA);\n\t\t\t\t\t\tpB.fromBufferAttribute(positionAttribute, vB);\n\t\t\t\t\t\tpC.fromBufferAttribute(positionAttribute, vC);\n\t\t\t\t\t\tcb.subVectors(pC, pB);\n\t\t\t\t\t\tab.subVectors(pA, pB);\n\t\t\t\t\t\tcb.cross(ab);\n\t\t\t\t\t\tnA.fromBufferAttribute(normalAttribute, vA);\n\t\t\t\t\t\tnB.fromBufferAttribute(normalAttribute, vB);\n\t\t\t\t\t\tnC.fromBufferAttribute(normalAttribute, vC);\n\t\t\t\t\t\tnA.add(cb);\n\t\t\t\t\t\tnB.add(cb);\n\t\t\t\t\t\tnC.add(cb);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vA, nA.x, nA.y, nA.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vB, nB.x, nB.y, nB.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vC, nC.x, nC.y, nC.z);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\t\t\t\t\tfor (let i = 0, il = positionAttribute.count; i < il; i += 3) {\n\t\t\t\t\t\tpA.fromBufferAttribute(positionAttribute, i + 0);\n\t\t\t\t\t\tpB.fromBufferAttribute(positionAttribute, i + 1);\n\t\t\t\t\t\tpC.fromBufferAttribute(positionAttribute, i + 2);\n\t\t\t\t\t\tcb.subVectors(pC, pB);\n\t\t\t\t\t\tab.subVectors(pA, pB);\n\t\t\t\t\t\tcb.cross(ab);\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 0, cb.x, cb.y, cb.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 1, cb.x, cb.y, cb.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 2, cb.x, cb.y, cb.z);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\t\t\t\tnormalAttribute.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t\tmerge(geometry, offset) {\n\t\t\tif (!(geometry && geometry.isBufferGeometry)) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (offset === undefined) {\n\t\t\t\toffset = 0;\n\t\t\t\tconsole.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. ' + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');\n\t\t\t}\n\n\t\t\tconst attributes = this.attributes;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tif (geometry.attributes[key] === undefined) continue;\n\t\t\t\tconst attribute1 = attributes[key];\n\t\t\t\tconst attributeArray1 = attribute1.array;\n\t\t\t\tconst attribute2 = geometry.attributes[key];\n\t\t\t\tconst attributeArray2 = attribute2.array;\n\t\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\t\tconst length = Math.min(attributeArray2.length, attributeArray1.length - attributeOffset);\n\n\t\t\t\tfor (let i = 0, j = attributeOffset; i < length; i++, j++) {\n\t\t\t\t\tattributeArray1[j] = attributeArray2[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tnormalizeNormals() {\n\t\t\tconst normals = this.attributes.normal;\n\n\t\t\tfor (let i = 0, il = normals.count; i < il; i++) {\n\t\t\t\t_vector$8.fromBufferAttribute(normals, i);\n\n\t\t\t\t_vector$8.normalize();\n\n\t\t\t\tnormals.setXYZ(i, _vector$8.x, _vector$8.y, _vector$8.z);\n\t\t\t}\n\t\t}\n\n\t\ttoNonIndexed() {\n\t\t\tfunction convertBufferAttribute(attribute, indices) {\n\t\t\t\tconst array = attribute.array;\n\t\t\t\tconst itemSize = attribute.itemSize;\n\t\t\t\tconst normalized = attribute.normalized;\n\t\t\t\tconst array2 = new array.constructor(indices.length * itemSize);\n\t\t\t\tlet index = 0,\n\t\t\t\t\t\tindex2 = 0;\n\n\t\t\t\tfor (let i = 0, l = indices.length; i < l; i++) {\n\t\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\n\t\t\t\t\t\tindex = indices[i] * attribute.data.stride + attribute.offset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindex = indices[i] * itemSize;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let j = 0; j < itemSize; j++) {\n\t\t\t\t\t\tarray2[index2++] = array[index++];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute(array2, itemSize, normalized);\n\t\t\t} //\n\n\n\t\t\tif (this.index === null) {\n\t\t\t\tconsole.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst geometry2 = new BufferGeometry();\n\t\t\tconst indices = this.index.array;\n\t\t\tconst attributes = this.attributes; // attributes\n\n\t\t\tfor (const name in attributes) {\n\t\t\t\tconst attribute = attributes[name];\n\t\t\t\tconst newAttribute = convertBufferAttribute(attribute, indices);\n\t\t\t\tgeometry2.setAttribute(name, newAttribute);\n\t\t\t} // morph attributes\n\n\n\t\t\tconst morphAttributes = this.morphAttributes;\n\n\t\t\tfor (const name in morphAttributes) {\n\t\t\t\tconst morphArray = [];\n\t\t\t\tconst morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor (let i = 0, il = morphAttribute.length; i < il; i++) {\n\t\t\t\t\tconst attribute = morphAttribute[i];\n\t\t\t\t\tconst newAttribute = convertBufferAttribute(attribute, indices);\n\t\t\t\t\tmorphArray.push(newAttribute);\n\t\t\t\t}\n\n\t\t\t\tgeometry2.morphAttributes[name] = morphArray;\n\t\t\t}\n\n\t\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative; // groups\n\n\t\t\tconst groups = this.groups;\n\n\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tgeometry2.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t}\n\n\t\t\treturn geometry2;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t}; // standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (Object.keys(this.userData).length > 0) data.userData = this.userData;\n\n\t\t\tif (this.parameters !== undefined) {\n\t\t\t\tconst parameters = this.parameters;\n\n\t\t\t\tfor (const key in parameters) {\n\t\t\t\t\tif (parameters[key] !== undefined) data[key] = parameters[key];\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\t\t\t} // for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\n\t\t\tdata.data = {\n\t\t\t\tattributes: {}\n\t\t\t};\n\t\t\tconst index = this.index;\n\n\t\t\tif (index !== null) {\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: Array.prototype.slice.call(index.array)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst attributes = this.attributes;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tconst attribute = attributes[key];\n\t\t\t\tdata.data.attributes[key] = attribute.toJSON(data.data);\n\t\t\t}\n\n\t\t\tconst morphAttributes = {};\n\t\t\tlet hasMorphAttributes = false;\n\n\t\t\tfor (const key in this.morphAttributes) {\n\t\t\t\tconst attributeArray = this.morphAttributes[key];\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor (let i = 0, il = attributeArray.length; i < il; i++) {\n\t\t\t\t\tconst attribute = attributeArray[i];\n\t\t\t\t\tarray.push(attribute.toJSON(data.data));\n\t\t\t\t}\n\n\t\t\t\tif (array.length > 0) {\n\t\t\t\t\tmorphAttributes[key] = array;\n\t\t\t\t\thasMorphAttributes = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasMorphAttributes) {\n\t\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\t\t\t}\n\n\t\t\tconst groups = this.groups;\n\n\t\t\tif (groups.length > 0) {\n\t\t\t\tdata.data.groups = JSON.parse(JSON.stringify(groups));\n\t\t\t}\n\n\t\t\tconst boundingSphere = this.boundingSphere;\n\n\t\t\tif (boundingSphere !== null) {\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tclone() {\n\t\t\t/*\n\t\t\t // Handle primitives\n\t\t\t\t const parameters = this.parameters;\n\t\t\t\t if ( parameters !== undefined ) {\n\t\t\t\t const values = [];\n\t\t\t\t for ( const key in parameters ) {\n\t\t\t\t values.push( parameters[ key ] );\n\t\t\t\t }\n\t\t\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\t\t\t\t }\n\t\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\t\t\treturn new BufferGeometry().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\t// reset\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null; // used for storing cloned, shared data\n\n\t\t\tconst data = {}; // name\n\n\t\t\tthis.name = source.name; // index\n\n\t\t\tconst index = source.index;\n\n\t\t\tif (index !== null) {\n\t\t\t\tthis.setIndex(index.clone(data));\n\t\t\t} // attributes\n\n\n\t\t\tconst attributes = source.attributes;\n\n\t\t\tfor (const name in attributes) {\n\t\t\t\tconst attribute = attributes[name];\n\t\t\t\tthis.setAttribute(name, attribute.clone(data));\n\t\t\t} // morph attributes\n\n\n\t\t\tconst morphAttributes = source.morphAttributes;\n\n\t\t\tfor (const name in morphAttributes) {\n\t\t\t\tconst array = [];\n\t\t\t\tconst morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor (let i = 0, l = morphAttribute.length; i < l; i++) {\n\t\t\t\t\tarray.push(morphAttribute[i].clone(data));\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[name] = array;\n\t\t\t}\n\n\t\t\tthis.morphTargetsRelative = source.morphTargetsRelative; // groups\n\n\t\t\tconst groups = source.groups;\n\n\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tthis.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t} // bounding box\n\n\n\t\t\tconst boundingBox = source.boundingBox;\n\n\t\t\tif (boundingBox !== null) {\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\t\t\t} // bounding sphere\n\n\n\t\t\tconst boundingSphere = source.boundingSphere;\n\n\t\t\tif (boundingSphere !== null) {\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\t\t\t} // draw range\n\n\n\t\t\tthis.drawRange.start = source.drawRange.start;\n\t\t\tthis.drawRange.count = source.drawRange.count; // user data\n\n\t\t\tthis.userData = source.userData;\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t}\n\n\tBufferGeometry.prototype.isBufferGeometry = true;\n\n\tconst _inverseMatrix$2 = /*@__PURE__*/new Matrix4();\n\n\tconst _ray$2 = /*@__PURE__*/new Ray();\n\n\tconst _sphere$3 = /*@__PURE__*/new Sphere();\n\n\tconst _vA$1 = /*@__PURE__*/new Vector3();\n\n\tconst _vB$1 = /*@__PURE__*/new Vector3();\n\n\tconst _vC$1 = /*@__PURE__*/new Vector3();\n\n\tconst _tempA = /*@__PURE__*/new Vector3();\n\n\tconst _tempB = /*@__PURE__*/new Vector3();\n\n\tconst _tempC = /*@__PURE__*/new Vector3();\n\n\tconst _morphA = /*@__PURE__*/new Vector3();\n\n\tconst _morphB = /*@__PURE__*/new Vector3();\n\n\tconst _morphC = /*@__PURE__*/new Vector3();\n\n\tconst _uvA$1 = /*@__PURE__*/new Vector2();\n\n\tconst _uvB$1 = /*@__PURE__*/new Vector2();\n\n\tconst _uvC$1 = /*@__PURE__*/new Vector2();\n\n\tconst _intersectionPoint = /*@__PURE__*/new Vector3();\n\n\tconst _intersectionPointWorld = /*@__PURE__*/new Vector3();\n\n\tclass Mesh extends Object3D {\n\t\tconstructor(geometry = new BufferGeometry(), material = new MeshBasicMaterial()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Mesh';\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\t\t\tthis.updateMorphTargets();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\n\t\t\tif (source.morphTargetInfluences !== undefined) {\n\t\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\t\t\t}\n\n\t\t\tif (source.morphTargetDictionary !== undefined) {\n\t\t\t\tthis.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\n\t\t\t}\n\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t}\n\n\t\tupdateMorphTargets() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\t\tconst keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst material = this.material;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tif (material === undefined) return; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy(geometry.boundingSphere);\n\n\t\t\t_sphere$3.applyMatrix4(matrixWorld);\n\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere$3) === false) return; //\n\n\t\t\t_inverseMatrix$2.copy(matrixWorld).invert();\n\n\t\t\t_ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2); // Check boundingBox before continuing\n\n\n\t\t\tif (geometry.boundingBox !== null) {\n\t\t\t\tif (_ray$2.intersectsBox(geometry.boundingBox) === false) return;\n\t\t\t}\n\n\t\t\tlet intersection;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\t\tconst uv = geometry.attributes.uv;\n\t\t\t\tconst uv2 = geometry.attributes.uv2;\n\t\t\t\tconst groups = geometry.groups;\n\t\t\t\tconst drawRange = geometry.drawRange;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\t// indexed buffer geometry\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (let i = 0, il = groups.length; i < il; i++) {\n\t\t\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\t\t\t\t\t\t\tconst start = Math.max(group.start, drawRange.start);\n\t\t\t\t\t\t\tconst end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\t\tfor (let j = start, jl = end; j < jl; j += 3) {\n\t\t\t\t\t\t\t\tconst a = index.getX(j);\n\t\t\t\t\t\t\t\tconst b = index.getX(j + 1);\n\t\t\t\t\t\t\t\tconst c = index.getX(j + 2);\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\n\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\tfor (let i = start, il = end; i < il; i += 3) {\n\t\t\t\t\t\t\tconst a = index.getX(i);\n\t\t\t\t\t\t\tconst b = index.getX(i + 1);\n\t\t\t\t\t\t\tconst c = index.getX(i + 2);\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(i / 3); // triangle number in indexed buffer semantics\n\n\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (position !== undefined) {\n\t\t\t\t\t// non-indexed buffer geometry\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (let i = 0, il = groups.length; i < il; i++) {\n\t\t\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\t\t\t\t\t\t\tconst start = Math.max(group.start, drawRange.start);\n\t\t\t\t\t\t\tconst end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\t\tfor (let j = start, jl = end; j < jl; j += 3) {\n\t\t\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\t\t\tconst c = j + 2;\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(j / 3); // triangle number in non-indexed buffer semantics\n\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\t\tconst end = Math.min(position.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\tfor (let i = start, il = end; i < il; i += 3) {\n\t\t\t\t\t\t\tconst a = i;\n\t\t\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\t\t\tconst c = i + 2;\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(i / 3); // triangle number in non-indexed buffer semantics\n\n\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t}\n\n\t}\n\n\tMesh.prototype.isMesh = true;\n\n\tfunction checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n\t\tlet intersect;\n\n\t\tif (material.side === BackSide) {\n\t\t\tintersect = ray.intersectTriangle(pC, pB, pA, true, point);\n\t\t} else {\n\t\t\tintersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\n\t\t}\n\n\t\tif (intersect === null) return null;\n\n\t\t_intersectionPointWorld.copy(point);\n\n\t\t_intersectionPointWorld.applyMatrix4(object.matrixWorld);\n\n\t\tconst distance = raycaster.ray.origin.distanceTo(_intersectionPointWorld);\n\t\tif (distance < raycaster.near || distance > raycaster.far) return null;\n\t\treturn {\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectionPointWorld.clone(),\n\t\t\tobject: object\n\t\t};\n\t}\n\n\tfunction checkBufferGeometryIntersection(object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c) {\n\t\t_vA$1.fromBufferAttribute(position, a);\n\n\t\t_vB$1.fromBufferAttribute(position, b);\n\n\t\t_vC$1.fromBufferAttribute(position, c);\n\n\t\tconst morphInfluences = object.morphTargetInfluences;\n\n\t\tif (material.morphTargets && morphPosition && morphInfluences) {\n\t\t\t_morphA.set(0, 0, 0);\n\n\t\t\t_morphB.set(0, 0, 0);\n\n\t\t\t_morphC.set(0, 0, 0);\n\n\t\t\tfor (let i = 0, il = morphPosition.length; i < il; i++) {\n\t\t\t\tconst influence = morphInfluences[i];\n\t\t\t\tconst morphAttribute = morphPosition[i];\n\t\t\t\tif (influence === 0) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute(morphAttribute, a);\n\n\t\t\t\t_tempB.fromBufferAttribute(morphAttribute, b);\n\n\t\t\t\t_tempC.fromBufferAttribute(morphAttribute, c);\n\n\t\t\t\tif (morphTargetsRelative) {\n\t\t\t\t\t_morphA.addScaledVector(_tempA, influence);\n\n\t\t\t\t\t_morphB.addScaledVector(_tempB, influence);\n\n\t\t\t\t\t_morphC.addScaledVector(_tempC, influence);\n\t\t\t\t} else {\n\t\t\t\t\t_morphA.addScaledVector(_tempA.sub(_vA$1), influence);\n\n\t\t\t\t\t_morphB.addScaledVector(_tempB.sub(_vB$1), influence);\n\n\t\t\t\t\t_morphC.addScaledVector(_tempC.sub(_vC$1), influence);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_vA$1.add(_morphA);\n\n\t\t\t_vB$1.add(_morphB);\n\n\t\t\t_vC$1.add(_morphC);\n\t\t}\n\n\t\tif (object.isSkinnedMesh) {\n\t\t\tobject.boneTransform(a, _vA$1);\n\t\t\tobject.boneTransform(b, _vB$1);\n\t\t\tobject.boneTransform(c, _vC$1);\n\t\t}\n\n\t\tconst intersection = checkIntersection(object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint);\n\n\t\tif (intersection) {\n\t\t\tif (uv) {\n\t\t\t\t_uvA$1.fromBufferAttribute(uv, a);\n\n\t\t\t\t_uvB$1.fromBufferAttribute(uv, b);\n\n\t\t\t\t_uvC$1.fromBufferAttribute(uv, c);\n\n\t\t\t\tintersection.uv = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\n\t\t\t}\n\n\t\t\tif (uv2) {\n\t\t\t\t_uvA$1.fromBufferAttribute(uv2, a);\n\n\t\t\t\t_uvB$1.fromBufferAttribute(uv2, b);\n\n\t\t\t\t_uvC$1.fromBufferAttribute(uv2, c);\n\n\t\t\t\tintersection.uv2 = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\n\t\t\t}\n\n\t\t\tconst face = {\n\t\t\t\ta: a,\n\t\t\t\tb: b,\n\t\t\t\tc: c,\n\t\t\t\tnormal: new Vector3(),\n\t\t\t\tmaterialIndex: 0\n\t\t\t};\n\t\t\tTriangle.getNormal(_vA$1, _vB$1, _vC$1, face.normal);\n\t\t\tintersection.face = face;\n\t\t}\n\n\t\treturn intersection;\n\t}\n\n\tclass BoxGeometry extends BufferGeometry {\n\t\tconstructor(width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'BoxGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: depth,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tdepthSegments: depthSegments\n\t\t\t};\n\t\t\tconst scope = this; // segments\n\n\t\t\twidthSegments = Math.floor(widthSegments);\n\t\t\theightSegments = Math.floor(heightSegments);\n\t\t\tdepthSegments = Math.floor(depthSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tlet numberOfVertices = 0;\n\t\t\tlet groupStart = 0; // build each side of the box geometry\n\n\t\t\tbuildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n\t\t\tbuildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n\t\t\tbuildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n\t\t\tbuildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n\t\t\tbuildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n\t\t\tbuildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\t\tfunction buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n\t\t\t\tconst segmentWidth = width / gridX;\n\t\t\t\tconst segmentHeight = height / gridY;\n\t\t\t\tconst widthHalf = width / 2;\n\t\t\t\tconst heightHalf = height / 2;\n\t\t\t\tconst depthHalf = depth / 2;\n\t\t\t\tconst gridX1 = gridX + 1;\n\t\t\t\tconst gridY1 = gridY + 1;\n\t\t\t\tlet vertexCounter = 0;\n\t\t\t\tlet groupCount = 0;\n\t\t\t\tconst vector = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\n\t\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\n\t\t\t\t\t\tconst x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n\t\t\t\t\t\tvector[u] = x * udir;\n\t\t\t\t\t\tvector[v] = y * vdir;\n\t\t\t\t\t\tvector[w] = depthHalf; // now apply vector to vertex buffer\n\n\t\t\t\t\t\tvertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\n\n\t\t\t\t\t\tvector[u] = 0;\n\t\t\t\t\t\tvector[v] = 0;\n\t\t\t\t\t\tvector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n\t\t\t\t\t\tnormals.push(vector.x, vector.y, vector.z); // uvs\n\n\t\t\t\t\t\tuvs.push(ix / gridX);\n\t\t\t\t\t\tuvs.push(1 - iy / gridY); // counters\n\n\t\t\t\t\t\tvertexCounter += 1;\n\t\t\t\t\t}\n\t\t\t\t} // indices\n\t\t\t\t// 1. you need three indices to draw a single face\n\t\t\t\t// 2. a single segment consists of two faces\n\t\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\n\t\t\t\tfor (let iy = 0; iy < gridY; iy++) {\n\t\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\n\t\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * (iy + 1);\n\t\t\t\t\t\tconst c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n\t\t\t\t\t\tconst d = numberOfVertices + (ix + 1) + gridX1 * iy; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d); // increase counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\t\t\t\t\t}\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount; // update total number of vertices\n\n\t\t\t\tnumberOfVertices += vertexCounter;\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new BoxGeometry(data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n\t\t}\n\n\t}\n\n\t/**\n\t * Uniform Utilities\n\t */\n\tfunction cloneUniforms(src) {\n\t\tconst dst = {};\n\n\t\tfor (const u in src) {\n\t\t\tdst[u] = {};\n\n\t\t\tfor (const p in src[u]) {\n\t\t\t\tconst property = src[u][p];\n\n\t\t\t\tif (property && (property.isColor || property.isMatrix3 || property.isMatrix4 || property.isVector2 || property.isVector3 || property.isVector4 || property.isTexture || property.isQuaternion)) {\n\t\t\t\t\tdst[u][p] = property.clone();\n\t\t\t\t} else if (Array.isArray(property)) {\n\t\t\t\t\tdst[u][p] = property.slice();\n\t\t\t\t} else {\n\t\t\t\t\tdst[u][p] = property;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dst;\n\t}\n\tfunction mergeUniforms(uniforms) {\n\t\tconst merged = {};\n\n\t\tfor (let u = 0; u < uniforms.length; u++) {\n\t\t\tconst tmp = cloneUniforms(uniforms[u]);\n\n\t\t\tfor (const p in tmp) {\n\t\t\t\tmerged[p] = tmp[p];\n\t\t\t}\n\t\t}\n\n\t\treturn merged;\n\t} // Legacy\n\n\tconst UniformsUtils = {\n\t\tclone: cloneUniforms,\n\t\tmerge: mergeUniforms\n\t};\n\n\tvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\n\tvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n\t/**\n\t * parameters = {\n\t *\tdefines: { \"label\" : \"value\" },\n\t *\tuniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *\tfragmentShader: <string>,\n\t *\tvertexShader: <string>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tlights: <bool>,\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>\n\t * }\n\t */\n\n\tclass ShaderMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ShaderMaterial';\n\t\t\tthis.defines = {};\n\t\t\tthis.uniforms = {};\n\t\t\tthis.vertexShader = default_vertex;\n\t\t\tthis.fragmentShader = default_fragment;\n\t\t\tthis.linewidth = 1;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.fog = false; // set to use scene fog\n\n\t\t\tthis.lights = false; // set to use scene lights\n\n\t\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\t\tthis.morphTargets = false; // set to use morph targets\n\n\t\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\t\tthis.extensions = {\n\t\t\t\tderivatives: false,\n\t\t\t\t// set to use derivatives\n\t\t\t\tfragDepth: false,\n\t\t\t\t// set to use fragment depth values\n\t\t\t\tdrawBuffers: false,\n\t\t\t\t// set to use draw buffers\n\t\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\n\t\t\t}; // When rendered geometry doesn't include these attributes but the material does,\n\t\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\n\t\t\tthis.defaultAttributeValues = {\n\t\t\t\t'color': [1, 1, 1],\n\t\t\t\t'uv': [0, 0],\n\t\t\t\t'uv2': [0, 0]\n\t\t\t};\n\t\t\tthis.index0AttributeName = undefined;\n\t\t\tthis.uniformsNeedUpdate = false;\n\t\t\tthis.glslVersion = null;\n\n\t\t\tif (parameters !== undefined) {\n\t\t\t\tif (parameters.attributes !== undefined) {\n\t\t\t\t\tconsole.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n\t\t\t\t}\n\n\t\t\t\tthis.setValues(parameters);\n\t\t\t}\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.fragmentShader = source.fragmentShader;\n\t\t\tthis.vertexShader = source.vertexShader;\n\t\t\tthis.uniforms = cloneUniforms(source.uniforms);\n\t\t\tthis.defines = Object.assign({}, source.defines);\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.lights = source.lights;\n\t\t\tthis.clipping = source.clipping;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\tthis.extensions = Object.assign({}, source.extensions);\n\t\t\tthis.glslVersion = source.glslVersion;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.glslVersion = this.glslVersion;\n\t\t\tdata.uniforms = {};\n\n\t\t\tfor (const name in this.uniforms) {\n\t\t\t\tconst uniform = this.uniforms[name];\n\t\t\t\tconst value = uniform.value;\n\n\t\t\t\tif (value && value.isTexture) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 't',\n\t\t\t\t\t\tvalue: value.toJSON(meta).uuid\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isColor) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'c',\n\t\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isVector2) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'v2',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isVector3) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'v3',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isVector4) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'v4',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isMatrix3) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'm3',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isMatrix4) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'm4',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\tvalue: value\n\t\t\t\t\t}; // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Object.keys(this.defines).length > 0) data.defines = this.defines;\n\t\t\tdata.vertexShader = this.vertexShader;\n\t\t\tdata.fragmentShader = this.fragmentShader;\n\t\t\tconst extensions = {};\n\n\t\t\tfor (const key in this.extensions) {\n\t\t\t\tif (this.extensions[key] === true) extensions[key] = true;\n\t\t\t}\n\n\t\t\tif (Object.keys(extensions).length > 0) data.extensions = extensions;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tclass Camera extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Camera';\n\t\t\tthis.matrixWorldInverse = new Matrix4();\n\t\t\tthis.projectionMatrix = new Matrix4();\n\t\t\tthis.projectionMatrixInverse = new Matrix4();\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tthis.matrixWorldInverse.copy(source.matrixWorldInverse);\n\t\t\tthis.projectionMatrix.copy(source.projectionMatrix);\n\t\t\tthis.projectionMatrixInverse.copy(source.projectionMatrixInverse);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetWorldDirection(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tconst e = this.matrixWorld.elements;\n\t\t\treturn target.set(-e[8], -e[9], -e[10]).normalize();\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t\tthis.matrixWorldInverse.copy(this.matrixWorld).invert();\n\t\t}\n\n\t\tupdateWorldMatrix(updateParents, updateChildren) {\n\t\t\tsuper.updateWorldMatrix(updateParents, updateChildren);\n\t\t\tthis.matrixWorldInverse.copy(this.matrixWorld).invert();\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tCamera.prototype.isCamera = true;\n\n\tclass PerspectiveCamera extends Camera {\n\t\tconstructor(fov = 50, aspect = 1, near = 0.1, far = 2000) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PerspectiveCamera';\n\t\t\tthis.fov = fov;\n\t\t\tthis.zoom = 1;\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.focus = 10;\n\t\t\tthis.aspect = aspect;\n\t\t\tthis.view = null;\n\t\t\tthis.filmGauge = 35; // width of the film (default in millimeters)\n\n\t\t\tthis.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign({}, source.view);\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\t\t\treturn this;\n\t\t}\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\n\n\t\tsetFocalLength(focalLength) {\n\t\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\t\t\tthis.fov = RAD2DEG * 2 * Math.atan(vExtentSlope);\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\n\n\t\tgetFocalLength() {\n\t\t\tconst vExtentSlope = Math.tan(DEG2RAD * 0.5 * this.fov);\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\t\t}\n\n\t\tgetEffectiveFOV() {\n\t\t\treturn RAD2DEG * 2 * Math.atan(Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom);\n\t\t}\n\n\t\tgetFilmWidth() {\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min(this.aspect, 1);\n\t\t}\n\n\t\tgetFilmHeight() {\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max(this.aspect, 1);\n\t\t}\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *\t +---+---+---+\n\t\t *\t | A | B | C |\n\t\t *\t +---+---+---+\n\t\t *\t | D | E | F |\n\t\t *\t +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *\t const w = 1920;\n\t\t *\t const h = 1080;\n\t\t *\t const fullWidth = w * 3;\n\t\t *\t const fullHeight = h * 2;\n\t\t *\n\t\t *\t --A--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *\t --B--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *\t --C--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *\t --D--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *\t --E--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *\t --F--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *\t Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\n\n\t\tsetViewOffset(fullWidth, fullHeight, x, y, width, height) {\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tif (this.view === null) {\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tclearViewOffset() {\n\t\t\tif (this.view !== null) {\n\t\t\t\tthis.view.enabled = false;\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tupdateProjectionMatrix() {\n\t\t\tconst near = this.near;\n\t\t\tlet top = near * Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom;\n\t\t\tlet height = 2 * top;\n\t\t\tlet width = this.aspect * height;\n\t\t\tlet left = -0.5 * width;\n\t\t\tconst view = this.view;\n\n\t\t\tif (this.view !== null && this.view.enabled) {\n\t\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\t\t\t\tfullHeight = view.fullHeight;\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\t\t\t}\n\n\t\t\tconst skew = this.filmOffset;\n\t\t\tif (skew !== 0) left += near * skew / this.getFilmWidth();\n\t\t\tthis.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\n\t\t\tthis.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\t\t\tdata.object.aspect = this.aspect;\n\t\t\tif (this.view !== null) data.object.view = Object.assign({}, this.view);\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tPerspectiveCamera.prototype.isPerspectiveCamera = true;\n\n\tconst fov = 90,\n\t\t\t\taspect = 1;\n\n\tclass CubeCamera extends Object3D {\n\t\tconstructor(near, far, renderTarget) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CubeCamera';\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget !== true) {\n\t\t\t\tconsole.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.renderTarget = renderTarget;\n\t\t\tconst cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraPX.layers = this.layers;\n\t\t\tcameraPX.up.set(0, -1, 0);\n\t\t\tcameraPX.lookAt(new Vector3(1, 0, 0));\n\t\t\tthis.add(cameraPX);\n\t\t\tconst cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraNX.layers = this.layers;\n\t\t\tcameraNX.up.set(0, -1, 0);\n\t\t\tcameraNX.lookAt(new Vector3(-1, 0, 0));\n\t\t\tthis.add(cameraNX);\n\t\t\tconst cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraPY.layers = this.layers;\n\t\t\tcameraPY.up.set(0, 0, 1);\n\t\t\tcameraPY.lookAt(new Vector3(0, 1, 0));\n\t\t\tthis.add(cameraPY);\n\t\t\tconst cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraNY.layers = this.layers;\n\t\t\tcameraNY.up.set(0, 0, -1);\n\t\t\tcameraNY.lookAt(new Vector3(0, -1, 0));\n\t\t\tthis.add(cameraNY);\n\t\t\tconst cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraPZ.layers = this.layers;\n\t\t\tcameraPZ.up.set(0, -1, 0);\n\t\t\tcameraPZ.lookAt(new Vector3(0, 0, 1));\n\t\t\tthis.add(cameraPZ);\n\t\t\tconst cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraNZ.layers = this.layers;\n\t\t\tcameraNZ.up.set(0, -1, 0);\n\t\t\tcameraNZ.lookAt(new Vector3(0, 0, -1));\n\t\t\tthis.add(cameraNZ);\n\t\t}\n\n\t\tupdate(renderer, scene) {\n\t\t\tif (this.parent === null) this.updateMatrixWorld();\n\t\t\tconst renderTarget = this.renderTarget;\n\t\t\tconst [cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ] = this.children;\n\t\t\tconst currentXrEnabled = renderer.xr.enabled;\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\trenderer.xr.enabled = false;\n\t\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\t\t\trenderer.setRenderTarget(renderTarget, 0);\n\t\t\trenderer.render(scene, cameraPX);\n\t\t\trenderer.setRenderTarget(renderTarget, 1);\n\t\t\trenderer.render(scene, cameraNX);\n\t\t\trenderer.setRenderTarget(renderTarget, 2);\n\t\t\trenderer.render(scene, cameraPY);\n\t\t\trenderer.setRenderTarget(renderTarget, 3);\n\t\t\trenderer.render(scene, cameraNY);\n\t\t\trenderer.setRenderTarget(renderTarget, 4);\n\t\t\trenderer.render(scene, cameraPZ);\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\t\t\trenderer.setRenderTarget(renderTarget, 5);\n\t\t\trenderer.render(scene, cameraNZ);\n\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t\trenderer.xr.enabled = currentXrEnabled;\n\t\t}\n\n\t}\n\n\tclass CubeTexture extends Texture {\n\t\tconstructor(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n\t\t\timages = images !== undefined ? images : [];\n\t\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\t\tformat = format !== undefined ? format : RGBFormat;\n\t\t\tsuper(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding); // Why CubeTexture._needsFlipEnvMap is necessary:\n\t\t\t//\n\t\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\t\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t\t// and the flag _needsFlipEnvMap controls this conversion. The flip is not required (and thus _needsFlipEnvMap is set to false)\n\t\t\t// when using WebGLCubeRenderTarget.texture as a cube texture.\n\n\t\t\tthis._needsFlipEnvMap = true;\n\t\t\tthis.flipY = false;\n\t\t}\n\n\t\tget images() {\n\t\t\treturn this.image;\n\t\t}\n\n\t\tset images(value) {\n\t\t\tthis.image = value;\n\t\t}\n\n\t}\n\n\tCubeTexture.prototype.isCubeTexture = true;\n\n\tclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\t\tconstructor(size, options, dummy) {\n\t\t\tif (Number.isInteger(options)) {\n\t\t\t\tconsole.warn('THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )');\n\t\t\t\toptions = dummy;\n\t\t\t}\n\n\t\t\tsuper(size, size, options);\n\t\t\toptions = options || {};\n\t\t\tthis.texture = new CubeTexture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n\t\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\t\t\tthis.texture._needsFlipEnvMap = false;\n\t\t}\n\n\t\tfromEquirectangularTexture(renderer, texture) {\n\t\t\tthis.texture.type = texture.type;\n\t\t\tthis.texture.format = RGBAFormat; // see #18859\n\n\t\t\tthis.texture.encoding = texture.encoding;\n\t\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\t\tthis.texture.minFilter = texture.minFilter;\n\t\t\tthis.texture.magFilter = texture.magFilter;\n\t\t\tconst shader = {\n\t\t\t\tuniforms: {\n\t\t\t\t\ttEquirect: {\n\t\t\t\t\t\tvalue: null\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tvertexShader:\n\t\t\t\t/* glsl */\n\t\t\t\t`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\tfragmentShader:\n\t\t\t\t/* glsl */\n\t\t\t\t`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t\t};\n\t\t\tconst geometry = new BoxGeometry(5, 5, 5);\n\t\t\tconst material = new ShaderMaterial({\n\t\t\t\tname: 'CubemapFromEquirect',\n\t\t\t\tuniforms: cloneUniforms(shader.uniforms),\n\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\t\tside: BackSide,\n\t\t\t\tblending: NoBlending\n\t\t\t});\n\t\t\tmaterial.uniforms.tEquirect.value = texture;\n\t\t\tconst mesh = new Mesh(geometry, material);\n\t\t\tconst currentMinFilter = texture.minFilter; // Avoid blurred poles\n\n\t\t\tif (texture.minFilter === LinearMipmapLinearFilter) texture.minFilter = LinearFilter;\n\t\t\tconst camera = new CubeCamera(1, 10, this);\n\t\t\tcamera.update(renderer, mesh);\n\t\t\ttexture.minFilter = currentMinFilter;\n\t\t\tmesh.geometry.dispose();\n\t\t\tmesh.material.dispose();\n\t\t\treturn this;\n\t\t}\n\n\t\tclear(renderer, color, depth, stencil) {\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\trenderer.setRenderTarget(this, i);\n\t\t\t\trenderer.clear(color, depth, stencil);\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t}\n\n\t}\n\n\tWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\n\tconst _vector1 = /*@__PURE__*/new Vector3();\n\n\tconst _vector2 = /*@__PURE__*/new Vector3();\n\n\tconst _normalMatrix = /*@__PURE__*/new Matrix3();\n\n\tclass Plane {\n\t\tconstructor(normal = new Vector3(1, 0, 0), constant = 0) {\n\t\t\t// normal is assumed to be normalized\n\t\t\tthis.normal = normal;\n\t\t\tthis.constant = constant;\n\t\t}\n\n\t\tset(normal, constant) {\n\t\t\tthis.normal.copy(normal);\n\t\t\tthis.constant = constant;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponents(x, y, z, w) {\n\t\t\tthis.normal.set(x, y, z);\n\t\t\tthis.constant = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromNormalAndCoplanarPoint(normal, point) {\n\t\t\tthis.normal.copy(normal);\n\t\t\tthis.constant = -point.dot(this.normal);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCoplanarPoints(a, b, c) {\n\t\t\tconst normal = _vector1.subVectors(c, b).cross(_vector2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\n\t\t\tthis.setFromNormalAndCoplanarPoint(normal, a);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(plane) {\n\t\t\tthis.normal.copy(plane.normal);\n\t\t\tthis.constant = plane.constant;\n\t\t\treturn this;\n\t\t}\n\n\t\tnormalize() {\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\t\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar(inverseNormalLength);\n\t\t\tthis.constant *= inverseNormalLength;\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.constant *= -1;\n\t\t\tthis.normal.negate();\n\t\t\treturn this;\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\treturn this.normal.dot(point) + this.constant;\n\t\t}\n\n\t\tdistanceToSphere(sphere) {\n\t\t\treturn this.distanceToPoint(sphere.center) - sphere.radius;\n\t\t}\n\n\t\tprojectPoint(point, target) {\n\t\t\treturn target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);\n\t\t}\n\n\t\tintersectLine(line, target) {\n\t\t\tconst direction = line.delta(_vector1);\n\t\t\tconst denominator = this.normal.dot(direction);\n\n\t\t\tif (denominator === 0) {\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif (this.distanceToPoint(line.start) === 0) {\n\t\t\t\t\treturn target.copy(line.start);\n\t\t\t\t} // Unsure if this is the correct method to handle this case.\n\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n\t\t\tif (t < 0 || t > 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn target.copy(direction).multiplyScalar(t).add(line.start);\n\t\t}\n\n\t\tintersectsLine(line) {\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\t\t\tconst startSign = this.distanceToPoint(line.start);\n\t\t\tconst endSign = this.distanceToPoint(line.end);\n\t\t\treturn startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn box.intersectsPlane(this);\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\treturn sphere.intersectsPlane(this);\n\t\t}\n\n\t\tcoplanarPoint(target) {\n\t\t\treturn target.copy(this.normal).multiplyScalar(-this.constant);\n\t\t}\n\n\t\tapplyMatrix4(matrix, optionalNormalMatrix) {\n\t\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix(matrix);\n\n\t\t\tconst referencePoint = this.coplanarPoint(_vector1).applyMatrix4(matrix);\n\t\t\tconst normal = this.normal.applyMatrix3(normalMatrix).normalize();\n\t\t\tthis.constant = -referencePoint.dot(normal);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.constant -= offset.dot(this.normal);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(plane) {\n\t\t\treturn plane.normal.equals(this.normal) && plane.constant === this.constant;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tPlane.prototype.isPlane = true;\n\n\tconst _sphere$2 = /*@__PURE__*/new Sphere();\n\n\tconst _vector$7 = /*@__PURE__*/new Vector3();\n\n\tclass Frustum {\n\t\tconstructor(p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane()) {\n\t\t\tthis.planes = [p0, p1, p2, p3, p4, p5];\n\t\t}\n\n\t\tset(p0, p1, p2, p3, p4, p5) {\n\t\t\tconst planes = this.planes;\n\t\t\tplanes[0].copy(p0);\n\t\t\tplanes[1].copy(p1);\n\t\t\tplanes[2].copy(p2);\n\t\t\tplanes[3].copy(p3);\n\t\t\tplanes[4].copy(p4);\n\t\t\tplanes[5].copy(p5);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(frustum) {\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tplanes[i].copy(frustum.planes[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromProjectionMatrix(m) {\n\t\t\tconst planes = this.planes;\n\t\t\tconst me = m.elements;\n\t\t\tconst me0 = me[0],\n\t\t\t\t\t\tme1 = me[1],\n\t\t\t\t\t\tme2 = me[2],\n\t\t\t\t\t\tme3 = me[3];\n\t\t\tconst me4 = me[4],\n\t\t\t\t\t\tme5 = me[5],\n\t\t\t\t\t\tme6 = me[6],\n\t\t\t\t\t\tme7 = me[7];\n\t\t\tconst me8 = me[8],\n\t\t\t\t\t\tme9 = me[9],\n\t\t\t\t\t\tme10 = me[10],\n\t\t\t\t\t\tme11 = me[11];\n\t\t\tconst me12 = me[12],\n\t\t\t\t\t\tme13 = me[13],\n\t\t\t\t\t\tme14 = me[14],\n\t\t\t\t\t\tme15 = me[15];\n\t\t\tplanes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n\t\t\tplanes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n\t\t\tplanes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n\t\t\tplanes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n\t\t\tplanes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n\t\t\tplanes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n\t\t\treturn this;\n\t\t}\n\n\t\tintersectsObject(object) {\n\t\t\tconst geometry = object.geometry;\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$2.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n\n\t\t\treturn this.intersectsSphere(_sphere$2);\n\t\t}\n\n\t\tintersectsSprite(sprite) {\n\t\t\t_sphere$2.center.set(0, 0, 0);\n\n\t\t\t_sphere$2.radius = 0.7071067811865476;\n\n\t\t\t_sphere$2.applyMatrix4(sprite.matrixWorld);\n\n\t\t\treturn this.intersectsSphere(_sphere$2);\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\tconst planes = this.planes;\n\t\t\tconst center = sphere.center;\n\t\t\tconst negRadius = -sphere.radius;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tconst distance = planes[i].distanceToPoint(center);\n\n\t\t\t\tif (distance < negRadius) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tconst plane = planes[i]; // corner at max distance\n\n\t\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif (plane.distanceToPoint(_vector$7) < 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tif (planes[i].distanceToPoint(point) < 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tfunction WebGLAnimation() {\n\t\tlet context = null;\n\t\tlet isAnimating = false;\n\t\tlet animationLoop = null;\n\t\tlet requestId = null;\n\n\t\tfunction onAnimationFrame(time, frame) {\n\t\t\tanimationLoop(time, frame);\n\t\t\trequestId = context.requestAnimationFrame(onAnimationFrame);\n\t\t}\n\n\t\treturn {\n\t\t\tstart: function () {\n\t\t\t\tif (isAnimating === true) return;\n\t\t\t\tif (animationLoop === null) return;\n\t\t\t\trequestId = context.requestAnimationFrame(onAnimationFrame);\n\t\t\t\tisAnimating = true;\n\t\t\t},\n\t\t\tstop: function () {\n\t\t\t\tcontext.cancelAnimationFrame(requestId);\n\t\t\t\tisAnimating = false;\n\t\t\t},\n\t\t\tsetAnimationLoop: function (callback) {\n\t\t\t\tanimationLoop = callback;\n\t\t\t},\n\t\t\tsetContext: function (value) {\n\t\t\t\tcontext = value;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction WebGLAttributes(gl, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tconst buffers = new WeakMap();\n\n\t\tfunction createBuffer(attribute, bufferType) {\n\t\t\tconst array = attribute.array;\n\t\t\tconst usage = attribute.usage;\n\t\t\tconst buffer = gl.createBuffer();\n\t\t\tgl.bindBuffer(bufferType, buffer);\n\t\t\tgl.bufferData(bufferType, array, usage);\n\t\t\tattribute.onUploadCallback();\n\t\t\tlet type = gl.FLOAT;\n\n\t\t\tif (array instanceof Float32Array) {\n\t\t\t\ttype = gl.FLOAT;\n\t\t\t} else if (array instanceof Float64Array) {\n\t\t\t\tconsole.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');\n\t\t\t} else if (array instanceof Uint16Array) {\n\t\t\t\tif (attribute.isFloat16BufferAttribute) {\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\ttype = gl.HALF_FLOAT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\t\t\t\t}\n\t\t\t} else if (array instanceof Int16Array) {\n\t\t\t\ttype = gl.SHORT;\n\t\t\t} else if (array instanceof Uint32Array) {\n\t\t\t\ttype = gl.UNSIGNED_INT;\n\t\t\t} else if (array instanceof Int32Array) {\n\t\t\t\ttype = gl.INT;\n\t\t\t} else if (array instanceof Int8Array) {\n\t\t\t\ttype = gl.BYTE;\n\t\t\t} else if (array instanceof Uint8Array) {\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\t\t\t} else if (array instanceof Uint8ClampedArray) {\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: buffer,\n\t\t\t\ttype: type,\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t\tversion: attribute.version\n\t\t\t};\n\t\t}\n\n\t\tfunction updateBuffer(buffer, attribute, bufferType) {\n\t\t\tconst array = attribute.array;\n\t\t\tconst updateRange = attribute.updateRange;\n\t\t\tgl.bindBuffer(bufferType, buffer);\n\n\t\t\tif (updateRange.count === -1) {\n\t\t\t\t// Not using update ranges\n\t\t\t\tgl.bufferSubData(bufferType, 0, array);\n\t\t\t} else {\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tgl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array, updateRange.offset, updateRange.count);\n\t\t\t\t} else {\n\t\t\t\t\tgl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray(updateRange.offset, updateRange.offset + updateRange.count));\n\t\t\t\t}\n\n\t\t\t\tupdateRange.count = -1; // reset range\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction get(attribute) {\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\treturn buffers.get(attribute);\n\t\t}\n\n\t\tfunction remove(attribute) {\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\tconst data = buffers.get(attribute);\n\n\t\t\tif (data) {\n\t\t\t\tgl.deleteBuffer(data.buffer);\n\t\t\t\tbuffers.delete(attribute);\n\t\t\t}\n\t\t}\n\n\t\tfunction update(attribute, bufferType) {\n\t\t\tif (attribute.isGLBufferAttribute) {\n\t\t\t\tconst cached = buffers.get(attribute);\n\n\t\t\t\tif (!cached || cached.version < attribute.version) {\n\t\t\t\t\tbuffers.set(attribute, {\n\t\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\t\tversion: attribute.version\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\tconst data = buffers.get(attribute);\n\n\t\t\tif (data === undefined) {\n\t\t\t\tbuffers.set(attribute, createBuffer(attribute, bufferType));\n\t\t\t} else if (data.version < attribute.version) {\n\t\t\t\tupdateBuffer(data.buffer, attribute, bufferType);\n\t\t\t\tdata.version = attribute.version;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tclass PlaneGeometry extends BufferGeometry {\n\t\tconstructor(width = 1, height = 1, widthSegments = 1, heightSegments = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PlaneGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments\n\t\t\t};\n\t\t\tconst width_half = width / 2;\n\t\t\tconst height_half = height / 2;\n\t\t\tconst gridX = Math.floor(widthSegments);\n\t\t\tconst gridY = Math.floor(heightSegments);\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\t\t\tconst segment_width = width / gridX;\n\t\t\tconst segment_height = height / gridY; //\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\n\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\n\t\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\n\t\t\t\t\tconst x = ix * segment_width - width_half;\n\t\t\t\t\tvertices.push(x, -y, 0);\n\t\t\t\t\tnormals.push(0, 0, 1);\n\t\t\t\t\tuvs.push(ix / gridX);\n\t\t\t\t\tuvs.push(1 - iy / gridY);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let iy = 0; iy < gridY; iy++) {\n\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\n\t\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\t\tconst b = ix + gridX1 * (iy + 1);\n\t\t\t\t\tconst c = ix + 1 + gridX1 * (iy + 1);\n\t\t\t\t\tconst d = ix + 1 + gridX1 * iy;\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new PlaneGeometry(data.width, data.height, data.widthSegments, data.heightSegments);\n\t\t}\n\n\t}\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\n\tvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\n\tvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\n\tvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\n\tvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\n\tvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = - mvPosition.z;\\n#endif\";\n\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\n\tvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\n\tvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\n\tvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\n\tvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\n\tvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularRoughness;\\n\\tvec3 specularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(\t\t0, 1,\t\t0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\n\tvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\n\tvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\n\n\tvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\n\tvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\n\tvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\n\tvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\n\tvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\n\tvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\n\tvar clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\n\tvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\n\tvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\n\tvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\n\tvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\n\tvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\n\tvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(\t1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,\t1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,\t1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\n\tvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSNMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition.xyz / vWorldPosition.w;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tfloat ior = ( 1.0 + 0.4 * reflectivity ) / ( 1.0 - 0.4 * reflectivity );\\n\\tvec3 transmission = transmissionFactor * getIBLVolumeRefraction(\\n\\t\\tnormal, v, roughnessFactor, material.diffuseColor, totalSpecular,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission, transmissionFactor );\\n#endif\";\n\n\tvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec4 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay(vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix) {\\n\\t\\tvec3 refractionVector = refract(-v, normalize(n), 1.0 / ior);\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length(vec3(modelMatrix[0].xyz));\\n\\t\\tmodelScale.y = length(vec3(modelMatrix[1].xyz));\\n\\t\\tmodelScale.z = length(vec3(modelMatrix[2].xyz));\\n\\t\\treturn normalize(refractionVector) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness(float roughness, float ior) {\\n\\t\\treturn roughness * clamp(ior * 2.0 - 2.0, 0.0, 1.0);\\n\\t}\\n\\tvec3 getTransmissionSample(vec2 fragCoord, float roughness, float ior) {\\n\\t\\tfloat framebufferLod = log2(transmissionSamplerSize.x) * applyIorToRoughness(roughness, ior);\\n\\t\\treturn texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod).rgb;\\n\\t}\\n\\tvec3 applyVolumeAttenuation(vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance) {\\n\\t\\tif (attenuationDistance == 0.0) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log(attenuationColor) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp(-attenuationCoefficient * transmissionDistance);\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec3 getIBLVolumeRefraction(vec3 n, vec3 v, float perceptualRoughness, vec3 baseColor, vec3 specularColor,\\n\\t\\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\\n\\t\\tvec3 attenuationColor, float attenuationDistance) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay(n, v, thickness, ior, modelMatrix);\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4(refractedRayExit, 1.0);\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec3 transmittedLight = getTransmissionSample(refractionCoords, perceptualRoughness, ior);\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation(transmittedLight, length(transmissionRay), attenuationColor, attenuationDistance);\\n\\t\\treturn (1.0 - specularColor) * attenuatedColor * baseColor;\\n\\t}\\n#endif\";\n\n\tvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\n\tvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\n\tvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\n\tvar cube_frag = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\n\tvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\n\tvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\n\tvar meshtoon_frag = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshtoon_vert = \"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform vec3 attenuationColor;\\n\\tuniform float attenuationDistance;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <transmission_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec4 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition;\\n#endif\\n}\";\n\n\tvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\n\tvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar shadow_vert = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tconst ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_vertex: fog_vertex,\n\t\tfog_pars_vertex: fog_pars_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars_begin: lights_pars_begin,\n\t\tlights_toon_fragment: lights_toon_fragment,\n\t\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_fragment_begin: lights_fragment_begin,\n\t\tlights_fragment_maps: lights_fragment_maps,\n\t\tlights_fragment_end: lights_fragment_end,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_fragment_begin: normal_fragment_begin,\n\t\tnormal_fragment_maps: normal_fragment_maps,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\t\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\t\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\tdithering_fragment: dithering_fragment,\n\t\tdithering_pars_fragment: dithering_pars_fragment,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\ttransmission_fragment: transmission_fragment,\n\t\ttransmission_pars_fragment: transmission_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\t\tbackground_frag: background_frag,\n\t\tbackground_vert: background_vert,\n\t\tcube_frag: cube_frag,\n\t\tcube_vert: cube_vert,\n\t\tdepth_frag: depth_frag,\n\t\tdepth_vert: depth_vert,\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\n\t\tequirect_frag: equirect_frag,\n\t\tequirect_vert: equirect_vert,\n\t\tlinedashed_frag: linedashed_frag,\n\t\tlinedashed_vert: linedashed_vert,\n\t\tmeshbasic_frag: meshbasic_frag,\n\t\tmeshbasic_vert: meshbasic_vert,\n\t\tmeshlambert_frag: meshlambert_frag,\n\t\tmeshlambert_vert: meshlambert_vert,\n\t\tmeshmatcap_frag: meshmatcap_frag,\n\t\tmeshmatcap_vert: meshmatcap_vert,\n\t\tmeshtoon_frag: meshtoon_frag,\n\t\tmeshtoon_vert: meshtoon_vert,\n\t\tmeshphong_frag: meshphong_frag,\n\t\tmeshphong_vert: meshphong_vert,\n\t\tmeshphysical_frag: meshphysical_frag,\n\t\tmeshphysical_vert: meshphysical_vert,\n\t\tnormal_frag: normal_frag,\n\t\tnormal_vert: normal_vert,\n\t\tpoints_frag: points_frag,\n\t\tpoints_vert: points_vert,\n\t\tshadow_frag: shadow_frag,\n\t\tshadow_vert: shadow_vert,\n\t\tsprite_frag: sprite_frag,\n\t\tsprite_vert: sprite_vert\n\t};\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tconst UniformsLib = {\n\t\tcommon: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t},\n\t\t\tuv2Transform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tspecularmap: {\n\t\t\tspecularMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tenvmap: {\n\t\t\tenvMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tflipEnvMap: {\n\t\t\t\tvalue: -1\n\t\t\t},\n\t\t\treflectivity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\trefractionRatio: {\n\t\t\t\tvalue: 0.98\n\t\t\t},\n\t\t\tmaxMipLevel: {\n\t\t\t\tvalue: 0\n\t\t\t}\n\t\t},\n\t\taomap: {\n\t\t\taoMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\taoMapIntensity: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\tlightmap: {\n\t\t\tlightMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tlightMapIntensity: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\temissivemap: {\n\t\t\temissiveMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tbumpmap: {\n\t\t\tbumpMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tbumpScale: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\tnormalmap: {\n\t\t\tnormalMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tnormalScale: {\n\t\t\t\tvalue: new Vector2(1, 1)\n\t\t\t}\n\t\t},\n\t\tdisplacementmap: {\n\t\t\tdisplacementMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tdisplacementScale: {\n\t\t\t\tvalue: 1\n\t\t\t},\n\t\t\tdisplacementBias: {\n\t\t\t\tvalue: 0\n\t\t\t}\n\t\t},\n\t\troughnessmap: {\n\t\t\troughnessMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tmetalnessmap: {\n\t\t\tmetalnessMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tgradientmap: {\n\t\t\tgradientMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tfog: {\n\t\t\tfogDensity: {\n\t\t\t\tvalue: 0.00025\n\t\t\t},\n\t\t\tfogNear: {\n\t\t\t\tvalue: 1\n\t\t\t},\n\t\t\tfogFar: {\n\t\t\t\tvalue: 2000\n\t\t\t},\n\t\t\tfogColor: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t}\n\t\t},\n\t\tlights: {\n\t\t\tambientLightColor: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tlightProbe: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tdirectionalLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tcolor: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdirectionalLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdirectionalShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tdirectionalShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tspotLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tdistance: {},\n\t\t\t\t\tconeCos: {},\n\t\t\t\t\tpenumbraCos: {},\n\t\t\t\t\tdecay: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tspotLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tspotShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tspotShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tpointLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\tdecay: {},\n\t\t\t\t\tdistance: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tpointLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {},\n\t\t\t\t\tshadowCameraNear: {},\n\t\t\t\t\tshadowCameraFar: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tpointShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tpointShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\themisphereLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tskyColor: {},\n\t\t\t\t\tgroundColor: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t\trectAreaLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\twidth: {},\n\t\t\t\t\theight: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tltc_1: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tltc_2: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tpoints: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t},\n\t\tsprite: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tcenter: {\n\t\t\t\tvalue: new Vector2(0.5, 0.5)\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tvalue: 0.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t}\n\t};\n\n\tconst ShaderLib = {\n\t\tbasic: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\t\t},\n\t\tlambert: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\t\t},\n\t\tphong: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t},\n\t\t\t\tspecular: {\n\t\t\t\t\tvalue: new Color(0x111111)\n\t\t\t\t},\n\t\t\t\tshininess: {\n\t\t\t\t\tvalue: 30\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\t\t},\n\t\tstandard: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t},\n\t\t\t\troughness: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t},\n\t\t\t\tmetalness: {\n\t\t\t\t\tvalue: 0.0\n\t\t\t\t},\n\t\t\t\tenvMapIntensity: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t} // temporary\n\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\t\t},\n\t\ttoon: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\t\t},\n\t\tmatcap: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, {\n\t\t\t\tmatcap: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\t\t},\n\t\tpoints: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.points, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\t\t},\n\t\tdashed: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.fog, {\n\t\t\t\tscale: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\tdashSize: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\ttotalSize: {\n\t\t\t\t\tvalue: 2\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\t\t},\n\t\tdepth: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap]),\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\t\t},\n\t\tnormal: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.normal_vert,\n\t\t\tfragmentShader: ShaderChunk.normal_frag\n\t\t},\n\t\tsprite: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.sprite, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\t\tfragmentShader: ShaderChunk.sprite_frag\n\t\t},\n\t\tbackground: {\n\t\t\tuniforms: {\n\t\t\t\tuvTransform: {\n\t\t\t\t\tvalue: new Matrix3()\n\t\t\t\t},\n\t\t\t\tt2D: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: ShaderChunk.background_vert,\n\t\t\tfragmentShader: ShaderChunk.background_frag\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\t\tcube: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.envmap, {\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\t\t},\n\t\tequirect: {\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\t\t},\n\t\tdistanceRGBA: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap, {\n\t\t\t\treferencePosition: {\n\t\t\t\t\tvalue: new Vector3()\n\t\t\t\t},\n\t\t\t\tnearDistance: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\tfarDistance: {\n\t\t\t\t\tvalue: 1000\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\t\t},\n\t\tshadow: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.lights, UniformsLib.fog, {\n\t\t\t\tcolor: {\n\t\t\t\t\tvalue: new Color(0x00000)\n\t\t\t\t},\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\n\t\t}\n\t};\n\tShaderLib.physical = {\n\t\tuniforms: mergeUniforms([ShaderLib.standard.uniforms, {\n\t\t\tclearcoat: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tclearcoatMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tclearcoatRoughness: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tclearcoatRoughnessMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tclearcoatNormalScale: {\n\t\t\t\tvalue: new Vector2(1, 1)\n\t\t\t},\n\t\t\tclearcoatNormalMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tsheen: {\n\t\t\t\tvalue: new Color(0x000000)\n\t\t\t},\n\t\t\ttransmission: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\ttransmissionMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\ttransmissionSamplerSize: {\n\t\t\t\tvalue: new Vector2()\n\t\t\t},\n\t\t\ttransmissionSamplerMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tthickness: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tthicknessMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tattenuationDistance: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tattenuationColor: {\n\t\t\t\tvalue: new Color(0x000000)\n\t\t\t}\n\t\t}]),\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\t};\n\n\tfunction WebGLBackground(renderer, cubemaps, state, objects, premultipliedAlpha) {\n\t\tconst clearColor = new Color(0x000000);\n\t\tlet clearAlpha = 0;\n\t\tlet planeMesh;\n\t\tlet boxMesh;\n\t\tlet currentBackground = null;\n\t\tlet currentBackgroundVersion = 0;\n\t\tlet currentTonemapping = null;\n\n\t\tfunction render(renderList, scene) {\n\t\t\tlet forceClear = false;\n\t\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\t\tif (background && background.isTexture) {\n\t\t\t\tbackground = cubemaps.get(background);\n\t\t\t} // Ignore background in AR\n\t\t\t// TODO: Reconsider this.\n\n\n\t\t\tconst xr = renderer.xr;\n\t\t\tconst session = xr.getSession && xr.getSession();\n\n\t\t\tif (session && session.environmentBlendMode === 'additive') {\n\t\t\t\tbackground = null;\n\t\t\t}\n\n\t\t\tif (background === null) {\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t} else if (background && background.isColor) {\n\t\t\t\tsetClear(background, 1);\n\t\t\t\tforceClear = true;\n\t\t\t}\n\n\t\t\tif (renderer.autoClear || forceClear) {\n\t\t\t\trenderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n\t\t\t}\n\n\t\t\tif (background && (background.isCubeTexture || background.mapping === CubeUVReflectionMapping)) {\n\t\t\t\tif (boxMesh === undefined) {\n\t\t\t\t\tboxMesh = new Mesh(new BoxGeometry(1, 1, 1), new ShaderMaterial({\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms(ShaderLib.cube.uniforms),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t}));\n\t\t\t\t\tboxMesh.geometry.deleteAttribute('normal');\n\t\t\t\t\tboxMesh.geometry.deleteAttribute('uv');\n\n\t\t\t\t\tboxMesh.onBeforeRender = function (renderer, scene, camera) {\n\t\t\t\t\t\tthis.matrixWorld.copyPosition(camera.matrixWorld);\n\t\t\t\t\t}; // enable code injection for non-built-in material\n\n\n\t\t\t\t\tObject.defineProperty(boxMesh.material, 'envMap', {\n\t\t\t\t\t\tget: function () {\n\t\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tobjects.update(boxMesh);\n\t\t\t\t}\n\n\t\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\t\tboxMesh.material.uniforms.flipEnvMap.value = background.isCubeTexture && background._needsFlipEnvMap ? -1 : 1;\n\n\t\t\t\tif (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n\t\t\t\t\tboxMesh.material.needsUpdate = true;\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\t\t\t\t} // push to the pre-sorted opaque render list\n\n\n\t\t\t\trenderList.unshift(boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null);\n\t\t\t} else if (background && background.isTexture) {\n\t\t\t\tif (planeMesh === undefined) {\n\t\t\t\t\tplaneMesh = new Mesh(new PlaneGeometry(2, 2), new ShaderMaterial({\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms(ShaderLib.background.uniforms),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t}));\n\t\t\t\t\tplaneMesh.geometry.deleteAttribute('normal'); // enable code injection for non-built-in material\n\n\t\t\t\t\tObject.defineProperty(planeMesh.material, 'map', {\n\t\t\t\t\t\tget: function () {\n\t\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tobjects.update(planeMesh);\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\t\tif (background.matrixAutoUpdate === true) {\n\t\t\t\t\tbackground.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy(background.matrix);\n\n\t\t\t\tif (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n\t\t\t\t\tplaneMesh.material.needsUpdate = true;\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\t\t\t\t} // push to the pre-sorted opaque render list\n\n\n\t\t\t\trenderList.unshift(planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null);\n\t\t\t}\n\t\t}\n\n\t\tfunction setClear(color, alpha) {\n\t\t\tstate.buffers.color.setClear(color.r, color.g, color.b, alpha, premultipliedAlpha);\n\t\t}\n\n\t\treturn {\n\t\t\tgetClearColor: function () {\n\t\t\t\treturn clearColor;\n\t\t\t},\n\t\t\tsetClearColor: function (color, alpha = 1) {\n\t\t\t\tclearColor.set(color);\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t},\n\t\t\tgetClearAlpha: function () {\n\t\t\t\treturn clearAlpha;\n\t\t\t},\n\t\t\tsetClearAlpha: function (alpha) {\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t},\n\t\t\trender: render\n\t\t};\n\t}\n\n\tfunction WebGLBindingStates(gl, extensions, attributes, capabilities) {\n\t\tconst maxVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\t\tconst extension = capabilities.isWebGL2 ? null : extensions.get('OES_vertex_array_object');\n\t\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\t\tconst bindingStates = {};\n\t\tconst defaultState = createBindingState(null);\n\t\tlet currentState = defaultState;\n\n\t\tfunction setup(object, material, program, geometry, index) {\n\t\t\tlet updateBuffers = false;\n\n\t\t\tif (vaoAvailable) {\n\t\t\t\tconst state = getBindingState(geometry, program, material);\n\n\t\t\t\tif (currentState !== state) {\n\t\t\t\t\tcurrentState = state;\n\t\t\t\t\tbindVertexArrayObject(currentState.object);\n\t\t\t\t}\n\n\t\t\t\tupdateBuffers = needsUpdate(geometry, index);\n\t\t\t\tif (updateBuffers) saveCache(geometry, index);\n\t\t\t} else {\n\t\t\t\tconst wireframe = material.wireframe === true;\n\n\t\t\t\tif (currentState.geometry !== geometry.id || currentState.program !== program.id || currentState.wireframe !== wireframe) {\n\t\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\t\tcurrentState.program = program.id;\n\t\t\t\t\tcurrentState.wireframe = wireframe;\n\t\t\t\t\tupdateBuffers = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh === true) {\n\t\t\t\tupdateBuffers = true;\n\t\t\t}\n\n\t\t\tif (index !== null) {\n\t\t\t\tattributes.update(index, gl.ELEMENT_ARRAY_BUFFER);\n\t\t\t}\n\n\t\t\tif (updateBuffers) {\n\t\t\t\tsetupVertexAttributes(object, material, program, geometry);\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, attributes.get(index).buffer);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction createVertexArrayObject() {\n\t\t\tif (capabilities.isWebGL2) return gl.createVertexArray();\n\t\t\treturn extension.createVertexArrayOES();\n\t\t}\n\n\t\tfunction bindVertexArrayObject(vao) {\n\t\t\tif (capabilities.isWebGL2) return gl.bindVertexArray(vao);\n\t\t\treturn extension.bindVertexArrayOES(vao);\n\t\t}\n\n\t\tfunction deleteVertexArrayObject(vao) {\n\t\t\tif (capabilities.isWebGL2) return gl.deleteVertexArray(vao);\n\t\t\treturn extension.deleteVertexArrayOES(vao);\n\t\t}\n\n\t\tfunction getBindingState(geometry, program, material) {\n\t\t\tconst wireframe = material.wireframe === true;\n\t\t\tlet programMap = bindingStates[geometry.id];\n\n\t\t\tif (programMap === undefined) {\n\t\t\t\tprogramMap = {};\n\t\t\t\tbindingStates[geometry.id] = programMap;\n\t\t\t}\n\n\t\t\tlet stateMap = programMap[program.id];\n\n\t\t\tif (stateMap === undefined) {\n\t\t\t\tstateMap = {};\n\t\t\t\tprogramMap[program.id] = stateMap;\n\t\t\t}\n\n\t\t\tlet state = stateMap[wireframe];\n\n\t\t\tif (state === undefined) {\n\t\t\t\tstate = createBindingState(createVertexArrayObject());\n\t\t\t\tstateMap[wireframe] = state;\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\tfunction createBindingState(vao) {\n\t\t\tconst newAttributes = [];\n\t\t\tconst enabledAttributes = [];\n\t\t\tconst attributeDivisors = [];\n\n\t\t\tfor (let i = 0; i < maxVertexAttributes; i++) {\n\t\t\t\tnewAttributes[i] = 0;\n\t\t\t\tenabledAttributes[i] = 0;\n\t\t\t\tattributeDivisors[i] = 0;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\t\tgeometry: null,\n\t\t\t\tprogram: null,\n\t\t\t\twireframe: false,\n\t\t\t\tnewAttributes: newAttributes,\n\t\t\t\tenabledAttributes: enabledAttributes,\n\t\t\t\tattributeDivisors: attributeDivisors,\n\t\t\t\tobject: vao,\n\t\t\t\tattributes: {},\n\t\t\t\tindex: null\n\t\t\t};\n\t\t}\n\n\t\tfunction needsUpdate(geometry, index) {\n\t\t\tconst cachedAttributes = currentState.attributes;\n\t\t\tconst geometryAttributes = geometry.attributes;\n\t\t\tlet attributesNum = 0;\n\n\t\t\tfor (const key in geometryAttributes) {\n\t\t\t\tconst cachedAttribute = cachedAttributes[key];\n\t\t\t\tconst geometryAttribute = geometryAttributes[key];\n\t\t\t\tif (cachedAttribute === undefined) return true;\n\t\t\t\tif (cachedAttribute.attribute !== geometryAttribute) return true;\n\t\t\t\tif (cachedAttribute.data !== geometryAttribute.data) return true;\n\t\t\t\tattributesNum++;\n\t\t\t}\n\n\t\t\tif (currentState.attributesNum !== attributesNum) return true;\n\t\t\tif (currentState.index !== index) return true;\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction saveCache(geometry, index) {\n\t\t\tconst cache = {};\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tlet attributesNum = 0;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tconst attribute = attributes[key];\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif (attribute.data) {\n\t\t\t\t\tdata.data = attribute.data;\n\t\t\t\t}\n\n\t\t\t\tcache[key] = data;\n\t\t\t\tattributesNum++;\n\t\t\t}\n\n\t\t\tcurrentState.attributes = cache;\n\t\t\tcurrentState.attributesNum = attributesNum;\n\t\t\tcurrentState.index = index;\n\t\t}\n\n\t\tfunction initAttributes() {\n\t\t\tconst newAttributes = currentState.newAttributes;\n\n\t\t\tfor (let i = 0, il = newAttributes.length; i < il; i++) {\n\t\t\t\tnewAttributes[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\tfunction enableAttribute(attribute) {\n\t\t\tenableAttributeAndDivisor(attribute, 0);\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor(attribute, meshPerAttribute) {\n\t\t\tconst newAttributes = currentState.newAttributes;\n\t\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\t\tconst attributeDivisors = currentState.attributeDivisors;\n\t\t\tnewAttributes[attribute] = 1;\n\n\t\t\tif (enabledAttributes[attribute] === 0) {\n\t\t\t\tgl.enableVertexAttribArray(attribute);\n\t\t\t\tenabledAttributes[attribute] = 1;\n\t\t\t}\n\n\t\t\tif (attributeDivisors[attribute] !== meshPerAttribute) {\n\t\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get('ANGLE_instanced_arrays');\n\t\t\t\textension[capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](attribute, meshPerAttribute);\n\t\t\t\tattributeDivisors[attribute] = meshPerAttribute;\n\t\t\t}\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\t\t\tconst newAttributes = currentState.newAttributes;\n\t\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\t\tfor (let i = 0, il = enabledAttributes.length; i < il; i++) {\n\t\t\t\tif (enabledAttributes[i] !== newAttributes[i]) {\n\t\t\t\t\tgl.disableVertexAttribArray(i);\n\t\t\t\t\tenabledAttributes[i] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction vertexAttribPointer(index, size, type, normalized, stride, offset) {\n\t\t\tif (capabilities.isWebGL2 === true && (type === gl.INT || type === gl.UNSIGNED_INT)) {\n\t\t\t\tgl.vertexAttribIPointer(index, size, type, stride, offset);\n\t\t\t} else {\n\t\t\t\tgl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n\t\t\t}\n\t\t}\n\n\t\tfunction setupVertexAttributes(object, material, program, geometry) {\n\t\t\tif (capabilities.isWebGL2 === false && (object.isInstancedMesh || geometry.isInstancedBufferGeometry)) {\n\t\t\t\tif (extensions.get('ANGLE_instanced_arrays') === null) return;\n\t\t\t}\n\n\t\t\tinitAttributes();\n\t\t\tconst geometryAttributes = geometry.attributes;\n\t\t\tconst programAttributes = program.getAttributes();\n\t\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor (const name in programAttributes) {\n\t\t\t\tconst programAttribute = programAttributes[name];\n\n\t\t\t\tif (programAttribute >= 0) {\n\t\t\t\t\tconst geometryAttribute = geometryAttributes[name];\n\n\t\t\t\t\tif (geometryAttribute !== undefined) {\n\t\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\t\t\t\t\t\tconst attribute = attributes.get(geometryAttribute); // TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif (attribute === undefined) continue;\n\t\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t\tif (geometryAttribute.isInterleavedBufferAttribute) {\n\t\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif (data && data.isInstancedInterleavedBuffer) {\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute, data.meshPerAttribute);\n\n\t\t\t\t\t\t\t\tif (geometry._maxInstanceCount === undefined) {\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tenableAttribute(programAttribute);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\t\t\t\tvertexAttribPointer(programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (geometryAttribute.isInstancedBufferAttribute) {\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute, geometryAttribute.meshPerAttribute);\n\n\t\t\t\t\t\t\t\tif (geometry._maxInstanceCount === undefined) {\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tenableAttribute(programAttribute);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\t\t\t\tvertexAttribPointer(programAttribute, size, type, normalized, 0, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (name === 'instanceMatrix') {\n\t\t\t\t\t\tconst attribute = attributes.get(object.instanceMatrix); // TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif (attribute === undefined) continue;\n\t\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 0, 1);\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 1, 1);\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 2, 1);\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 3, 1);\n\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 0, 4, type, false, 64, 0);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 1, 4, type, false, 64, 16);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 2, 4, type, false, 64, 32);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 3, 4, type, false, 64, 48);\n\t\t\t\t\t} else if (name === 'instanceColor') {\n\t\t\t\t\t\tconst attribute = attributes.get(object.instanceColor); // TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif (attribute === undefined) continue;\n\t\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute, 1);\n\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute, 3, type, false, 12, 0);\n\t\t\t\t\t} else if (materialDefaultAttributeValues !== undefined) {\n\t\t\t\t\t\tconst value = materialDefaultAttributeValues[name];\n\n\t\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\t\tswitch (value.length) {\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib2fv(programAttribute, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib3fv(programAttribute, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib4fv(programAttribute, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib1fv(programAttribute, value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdisableUnusedAttributes();\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\treset();\n\n\t\t\tfor (const geometryId in bindingStates) {\n\t\t\t\tconst programMap = bindingStates[geometryId];\n\n\t\t\t\tfor (const programId in programMap) {\n\t\t\t\t\tconst stateMap = programMap[programId];\n\n\t\t\t\t\tfor (const wireframe in stateMap) {\n\t\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete programMap[programId];\n\t\t\t\t}\n\n\t\t\t\tdelete bindingStates[geometryId];\n\t\t\t}\n\t\t}\n\n\t\tfunction releaseStatesOfGeometry(geometry) {\n\t\t\tif (bindingStates[geometry.id] === undefined) return;\n\t\t\tconst programMap = bindingStates[geometry.id];\n\n\t\t\tfor (const programId in programMap) {\n\t\t\t\tconst stateMap = programMap[programId];\n\n\t\t\t\tfor (const wireframe in stateMap) {\n\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[programId];\n\t\t\t}\n\n\t\t\tdelete bindingStates[geometry.id];\n\t\t}\n\n\t\tfunction releaseStatesOfProgram(program) {\n\t\t\tfor (const geometryId in bindingStates) {\n\t\t\t\tconst programMap = bindingStates[geometryId];\n\t\t\t\tif (programMap[program.id] === undefined) continue;\n\t\t\t\tconst stateMap = programMap[program.id];\n\n\t\t\t\tfor (const wireframe in stateMap) {\n\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[program.id];\n\t\t\t}\n\t\t}\n\n\t\tfunction reset() {\n\t\t\tresetDefaultState();\n\t\t\tif (currentState === defaultState) return;\n\t\t\tcurrentState = defaultState;\n\t\t\tbindVertexArrayObject(currentState.object);\n\t\t} // for backward-compatilibity\n\n\n\t\tfunction resetDefaultState() {\n\t\t\tdefaultState.geometry = null;\n\t\t\tdefaultState.program = null;\n\t\t\tdefaultState.wireframe = false;\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\treset: reset,\n\t\t\tresetDefaultState: resetDefaultState,\n\t\t\tdispose: dispose,\n\t\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes\n\t\t};\n\t}\n\n\tfunction WebGLBufferRenderer(gl, extensions, info, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tlet mode;\n\n\t\tfunction setMode(value) {\n\t\t\tmode = value;\n\t\t}\n\n\t\tfunction render(start, count) {\n\t\t\tgl.drawArrays(mode, start, count);\n\t\t\tinfo.update(count, mode, 1);\n\t\t}\n\n\t\tfunction renderInstances(start, count, primcount) {\n\t\t\tif (primcount === 0) return;\n\t\t\tlet extension, methodName;\n\n\t\t\tif (isWebGL2) {\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawArraysInstanced';\n\t\t\t} else {\n\t\t\t\textension = extensions.get('ANGLE_instanced_arrays');\n\t\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\textension[methodName](mode, start, count, primcount);\n\t\t\tinfo.update(count, mode, primcount);\n\t\t} //\n\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\t}\n\n\tfunction WebGLCapabilities(gl, extensions, parameters) {\n\t\tlet maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\t\t\tif (maxAnisotropy !== undefined) return maxAnisotropy;\n\n\t\t\tif (extensions.has('EXT_texture_filter_anisotropic') === true) {\n\t\t\t\tconst extension = extensions.get('EXT_texture_filter_anisotropic');\n\t\t\t\tmaxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n\t\t\t} else {\n\t\t\t\tmaxAnisotropy = 0;\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\t\t}\n\n\t\tfunction getMaxPrecision(precision) {\n\t\t\tif (precision === 'highp') {\n\t\t\t\tif (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n\t\t\t\t\treturn 'highp';\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\t\t\t}\n\n\t\t\tif (precision === 'mediump') {\n\t\t\t\tif (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n\t\t\t\t\treturn 'mediump';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\t\t}\n\t\t/* eslint-disable no-undef */\n\n\n\t\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext;\n\t\t/* eslint-enable no-undef */\n\n\t\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tconst maxPrecision = getMaxPrecision(precision);\n\n\t\tif (maxPrecision !== precision) {\n\t\t\tconsole.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\n\t\t\tprecision = maxPrecision;\n\t\t}\n\n\t\tconst drawBuffers = isWebGL2 || extensions.has('WEBGL_draw_buffers');\n\t\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\t\tconst maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\t\tconst maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n\t\tconst maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n\t\tconst maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n\t\tconst maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\t\tconst maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n\t\tconst maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n\t\tconst maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n\t\tconst vertexTextures = maxVertexTextures > 0;\n\t\tconst floatFragmentTextures = isWebGL2 || extensions.has('OES_texture_float');\n\t\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\t\tconst maxSamples = isWebGL2 ? gl.getParameter(gl.MAX_SAMPLES) : 0;\n\t\treturn {\n\t\t\tisWebGL2: isWebGL2,\n\t\t\tdrawBuffers: drawBuffers,\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures,\n\t\t\tmaxSamples: maxSamples\n\t\t};\n\t}\n\n\tfunction WebGLClipping(properties) {\n\t\tconst scope = this;\n\t\tlet globalState = null,\n\t\t\t\tnumGlobalPlanes = 0,\n\t\t\t\tlocalClippingEnabled = false,\n\t\t\t\trenderingShadows = false;\n\t\tconst plane = new Plane(),\n\t\t\t\t\tviewNormalMatrix = new Matrix3(),\n\t\t\t\t\tuniform = {\n\t\t\tvalue: null,\n\t\t\tneedsUpdate: false\n\t\t};\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function (planes, enableLocalClipping, camera) {\n\t\t\tconst enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 || localClippingEnabled;\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\t\t\tglobalState = projectPlanes(planes, camera, 0);\n\t\t\tnumGlobalPlanes = planes.length;\n\t\t\treturn enabled;\n\t\t};\n\n\t\tthis.beginShadows = function () {\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes(null);\n\t\t};\n\n\t\tthis.endShadows = function () {\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\t\t};\n\n\t\tthis.setState = function (material, camera, useCache) {\n\t\t\tconst planes = material.clippingPlanes,\n\t\t\t\t\t\tclipIntersection = material.clipIntersection,\n\t\t\t\t\t\tclipShadows = material.clipShadows;\n\t\t\tconst materialProperties = properties.get(material);\n\n\t\t\tif (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\n\t\t\t\t// there's no local clipping\n\t\t\t\tif (renderingShadows) {\n\t\t\t\t\t// there's no global clipping\n\t\t\t\t\tprojectPlanes(null);\n\t\t\t\t} else {\n\t\t\t\t\tresetGlobalState();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\t\t\tlGlobal = nGlobal * 4;\n\t\t\t\tlet dstArray = materialProperties.clippingState || null;\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes(planes, camera, lGlobal, useCache);\n\n\t\t\t\tfor (let i = 0; i !== lGlobal; ++i) {\n\t\t\t\t\tdstArray[i] = globalState[i];\n\t\t\t\t}\n\n\t\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\t\t\t}\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\t\t\tif (uniform.value !== globalState) {\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\t\t}\n\n\t\tfunction projectPlanes(planes, camera, dstOffset, skipTransform) {\n\t\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\t\tlet dstArray = null;\n\n\t\t\tif (nPlanes !== 0) {\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif (skipTransform !== true || dstArray === null) {\n\t\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix(viewMatrix);\n\n\t\t\t\t\tif (dstArray === null || dstArray.length < flatSize) {\n\t\t\t\t\t\tdstArray = new Float32Array(flatSize);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\n\t\t\t\t\t\tplane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\n\t\t\t\t\t\tplane.normal.toArray(dstArray, i4);\n\t\t\t\t\t\tdstArray[i4 + 3] = plane.constant;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\tscope.numIntersection = 0;\n\t\t\treturn dstArray;\n\t\t}\n\t}\n\n\tfunction WebGLCubeMaps(renderer) {\n\t\tlet cubemaps = new WeakMap();\n\n\t\tfunction mapTextureMapping(texture, mapping) {\n\t\t\tif (mapping === EquirectangularReflectionMapping) {\n\t\t\t\ttexture.mapping = CubeReflectionMapping;\n\t\t\t} else if (mapping === EquirectangularRefractionMapping) {\n\t\t\t\ttexture.mapping = CubeRefractionMapping;\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tfunction get(texture) {\n\t\t\tif (texture && texture.isTexture) {\n\t\t\t\tconst mapping = texture.mapping;\n\n\t\t\t\tif (mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping) {\n\t\t\t\t\tif (cubemaps.has(texture)) {\n\t\t\t\t\t\tconst cubemap = cubemaps.get(texture).texture;\n\t\t\t\t\t\treturn mapTextureMapping(cubemap, texture.mapping);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif (image && image.height > 0) {\n\t\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget(image.height / 2);\n\t\t\t\t\t\t\trenderTarget.fromEquirectangularTexture(renderer, texture);\n\t\t\t\t\t\t\tcubemaps.set(texture, renderTarget);\n\t\t\t\t\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t\t\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\n\t\t\t\t\t\t\treturn mapTextureMapping(renderTarget.texture, texture.mapping);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tfunction onTextureDispose(event) {\n\t\t\tconst texture = event.target;\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\n\t\t\tconst cubemap = cubemaps.get(texture);\n\n\t\t\tif (cubemap !== undefined) {\n\t\t\t\tcubemaps.delete(texture);\n\t\t\t\tcubemap.dispose();\n\t\t\t}\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tcubemaps = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction WebGLExtensions(gl) {\n\t\tconst extensions = {};\n\n\t\tfunction getExtension(name) {\n\t\t\tif (extensions[name] !== undefined) {\n\t\t\t\treturn extensions[name];\n\t\t\t}\n\n\t\t\tlet extension;\n\n\t\t\tswitch (name) {\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension(name);\n\t\t\t}\n\n\t\t\textensions[name] = extension;\n\t\t\treturn extension;\n\t\t}\n\n\t\treturn {\n\t\t\thas: function (name) {\n\t\t\t\treturn getExtension(name) !== null;\n\t\t\t},\n\t\t\tinit: function (capabilities) {\n\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\tgetExtension('EXT_color_buffer_float');\n\t\t\t\t} else {\n\t\t\t\t\tgetExtension('WEBGL_depth_texture');\n\t\t\t\t\tgetExtension('OES_texture_float');\n\t\t\t\t\tgetExtension('OES_texture_half_float');\n\t\t\t\t\tgetExtension('OES_texture_half_float_linear');\n\t\t\t\t\tgetExtension('OES_standard_derivatives');\n\t\t\t\t\tgetExtension('OES_element_index_uint');\n\t\t\t\t\tgetExtension('OES_vertex_array_object');\n\t\t\t\t\tgetExtension('ANGLE_instanced_arrays');\n\t\t\t\t}\n\n\t\t\t\tgetExtension('OES_texture_float_linear');\n\t\t\t\tgetExtension('EXT_color_buffer_half_float');\n\t\t\t},\n\t\t\tget: function (name) {\n\t\t\t\tconst extension = getExtension(name);\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n\t\t\t\t}\n\n\t\t\t\treturn extension;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction WebGLGeometries(gl, attributes, info, bindingStates) {\n\t\tconst geometries = {};\n\t\tconst wireframeAttributes = new WeakMap();\n\n\t\tfunction onGeometryDispose(event) {\n\t\t\tconst geometry = event.target;\n\n\t\t\tif (geometry.index !== null) {\n\t\t\t\tattributes.remove(geometry.index);\n\t\t\t}\n\n\t\t\tfor (const name in geometry.attributes) {\n\t\t\t\tattributes.remove(geometry.attributes[name]);\n\t\t\t}\n\n\t\t\tgeometry.removeEventListener('dispose', onGeometryDispose);\n\t\t\tdelete geometries[geometry.id];\n\t\t\tconst attribute = wireframeAttributes.get(geometry);\n\n\t\t\tif (attribute) {\n\t\t\t\tattributes.remove(attribute);\n\t\t\t\twireframeAttributes.delete(geometry);\n\t\t\t}\n\n\t\t\tbindingStates.releaseStatesOfGeometry(geometry);\n\n\t\t\tif (geometry.isInstancedBufferGeometry === true) {\n\t\t\t\tdelete geometry._maxInstanceCount;\n\t\t\t} //\n\n\n\t\t\tinfo.memory.geometries--;\n\t\t}\n\n\t\tfunction get(object, geometry) {\n\t\t\tif (geometries[geometry.id] === true) return geometry;\n\t\t\tgeometry.addEventListener('dispose', onGeometryDispose);\n\t\t\tgeometries[geometry.id] = true;\n\t\t\tinfo.memory.geometries++;\n\t\t\treturn geometry;\n\t\t}\n\n\t\tfunction update(geometry) {\n\t\t\tconst geometryAttributes = geometry.attributes; // Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\t\tfor (const name in geometryAttributes) {\n\t\t\t\tattributes.update(geometryAttributes[name], gl.ARRAY_BUFFER);\n\t\t\t} // morph targets\n\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor (const name in morphAttributes) {\n\t\t\t\tconst array = morphAttributes[name];\n\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i++) {\n\t\t\t\t\tattributes.update(array[i], gl.ARRAY_BUFFER);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction updateWireframeAttribute(geometry) {\n\t\t\tconst indices = [];\n\t\t\tconst geometryIndex = geometry.index;\n\t\t\tconst geometryPosition = geometry.attributes.position;\n\t\t\tlet version = 0;\n\n\t\t\tif (geometryIndex !== null) {\n\t\t\t\tconst array = geometryIndex.array;\n\t\t\t\tversion = geometryIndex.version;\n\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i += 3) {\n\t\t\t\t\tconst a = array[i + 0];\n\t\t\t\t\tconst b = array[i + 1];\n\t\t\t\t\tconst c = array[i + 2];\n\t\t\t\t\tindices.push(a, b, b, c, c, a);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst array = geometryPosition.array;\n\t\t\t\tversion = geometryPosition.version;\n\n\t\t\t\tfor (let i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n\t\t\t\t\tconst a = i + 0;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\t\t\t\t\tindices.push(a, b, b, c, c, a);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst attribute = new (arrayMax(indices) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\n\t\t\tattribute.version = version; // Updating index buffer in VAO now. See WebGLBindingStates\n\t\t\t//\n\n\t\t\tconst previousAttribute = wireframeAttributes.get(geometry);\n\t\t\tif (previousAttribute) attributes.remove(previousAttribute); //\n\n\t\t\twireframeAttributes.set(geometry, attribute);\n\t\t}\n\n\t\tfunction getWireframeAttribute(geometry) {\n\t\t\tconst currentAttribute = wireframeAttributes.get(geometry);\n\n\t\t\tif (currentAttribute) {\n\t\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\t\tif (geometryIndex !== null) {\n\t\t\t\t\t// if the attribute is obsolete, create a new one\n\t\t\t\t\tif (currentAttribute.version < geometryIndex.version) {\n\t\t\t\t\t\tupdateWireframeAttribute(geometry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdateWireframeAttribute(geometry);\n\t\t\t}\n\n\t\t\treturn wireframeAttributes.get(geometry);\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tupdate: update,\n\t\t\tgetWireframeAttribute: getWireframeAttribute\n\t\t};\n\t}\n\n\tfunction WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tlet mode;\n\n\t\tfunction setMode(value) {\n\t\t\tmode = value;\n\t\t}\n\n\t\tlet type, bytesPerElement;\n\n\t\tfunction setIndex(value) {\n\t\t\ttype = value.type;\n\t\t\tbytesPerElement = value.bytesPerElement;\n\t\t}\n\n\t\tfunction render(start, count) {\n\t\t\tgl.drawElements(mode, count, type, start * bytesPerElement);\n\t\t\tinfo.update(count, mode, 1);\n\t\t}\n\n\t\tfunction renderInstances(start, count, primcount) {\n\t\t\tif (primcount === 0) return;\n\t\t\tlet extension, methodName;\n\n\t\t\tif (isWebGL2) {\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawElementsInstanced';\n\t\t\t} else {\n\t\t\t\textension = extensions.get('ANGLE_instanced_arrays');\n\t\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\textension[methodName](mode, count, type, start * bytesPerElement, primcount);\n\t\t\tinfo.update(count, mode, primcount);\n\t\t} //\n\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\t}\n\n\tfunction WebGLInfo(gl) {\n\t\tconst memory = {\n\t\t\tgeometries: 0,\n\t\t\ttextures: 0\n\t\t};\n\t\tconst render = {\n\t\t\tframe: 0,\n\t\t\tcalls: 0,\n\t\t\ttriangles: 0,\n\t\t\tpoints: 0,\n\t\t\tlines: 0\n\t\t};\n\n\t\tfunction update(count, mode, instanceCount) {\n\t\t\trender.calls++;\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase gl.TRIANGLES:\n\t\t\t\t\trender.triangles += instanceCount * (count / 3);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINES:\n\t\t\t\t\trender.lines += instanceCount * (count / 2);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINE_STRIP:\n\t\t\t\t\trender.lines += instanceCount * (count - 1);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINE_LOOP:\n\t\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.POINTS:\n\t\t\t\t\trender.points += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error('THREE.WebGLInfo: Unknown draw mode:', mode);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfunction reset() {\n\t\t\trender.frame++;\n\t\t\trender.calls = 0;\n\t\t\trender.triangles = 0;\n\t\t\trender.points = 0;\n\t\t\trender.lines = 0;\n\t\t}\n\n\t\treturn {\n\t\t\tmemory: memory,\n\t\t\trender: render,\n\t\t\tprograms: null,\n\t\t\tautoReset: true,\n\t\t\treset: reset,\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tfunction numericalSort(a, b) {\n\t\treturn a[0] - b[0];\n\t}\n\n\tfunction absNumericalSort(a, b) {\n\t\treturn Math.abs(b[1]) - Math.abs(a[1]);\n\t}\n\n\tfunction WebGLMorphtargets(gl) {\n\t\tconst influencesList = {};\n\t\tconst morphInfluences = new Float32Array(8);\n\t\tconst workInfluences = [];\n\n\t\tfor (let i = 0; i < 8; i++) {\n\t\t\tworkInfluences[i] = [i, 0];\n\t\t}\n\n\t\tfunction update(object, geometry, material, program) {\n\t\t\tconst objectInfluences = object.morphTargetInfluences; // When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\t\t\tlet influences = influencesList[geometry.id];\n\n\t\t\tif (influences === undefined || influences.length !== length) {\n\t\t\t\t// initialise list\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tinfluences[i] = [i, 0];\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[geometry.id] = influences;\n\t\t\t} // Collect influences\n\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst influence = influences[i];\n\t\t\t\tinfluence[0] = i;\n\t\t\t\tinfluence[1] = objectInfluences[i];\n\t\t\t}\n\n\t\t\tinfluences.sort(absNumericalSort);\n\n\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\tif (i < length && influences[i][1]) {\n\t\t\t\t\tworkInfluences[i][0] = influences[i][0];\n\t\t\t\t\tworkInfluences[i][1] = influences[i][1];\n\t\t\t\t} else {\n\t\t\t\t\tworkInfluences[i][0] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[i][1] = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tworkInfluences.sort(numericalSort);\n\t\t\tconst morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\t\tconst morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\tconst influence = workInfluences[i];\n\t\t\t\tconst index = influence[0];\n\t\t\t\tconst value = influence[1];\n\n\t\t\t\tif (index !== Number.MAX_SAFE_INTEGER && value) {\n\t\t\t\t\tif (morphTargets && geometry.getAttribute('morphTarget' + i) !== morphTargets[index]) {\n\t\t\t\t\t\tgeometry.setAttribute('morphTarget' + i, morphTargets[index]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (morphNormals && geometry.getAttribute('morphNormal' + i) !== morphNormals[index]) {\n\t\t\t\t\t\tgeometry.setAttribute('morphNormal' + i, morphNormals[index]);\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[i] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\t\t\t\t} else {\n\t\t\t\t\tif (morphTargets && geometry.hasAttribute('morphTarget' + i) === true) {\n\t\t\t\t\t\tgeometry.deleteAttribute('morphTarget' + i);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (morphNormals && geometry.hasAttribute('morphNormal' + i) === true) {\n\t\t\t\t\t\tgeometry.deleteAttribute('morphNormal' + i);\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[i] = 0;\n\t\t\t\t}\n\t\t\t} // GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetBaseInfluence', morphBaseInfluence);\n\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetInfluences', morphInfluences);\n\t\t}\n\n\t\treturn {\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tfunction WebGLObjects(gl, geometries, attributes, info) {\n\t\tlet updateMap = new WeakMap();\n\n\t\tfunction update(object) {\n\t\t\tconst frame = info.render.frame;\n\t\t\tconst geometry = object.geometry;\n\t\t\tconst buffergeometry = geometries.get(object, geometry); // Update once per frame\n\n\t\t\tif (updateMap.get(buffergeometry) !== frame) {\n\t\t\t\tgeometries.update(buffergeometry);\n\t\t\t\tupdateMap.set(buffergeometry, frame);\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh) {\n\t\t\t\tif (object.hasEventListener('dispose', onInstancedMeshDispose) === false) {\n\t\t\t\t\tobject.addEventListener('dispose', onInstancedMeshDispose);\n\t\t\t\t}\n\n\t\t\t\tattributes.update(object.instanceMatrix, gl.ARRAY_BUFFER);\n\n\t\t\t\tif (object.instanceColor !== null) {\n\t\t\t\t\tattributes.update(object.instanceColor, gl.ARRAY_BUFFER);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn buffergeometry;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tupdateMap = new WeakMap();\n\t\t}\n\n\t\tfunction onInstancedMeshDispose(event) {\n\t\t\tconst instancedMesh = event.target;\n\t\t\tinstancedMesh.removeEventListener('dispose', onInstancedMeshDispose);\n\t\t\tattributes.remove(instancedMesh.instanceMatrix);\n\t\t\tif (instancedMesh.instanceColor !== null) attributes.remove(instancedMesh.instanceColor);\n\t\t}\n\n\t\treturn {\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tclass DataTexture2DArray extends Texture {\n\t\tconstructor(data = null, width = 1, height = 1, depth = 1) {\n\t\t\tsuper(null);\n\t\t\tthis.image = {\n\t\t\t\tdata,\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tdepth\n\t\t\t};\n\t\t\tthis.magFilter = NearestFilter;\n\t\t\tthis.minFilter = NearestFilter;\n\t\t\tthis.wrapR = ClampToEdgeWrapping;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n\tclass DataTexture3D extends Texture {\n\t\tconstructor(data = null, width = 1, height = 1, depth = 1) {\n\t\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t\t// Users can still set in DataTexture3D directly.\n\t\t\t//\n\t\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t\t// \ttexture.anisotropy = 16;\n\t\t\t//\n\t\t\t// See #14839\n\t\t\tsuper(null);\n\t\t\tthis.image = {\n\t\t\t\tdata,\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tdepth\n\t\t\t};\n\t\t\tthis.magFilter = NearestFilter;\n\t\t\tthis.minFilter = NearestFilter;\n\t\t\tthis.wrapR = ClampToEdgeWrapping;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tDataTexture3D.prototype.isDataTexture3D = true;\n\n\t/**\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [textures] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *\t\tthe 'textures' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (textures factorizations):\n\t *\n\t * .upload( gl, seq, values, textures )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (textures factorizations):\n\t *\n\t * .setValue( gl, name, value, textures )\n\t *\n\t * \t\tsets uniform with\tname 'name' to 'value'\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\tconst emptyTexture = new Texture();\n\tconst emptyTexture2dArray = new DataTexture2DArray();\n\tconst emptyTexture3d = new DataTexture3D();\n\tconst emptyCubeTexture = new CubeTexture(); // --- Utilities ---\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tconst arrayCacheF32 = [];\n\tconst arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\n\n\tconst mat4array = new Float32Array(16);\n\tconst mat3array = new Float32Array(9);\n\tconst mat2array = new Float32Array(4); // Flattening for arrays of vectors and matrices\n\n\tfunction flatten(array, nBlocks, blockSize) {\n\t\tconst firstElem = array[0];\n\t\tif (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tconst n = nBlocks * blockSize;\n\t\tlet r = arrayCacheF32[n];\n\n\t\tif (r === undefined) {\n\t\t\tr = new Float32Array(n);\n\t\t\tarrayCacheF32[n] = r;\n\t\t}\n\n\t\tif (nBlocks !== 0) {\n\t\t\tfirstElem.toArray(r, 0);\n\n\t\t\tfor (let i = 1, offset = 0; i !== nBlocks; ++i) {\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[i].toArray(r, offset);\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tfunction arraysEqual(a, b) {\n\t\tif (a.length !== b.length) return false;\n\n\t\tfor (let i = 0, l = a.length; i < l; i++) {\n\t\t\tif (a[i] !== b[i]) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction copyArray(a, b) {\n\t\tfor (let i = 0, l = b.length; i < l; i++) {\n\t\t\ta[i] = b[i];\n\t\t}\n\t} // Texture unit allocation\n\n\n\tfunction allocTexUnits(textures, n) {\n\t\tlet r = arrayCacheI32[n];\n\n\t\tif (r === undefined) {\n\t\t\tr = new Int32Array(n);\n\t\t\tarrayCacheI32[n] = r;\n\t\t}\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\tr[i] = textures.allocateTextureUnit();\n\t\t}\n\n\t\treturn r;\n\t} // --- Setters ---\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\t// Single scalar\n\n\n\tfunction setValueV1f(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1f(this.addr, v);\n\t\tcache[0] = v;\n\t} // Single float vector (from flat array or THREE.VectorN)\n\n\n\tfunction setValueV2f(gl, v) {\n\t\tconst cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y) {\n\t\t\t\tgl.uniform2f(this.addr, v.x, v.y);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform2fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t}\n\n\tfunction setValueV3f(gl, v) {\n\t\tconst cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\n\t\t\t\tgl.uniform3f(this.addr, v.x, v.y, v.z);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t\tcache[2] = v.z;\n\t\t\t}\n\t\t} else if (v.r !== undefined) {\n\t\t\tif (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\n\t\t\t\tgl.uniform3f(this.addr, v.r, v.g, v.b);\n\t\t\t\tcache[0] = v.r;\n\t\t\t\tcache[1] = v.g;\n\t\t\t\tcache[2] = v.b;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform3fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t}\n\n\tfunction setValueV4f(gl, v) {\n\t\tconst cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\n\t\t\t\tgl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t\tcache[2] = v.z;\n\t\t\t\tcache[3] = v.w;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform4fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t} // Single matrix (from flat array or THREE.MatrixN)\n\n\n\tfunction setValueM2(gl, v) {\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix2fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat2array.set(elements);\n\t\t\tgl.uniformMatrix2fv(this.addr, false, mat2array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t}\n\n\tfunction setValueM3(gl, v) {\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix3fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat3array.set(elements);\n\t\t\tgl.uniformMatrix3fv(this.addr, false, mat3array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t}\n\n\tfunction setValueM4(gl, v) {\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix4fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat4array.set(elements);\n\t\t\tgl.uniformMatrix4fv(this.addr, false, mat4array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t} // Single integer / boolean\n\n\n\tfunction setValueV1i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1i(this.addr, v);\n\t\tcache[0] = v;\n\t} // Single integer / boolean vector (from flat array)\n\n\n\tfunction setValueV2i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform2iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV3i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform3iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV4i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform4iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t} // Single unsigned integer\n\n\n\tfunction setValueV1ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1ui(this.addr, v);\n\t\tcache[0] = v;\n\t} // Single unsigned integer vector (from flat array)\n\n\n\tfunction setValueV2ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform2uiv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV3ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform3uiv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV4ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform4uiv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t} // Single texture (2D / Cube)\n\n\n\tfunction setValueT1(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.safeSetTexture2D(v || emptyTexture, unit);\n\t}\n\n\tfunction setValueT3D1(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.setTexture3D(v || emptyTexture3d, unit);\n\t}\n\n\tfunction setValueT6(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.safeSetTextureCube(v || emptyCubeTexture, unit);\n\t}\n\n\tfunction setValueT2DArray1(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.setTexture2DArray(v || emptyTexture2dArray, unit);\n\t} // Helper to pick the right setter for the singular case\n\n\n\tfunction getSingularSetter(type) {\n\t\tswitch (type) {\n\t\t\tcase 0x1406:\n\t\t\t\treturn setValueV1f;\n\t\t\t// FLOAT\n\n\t\t\tcase 0x8b50:\n\t\t\t\treturn setValueV2f;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b51:\n\t\t\t\treturn setValueV3f;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b52:\n\t\t\t\treturn setValueV4f;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5a:\n\t\t\t\treturn setValueM2;\n\t\t\t// _MAT2\n\n\t\t\tcase 0x8b5b:\n\t\t\t\treturn setValueM3;\n\t\t\t// _MAT3\n\n\t\t\tcase 0x8b5c:\n\t\t\t\treturn setValueM4;\n\t\t\t// _MAT4\n\n\t\t\tcase 0x1404:\n\t\t\tcase 0x8b56:\n\t\t\t\treturn setValueV1i;\n\t\t\t// INT, BOOL\n\n\t\t\tcase 0x8b53:\n\t\t\tcase 0x8b57:\n\t\t\t\treturn setValueV2i;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b54:\n\t\t\tcase 0x8b58:\n\t\t\t\treturn setValueV3i;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b55:\n\t\t\tcase 0x8b59:\n\t\t\t\treturn setValueV4i;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x1405:\n\t\t\t\treturn setValueV1ui;\n\t\t\t// UINT\n\n\t\t\tcase 0x8dc6:\n\t\t\t\treturn setValueV2ui;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8dc7:\n\t\t\t\treturn setValueV3ui;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8dc8:\n\t\t\t\treturn setValueV4ui;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n\t\t\tcase 0x8b62:\n\t\t\t\t// SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1;\n\n\t\t\tcase 0x8b5f: // SAMPLER_3D\n\n\t\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\n\t\t\tcase 0x8dd3:\n\t\t\t\t// UNSIGNED_INT_SAMPLER_3D\n\t\t\t\treturn setValueT3D1;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dc5:\n\t\t\t\t// SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6;\n\n\t\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dc4:\n\t\t\t\t// SAMPLER_2D_ARRAY_SHADOW\n\t\t\t\treturn setValueT2DArray1;\n\t\t}\n\t} // Array of scalars\n\n\n\tfunction setValueV1fArray(gl, v) {\n\t\tgl.uniform1fv(this.addr, v);\n\t} // Array of vectors (from flat array or array of THREE.VectorN)\n\n\n\tfunction setValueV2fArray(gl, v) {\n\t\tconst data = flatten(v, this.size, 2);\n\t\tgl.uniform2fv(this.addr, data);\n\t}\n\n\tfunction setValueV3fArray(gl, v) {\n\t\tconst data = flatten(v, this.size, 3);\n\t\tgl.uniform3fv(this.addr, data);\n\t}\n\n\tfunction setValueV4fArray(gl, v) {\n\t\tconst data = flatten(v, this.size, 4);\n\t\tgl.uniform4fv(this.addr, data);\n\t} // Array of matrices (from flat array or array of THREE.MatrixN)\n\n\n\tfunction setValueM2Array(gl, v) {\n\t\tconst data = flatten(v, this.size, 4);\n\t\tgl.uniformMatrix2fv(this.addr, false, data);\n\t}\n\n\tfunction setValueM3Array(gl, v) {\n\t\tconst data = flatten(v, this.size, 9);\n\t\tgl.uniformMatrix3fv(this.addr, false, data);\n\t}\n\n\tfunction setValueM4Array(gl, v) {\n\t\tconst data = flatten(v, this.size, 16);\n\t\tgl.uniformMatrix4fv(this.addr, false, data);\n\t} // Array of integer / boolean\n\n\n\tfunction setValueV1iArray(gl, v) {\n\t\tgl.uniform1iv(this.addr, v);\n\t} // Array of integer / boolean vectors (from flat array)\n\n\n\tfunction setValueV2iArray(gl, v) {\n\t\tgl.uniform2iv(this.addr, v);\n\t}\n\n\tfunction setValueV3iArray(gl, v) {\n\t\tgl.uniform3iv(this.addr, v);\n\t}\n\n\tfunction setValueV4iArray(gl, v) {\n\t\tgl.uniform4iv(this.addr, v);\n\t} // Array of unsigned integer\n\n\n\tfunction setValueV1uiArray(gl, v) {\n\t\tgl.uniform1uiv(this.addr, v);\n\t} // Array of unsigned integer vectors (from flat array)\n\n\n\tfunction setValueV2uiArray(gl, v) {\n\t\tgl.uniform2uiv(this.addr, v);\n\t}\n\n\tfunction setValueV3uiArray(gl, v) {\n\t\tgl.uniform3uiv(this.addr, v);\n\t}\n\n\tfunction setValueV4uiArray(gl, v) {\n\t\tgl.uniform4uiv(this.addr, v);\n\t} // Array of textures (2D / Cube)\n\n\n\tfunction setValueT1Array(gl, v, textures) {\n\t\tconst n = v.length;\n\t\tconst units = allocTexUnits(textures, n);\n\t\tgl.uniform1iv(this.addr, units);\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\ttextures.safeSetTexture2D(v[i] || emptyTexture, units[i]);\n\t\t}\n\t}\n\n\tfunction setValueT6Array(gl, v, textures) {\n\t\tconst n = v.length;\n\t\tconst units = allocTexUnits(textures, n);\n\t\tgl.uniform1iv(this.addr, units);\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\ttextures.safeSetTextureCube(v[i] || emptyCubeTexture, units[i]);\n\t\t}\n\t} // Helper to pick the right setter for a pure (bottom-level) array\n\n\n\tfunction getPureArraySetter(type) {\n\t\tswitch (type) {\n\t\t\tcase 0x1406:\n\t\t\t\treturn setValueV1fArray;\n\t\t\t// FLOAT\n\n\t\t\tcase 0x8b50:\n\t\t\t\treturn setValueV2fArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b51:\n\t\t\t\treturn setValueV3fArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b52:\n\t\t\t\treturn setValueV4fArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5a:\n\t\t\t\treturn setValueM2Array;\n\t\t\t// _MAT2\n\n\t\t\tcase 0x8b5b:\n\t\t\t\treturn setValueM3Array;\n\t\t\t// _MAT3\n\n\t\t\tcase 0x8b5c:\n\t\t\t\treturn setValueM4Array;\n\t\t\t// _MAT4\n\n\t\t\tcase 0x1404:\n\t\t\tcase 0x8b56:\n\t\t\t\treturn setValueV1iArray;\n\t\t\t// INT, BOOL\n\n\t\t\tcase 0x8b53:\n\t\t\tcase 0x8b57:\n\t\t\t\treturn setValueV2iArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b54:\n\t\t\tcase 0x8b58:\n\t\t\t\treturn setValueV3iArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b55:\n\t\t\tcase 0x8b59:\n\t\t\t\treturn setValueV4iArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x1405:\n\t\t\t\treturn setValueV1uiArray;\n\t\t\t// UINT\n\n\t\t\tcase 0x8dc6:\n\t\t\t\treturn setValueV2uiArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8dc7:\n\t\t\t\treturn setValueV3uiArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8dc8:\n\t\t\t\treturn setValueV4uiArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n\t\t\tcase 0x8b62:\n\t\t\t\t// SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1Array;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dc5:\n\t\t\t\t// SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6Array;\n\t\t}\n\t} // --- Uniform Classes ---\n\n\n\tfunction SingleUniform(id, activeInfo, addr) {\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n\t}\n\n\tfunction PureArrayUniform(id, activeInfo, addr) {\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n\t}\n\n\tPureArrayUniform.prototype.updateCache = function (data) {\n\t\tconst cache = this.cache;\n\n\t\tif (data instanceof Float32Array && cache.length !== data.length) {\n\t\t\tthis.cache = new Float32Array(data.length);\n\t\t}\n\n\t\tcopyArray(cache, data);\n\t};\n\n\tfunction StructuredUniform(id) {\n\t\tthis.id = id;\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\t}\n\n\tStructuredUniform.prototype.setValue = function (gl, value, textures) {\n\t\tconst seq = this.seq;\n\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tconst u = seq[i];\n\t\t\tu.setValue(gl, value[u.id], textures);\n\t\t}\n\t}; // --- Top-level ---\n\t// Parser - builds up the property tree from the path strings\n\n\n\tconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g; // extracts\n\t// \t- the identifier (member name or array index)\n\t//\t- followed by an optional right bracket (found when array index)\n\t//\t- followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform(container, uniformObject) {\n\t\tcontainer.seq.push(uniformObject);\n\t\tcontainer.map[uniformObject.id] = uniformObject;\n\t}\n\n\tfunction parseUniform(activeInfo, addr, container) {\n\t\tconst path = activeInfo.name,\n\t\t\t\t\tpathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n\t\tRePathPart.lastIndex = 0;\n\n\t\twhile (true) {\n\t\t\tconst match = RePathPart.exec(path),\n\t\t\t\t\t\tmatchEnd = RePathPart.lastIndex;\n\t\t\tlet id = match[1];\n\t\t\tconst idIsIndex = match[2] === ']',\n\t\t\t\t\t\tsubscript = match[3];\n\t\t\tif (idIsIndex) id = id | 0; // convert to integer\n\n\t\t\tif (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\t\t\t\taddUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\t\t\t\tconst map = container.map;\n\t\t\t\tlet next = map[id];\n\n\t\t\t\tif (next === undefined) {\n\t\t\t\t\tnext = new StructuredUniform(id);\n\t\t\t\t\taddUniform(container, next);\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\t\t\t}\n\t\t}\n\t} // Root Container\n\n\n\tfunction WebGLUniforms(gl, program) {\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\t\tconst n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n\t\tfor (let i = 0; i < n; ++i) {\n\t\t\tconst info = gl.getActiveUniform(program, i),\n\t\t\t\t\t\taddr = gl.getUniformLocation(program, info.name);\n\t\t\tparseUniform(info, addr, this);\n\t\t}\n\t}\n\n\tWebGLUniforms.prototype.setValue = function (gl, name, value, textures) {\n\t\tconst u = this.map[name];\n\t\tif (u !== undefined) u.setValue(gl, value, textures);\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function (gl, object, name) {\n\t\tconst v = object[name];\n\t\tif (v !== undefined) this.setValue(gl, name, v);\n\t}; // Static interface\n\n\n\tWebGLUniforms.upload = function (gl, seq, values, textures) {\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tconst u = seq[i],\n\t\t\t\t\t\tv = values[u.id];\n\n\t\t\tif (v.needsUpdate !== false) {\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue(gl, v.value, textures);\n\t\t\t}\n\t\t}\n\t};\n\n\tWebGLUniforms.seqWithValue = function (seq, values) {\n\t\tconst r = [];\n\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tconst u = seq[i];\n\t\t\tif (u.id in values) r.push(u);\n\t\t}\n\n\t\treturn r;\n\t};\n\n\tfunction WebGLShader(gl, type, string) {\n\t\tconst shader = gl.createShader(type);\n\t\tgl.shaderSource(shader, string);\n\t\tgl.compileShader(shader);\n\t\treturn shader;\n\t}\n\n\tlet programIdCount = 0;\n\n\tfunction addLineNumbers(string) {\n\t\tconst lines = string.split('\\n');\n\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tlines[i] = i + 1 + ': ' + lines[i];\n\t\t}\n\n\t\treturn lines.join('\\n');\n\t}\n\n\tfunction getEncodingComponents(encoding) {\n\t\tswitch (encoding) {\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn ['Linear', '( value )'];\n\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn ['sRGB', '( value )'];\n\n\t\t\tcase RGBEEncoding:\n\t\t\t\treturn ['RGBE', '( value )'];\n\n\t\t\tcase RGBM7Encoding:\n\t\t\t\treturn ['RGBM', '( value, 7.0 )'];\n\n\t\t\tcase RGBM16Encoding:\n\t\t\t\treturn ['RGBM', '( value, 16.0 )'];\n\n\t\t\tcase RGBDEncoding:\n\t\t\t\treturn ['RGBD', '( value, 256.0 )'];\n\n\t\t\tcase GammaEncoding:\n\t\t\t\treturn ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n\t\t\tcase LogLuvEncoding:\n\t\t\t\treturn ['LogLuv', '( value )'];\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Unsupported encoding:', encoding);\n\t\t\t\treturn ['Linear', '( value )'];\n\t\t}\n\t}\n\n\tfunction getShaderErrors(gl, shader, type) {\n\t\tconst status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\t\tconst log = gl.getShaderInfoLog(shader).trim();\n\t\tif (status && log === '') return ''; // --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst source = gl.getShaderSource(shader);\n\t\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers(source);\n\t}\n\n\tfunction getTexelDecodingFunction(functionName, encoding) {\n\t\tconst components = getEncodingComponents(encoding);\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[0] + 'ToLinear' + components[1] + '; }';\n\t}\n\n\tfunction getTexelEncodingFunction(functionName, encoding) {\n\t\tconst components = getEncodingComponents(encoding);\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[0] + components[1] + '; }';\n\t}\n\n\tfunction getToneMappingFunction(functionName, toneMapping) {\n\t\tlet toneMappingName;\n\n\t\tswitch (toneMapping) {\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = 'Reinhard';\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\t\tbreak;\n\n\t\t\tcase ACESFilmicToneMapping:\n\t\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\t\tbreak;\n\n\t\t\tcase CustomToneMapping:\n\t\t\t\ttoneMappingName = 'Custom';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Unsupported toneMapping:', toneMapping);\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t}\n\n\t\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\t}\n\n\tfunction generateExtensions(parameters) {\n\t\tconst chunks = [parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ? '#extension GL_OES_standard_derivatives : enable' : '', (parameters.extensionFragDepth || parameters.logarithmicDepthBuffer) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '', parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ? '#extension GL_EXT_draw_buffers : require' : '', (parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission > 0.0) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n\t\treturn chunks.filter(filterEmptyLine).join('\\n');\n\t}\n\n\tfunction generateDefines(defines) {\n\t\tconst chunks = [];\n\n\t\tfor (const name in defines) {\n\t\t\tconst value = defines[name];\n\t\t\tif (value === false) continue;\n\t\t\tchunks.push('#define ' + name + ' ' + value);\n\t\t}\n\n\t\treturn chunks.join('\\n');\n\t}\n\n\tfunction fetchAttributeLocations(gl, program) {\n\t\tconst attributes = {};\n\t\tconst n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n\t\tfor (let i = 0; i < n; i++) {\n\t\t\tconst info = gl.getActiveAttrib(program, i);\n\t\t\tconst name = info.name; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\t\tattributes[name] = gl.getAttribLocation(program, name);\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\tfunction filterEmptyLine(string) {\n\t\treturn string !== '';\n\t}\n\n\tfunction replaceLightNums(string, parameters) {\n\t\treturn string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows);\n\t}\n\n\tfunction replaceClippingPlaneNums(string, parameters) {\n\t\treturn string.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);\n\t} // Resolve Includes\n\n\n\tconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction resolveIncludes(string) {\n\t\treturn string.replace(includePattern, includeReplacer);\n\t}\n\n\tfunction includeReplacer(match, include) {\n\t\tconst string = ShaderChunk[include];\n\n\t\tif (string === undefined) {\n\t\t\tthrow new Error('Can not resolve #include <' + include + '>');\n\t\t}\n\n\t\treturn resolveIncludes(string);\n\t} // Unroll Loops\n\n\n\tconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\tconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\n\tfunction unrollLoops(string) {\n\t\treturn string.replace(unrollLoopPattern, loopReplacer).replace(deprecatedUnrollLoopPattern, deprecatedLoopReplacer);\n\t}\n\n\tfunction deprecatedLoopReplacer(match, start, end, snippet) {\n\t\tconsole.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');\n\t\treturn loopReplacer(match, start, end, snippet);\n\t}\n\n\tfunction loopReplacer(match, start, end, snippet) {\n\t\tlet string = '';\n\n\t\tfor (let i = parseInt(start); i < parseInt(end); i++) {\n\t\t\tstring += snippet.replace(/\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]').replace(/UNROLLED_LOOP_INDEX/g, i);\n\t\t}\n\n\t\treturn string;\n\t} //\n\n\n\tfunction generatePrecision(parameters) {\n\t\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\t\tif (parameters.precision === 'highp') {\n\t\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\t\t} else if (parameters.precision === 'mediump') {\n\t\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\t\t} else if (parameters.precision === 'lowp') {\n\t\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\t\t}\n\n\t\treturn precisionstring;\n\t}\n\n\tfunction generateShadowMapTypeDefine(parameters) {\n\t\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif (parameters.shadowMapType === PCFShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\t\t} else if (parameters.shadowMapType === PCFSoftShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\t\t} else if (parameters.shadowMapType === VSMShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\t\t}\n\n\t\treturn shadowMapTypeDefine;\n\t}\n\n\tfunction generateEnvMapTypeDefine(parameters) {\n\t\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.envMapMode) {\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapTypeDefine;\n\t}\n\n\tfunction generateEnvMapModeDefine(parameters) {\n\t\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.envMapMode) {\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapModeDefine;\n\t}\n\n\tfunction generateEnvMapBlendingDefine(parameters) {\n\t\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.combine) {\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapBlendingDefine;\n\t}\n\n\tfunction WebGLProgram(renderer, cacheKey, parameters, bindingStates) {\n\t\tconst gl = renderer.getContext();\n\t\tconst defines = parameters.defines;\n\t\tlet vertexShader = parameters.vertexShader;\n\t\tlet fragmentShader = parameters.fragmentShader;\n\t\tconst shadowMapTypeDefine = generateShadowMapTypeDefine(parameters);\n\t\tconst envMapTypeDefine = generateEnvMapTypeDefine(parameters);\n\t\tconst envMapModeDefine = generateEnvMapModeDefine(parameters);\n\t\tconst envMapBlendingDefine = generateEnvMapBlendingDefine(parameters);\n\t\tconst gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0;\n\t\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions(parameters);\n\t\tconst customDefines = generateDefines(defines);\n\t\tconst program = gl.createProgram();\n\t\tlet prefixVertex, prefixFragment;\n\t\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\t\tif (parameters.isRawShaderMaterial) {\n\t\t\tprefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\n\n\t\t\tif (prefixVertex.length > 0) {\n\t\t\t\tprefixVertex += '\\n';\n\t\t\t}\n\n\t\t\tprefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\n\n\t\t\tif (prefixFragment.length > 0) {\n\t\t\t\tprefixFragment += '\\n';\n\t\t\t}\n\t\t} else {\n\t\t\tprefixVertex = [generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.instancing ? '#define USE_INSTANCING' : '', parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '', parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', '#ifdef USE_INSTANCING', '\tattribute mat4 instanceMatrix;', '#endif', '#ifdef USE_INSTANCING_COLOR', '\tattribute vec3 instanceColor;', '#endif', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_TANGENT', '\tattribute vec4 tangent;', '#endif', '#if defined( USE_COLOR_ALPHA )', '\tattribute vec4 color;', '#elif defined( USE_COLOR )', '\tattribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n\t\t\tprefixFragment = [customExtensions, generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + (parameters.alphaTest % 1 ? '' : '.0') : '', // add '.0' if integer\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.matcap ? '#define USE_MATCAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.sheen ? '#define USE_SHEEN' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', (parameters.extensionShaderTextureLOD || parameters.envMap) && parameters.rendererExtensionShaderTextureLod ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\tparameters.toneMapping !== NoToneMapping ? getToneMappingFunction('toneMapping', parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', ShaderChunk['encodings_pars_fragment'], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.map ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.matcap ? getTexelDecodingFunction('matcapTexelToLinear', parameters.matcapEncoding) : '', parameters.envMap ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMap ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.lightMap ? getTexelDecodingFunction('lightMapTexelToLinear', parameters.lightMapEncoding) : '', getTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding), parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n\t\t}\n\n\t\tvertexShader = resolveIncludes(vertexShader);\n\t\tvertexShader = replaceLightNums(vertexShader, parameters);\n\t\tvertexShader = replaceClippingPlaneNums(vertexShader, parameters);\n\t\tfragmentShader = resolveIncludes(fragmentShader);\n\t\tfragmentShader = replaceLightNums(fragmentShader, parameters);\n\t\tfragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\n\t\tvertexShader = unrollLoops(vertexShader);\n\t\tfragmentShader = unrollLoops(fragmentShader);\n\n\t\tif (parameters.isWebGL2 && parameters.isRawShaderMaterial !== true) {\n\t\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\t\t\tversionString = '#version 300 es\\n';\n\t\t\tprefixVertex = ['#define attribute in', '#define varying out', '#define texture2D texture'].join('\\n') + '\\n' + prefixVertex;\n\t\t\tprefixFragment = ['#define varying in', parameters.glslVersion === GLSL3 ? '' : 'out highp vec4 pc_fragColor;', parameters.glslVersion === GLSL3 ? '' : '#define gl_FragColor pc_fragColor', '#define gl_FragDepthEXT gl_FragDepth', '#define texture2D texture', '#define textureCube texture', '#define texture2DProj textureProj', '#define texture2DLodEXT textureLod', '#define texture2DProjLodEXT textureProjLod', '#define textureCubeLodEXT textureLod', '#define texture2DGradEXT textureGrad', '#define texture2DProjGradEXT textureProjGrad', '#define textureCubeGradEXT textureGrad'].join('\\n') + '\\n' + prefixFragment;\n\t\t}\n\n\t\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\t\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tconst glVertexShader = WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n\t\tconst glFragmentShader = WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n\t\tgl.attachShader(program, glVertexShader);\n\t\tgl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n\t\tif (parameters.index0AttributeName !== undefined) {\n\t\t\tgl.bindAttribLocation(program, 0, parameters.index0AttributeName);\n\t\t} else if (parameters.morphTargets === true) {\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation(program, 0, 'position');\n\t\t}\n\n\t\tgl.linkProgram(program); // check for link errors\n\n\t\tif (renderer.debug.checkShaderErrors) {\n\t\t\tconst programLog = gl.getProgramInfoLog(program).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n\t\t\t\trunnable = false;\n\t\t\t\tconst vertexErrors = getShaderErrors(gl, glVertexShader, 'vertex');\n\t\t\t\tconst fragmentErrors = getShaderErrors(gl, glFragmentShader, 'fragment');\n\t\t\t\tconsole.error('THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors);\n\t\t\t} else if (programLog !== '') {\n\t\t\t\tconsole.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', programLog);\n\t\t\t} else if (vertexLog === '' || fragmentLog === '') {\n\t\t\t\thaveDiagnostics = false;\n\t\t\t}\n\n\t\t\tif (haveDiagnostics) {\n\t\t\t\tthis.diagnostics = {\n\t\t\t\t\trunnable: runnable,\n\t\t\t\t\tprogramLog: programLog,\n\t\t\t\t\tvertexShader: {\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\t\t\t\t\t},\n\t\t\t\t\tfragmentShader: {\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t} // Clean up\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\n\t\tgl.deleteShader(glVertexShader);\n\t\tgl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n\t\tlet cachedUniforms;\n\n\t\tthis.getUniforms = function () {\n\t\t\tif (cachedUniforms === undefined) {\n\t\t\t\tcachedUniforms = new WebGLUniforms(gl, program);\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\t\t}; // set up caching for attribute locations\n\n\n\t\tlet cachedAttributes;\n\n\t\tthis.getAttributes = function () {\n\t\t\tif (cachedAttributes === undefined) {\n\t\t\t\tcachedAttributes = fetchAttributeLocations(gl, program);\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\t\t}; // free resource\n\n\n\t\tthis.destroy = function () {\n\t\t\tbindingStates.releaseStatesOfProgram(this);\n\t\t\tgl.deleteProgram(program);\n\t\t\tthis.program = undefined;\n\t\t}; //\n\n\n\t\tthis.name = parameters.shaderName;\n\t\tthis.id = programIdCount++;\n\t\tthis.cacheKey = cacheKey;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\t\treturn this;\n\t}\n\n\tfunction WebGLPrograms(renderer, cubemaps, extensions, capabilities, bindingStates, clipping) {\n\t\tconst programs = [];\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\t\tconst floatVertexTextures = capabilities.floatVertexTextures;\n\t\tconst maxVertexUniforms = capabilities.maxVertexUniforms;\n\t\tconst vertexTextures = capabilities.vertexTextures;\n\t\tlet precision = capabilities.precision;\n\t\tconst shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshToonMaterial: 'toon',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tMeshMatcapMaterial: 'matcap',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points',\n\t\t\tShadowMaterial: 'shadow',\n\t\t\tSpriteMaterial: 'sprite'\n\t\t};\n\t\tconst parameterNames = ['precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor', 'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV', 'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'tangentSpaceNormalMap', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap', 'displacementMap', 'specularMap', 'roughnessMap', 'metalnessMap', 'gradientMap', 'alphaMap', 'combine', 'vertexColors', 'vertexAlphas', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2', 'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning', 'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'premultipliedAlpha', 'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights', 'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows', 'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights', 'alphaTest', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering', 'sheen', 'transmission', 'transmissionMap', 'thicknessMap'];\n\n\t\tfunction getMaxBones(object) {\n\t\t\tconst skeleton = object.skeleton;\n\t\t\tconst bones = skeleton.bones;\n\n\t\t\tif (floatVertexTextures) {\n\t\t\t\treturn 1024;\n\t\t\t} else {\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//\t- leave some extra space for other uniforms\n\t\t\t\t//\t- limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//\t\t(up to 54 should be safe)\n\t\t\t\tconst nVertexUniforms = maxVertexUniforms;\n\t\t\t\tconst nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n\t\t\t\tconst maxBones = Math.min(nVertexMatrices, bones.length);\n\n\t\t\t\tif (maxBones < bones.length) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.');\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\t\t\t}\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap(map) {\n\t\t\tlet encoding;\n\n\t\t\tif (map && map.isTexture) {\n\t\t\t\tencoding = map.encoding;\n\t\t\t} else if (map && map.isWebGLRenderTarget) {\n\t\t\t\tconsole.warn('THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.');\n\t\t\t\tencoding = map.texture.encoding;\n\t\t\t} else {\n\t\t\t\tencoding = LinearEncoding;\n\t\t\t}\n\n\t\t\treturn encoding;\n\t\t}\n\n\t\tfunction getParameters(material, lights, shadows, scene, object) {\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst envMap = cubemaps.get(material.envMap || environment);\n\t\t\tconst shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tconst maxBones = object.isSkinnedMesh ? getMaxBones(object) : 0;\n\n\t\t\tif (material.precision !== null) {\n\t\t\t\tprecision = capabilities.getMaxPrecision(material.precision);\n\n\t\t\t\tif (precision !== material.precision) {\n\t\t\t\t\tconsole.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet vertexShader, fragmentShader;\n\n\t\t\tif (shaderID) {\n\t\t\t\tconst shader = ShaderLib[shaderID];\n\t\t\t\tvertexShader = shader.vertexShader;\n\t\t\t\tfragmentShader = shader.fragmentShader;\n\t\t\t} else {\n\t\t\t\tvertexShader = material.vertexShader;\n\t\t\t\tfragmentShader = material.fragmentShader;\n\t\t\t}\n\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\tconst parameters = {\n\t\t\t\tisWebGL2: isWebGL2,\n\t\t\t\tshaderID: shaderID,\n\t\t\t\tshaderName: material.type,\n\t\t\t\tvertexShader: vertexShader,\n\t\t\t\tfragmentShader: fragmentShader,\n\t\t\t\tdefines: material.defines,\n\t\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\t\tglslVersion: material.glslVersion,\n\t\t\t\tprecision: precision,\n\t\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\t\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\t\toutputEncoding: currentRenderTarget !== null ? getTextureEncodingFromMap(currentRenderTarget.texture) : renderer.outputEncoding,\n\t\t\t\tmap: !!material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap(material.map),\n\t\t\t\tmatcap: !!material.matcap,\n\t\t\t\tmatcapEncoding: getTextureEncodingFromMap(material.matcap),\n\t\t\t\tenvMap: !!envMap,\n\t\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap(envMap),\n\t\t\t\tenvMapCubeUV: !!envMap && (envMap.mapping === CubeUVReflectionMapping || envMap.mapping === CubeUVRefractionMapping),\n\t\t\t\tlightMap: !!material.lightMap,\n\t\t\t\tlightMapEncoding: getTextureEncodingFromMap(material.lightMap),\n\t\t\t\taoMap: !!material.aoMap,\n\t\t\t\temissiveMap: !!material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap),\n\t\t\t\tbumpMap: !!material.bumpMap,\n\t\t\t\tnormalMap: !!material.normalMap,\n\t\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\t\tclearcoatMap: !!material.clearcoatMap,\n\t\t\t\tclearcoatRoughnessMap: !!material.clearcoatRoughnessMap,\n\t\t\t\tclearcoatNormalMap: !!material.clearcoatNormalMap,\n\t\t\t\tdisplacementMap: !!material.displacementMap,\n\t\t\t\troughnessMap: !!material.roughnessMap,\n\t\t\t\tmetalnessMap: !!material.metalnessMap,\n\t\t\t\tspecularMap: !!material.specularMap,\n\t\t\t\talphaMap: !!material.alphaMap,\n\t\t\t\tgradientMap: !!material.gradientMap,\n\t\t\t\tsheen: !!material.sheen,\n\t\t\t\ttransmission: !!material.transmission,\n\t\t\t\ttransmissionMap: !!material.transmissionMap,\n\t\t\t\tthicknessMap: !!material.thicknessMap,\n\t\t\t\tcombine: material.combine,\n\t\t\t\tvertexTangents: material.normalMap && material.vertexTangents,\n\t\t\t\tvertexColors: material.vertexColors,\n\t\t\t\tvertexAlphas: material.vertexColors === true && object.geometry && object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4,\n\t\t\t\tvertexUvs: !!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatMap || !!material.clearcoatRoughnessMap || !!material.clearcoatNormalMap || !!material.displacementMap || !!material.transmissionMap || !!material.thicknessMap,\n\t\t\t\tuvsVertexOnly: !(!!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatNormalMap || !!material.transmission || !!material.transmissionMap || !!material.thicknessMap) && !!material.displacementMap,\n\t\t\t\tfog: !!fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp2: fog && fog.isFogExp2,\n\t\t\t\tflatShading: !!material.flatShading,\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\t\tskinning: object.isSkinnedMesh === true && maxBones > 0,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: floatVertexTextures,\n\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\t\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\t\tnumClipIntersection: clipping.numIntersection,\n\t\t\t\tdithering: material.dithering,\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\t\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\t\t\t\tdepthPacking: material.depthPacking !== undefined ? material.depthPacking : false,\n\t\t\t\tindex0AttributeName: material.index0AttributeName,\n\t\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\t\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has('EXT_frag_depth'),\n\t\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has('WEBGL_draw_buffers'),\n\t\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has('EXT_shader_texture_lod'),\n\t\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\t\t\t};\n\t\t\treturn parameters;\n\t\t}\n\n\t\tfunction getProgramCacheKey(parameters) {\n\t\t\tconst array = [];\n\n\t\t\tif (parameters.shaderID) {\n\t\t\t\tarray.push(parameters.shaderID);\n\t\t\t} else {\n\t\t\t\tarray.push(parameters.fragmentShader);\n\t\t\t\tarray.push(parameters.vertexShader);\n\t\t\t}\n\n\t\t\tif (parameters.defines !== undefined) {\n\t\t\t\tfor (const name in parameters.defines) {\n\t\t\t\t\tarray.push(name);\n\t\t\t\t\tarray.push(parameters.defines[name]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (parameters.isRawShaderMaterial === false) {\n\t\t\t\tfor (let i = 0; i < parameterNames.length; i++) {\n\t\t\t\t\tarray.push(parameters[parameterNames[i]]);\n\t\t\t\t}\n\n\t\t\t\tarray.push(renderer.outputEncoding);\n\t\t\t\tarray.push(renderer.gammaFactor);\n\t\t\t}\n\n\t\t\tarray.push(parameters.customProgramCacheKey);\n\t\t\treturn array.join();\n\t\t}\n\n\t\tfunction getUniforms(material) {\n\t\t\tconst shaderID = shaderIDs[material.type];\n\t\t\tlet uniforms;\n\n\t\t\tif (shaderID) {\n\t\t\t\tconst shader = ShaderLib[shaderID];\n\t\t\t\tuniforms = UniformsUtils.clone(shader.uniforms);\n\t\t\t} else {\n\t\t\t\tuniforms = material.uniforms;\n\t\t\t}\n\n\t\t\treturn uniforms;\n\t\t}\n\n\t\tfunction acquireProgram(parameters, cacheKey) {\n\t\t\tlet program; // Check if code has been already compiled\n\n\t\t\tfor (let p = 0, pl = programs.length; p < pl; p++) {\n\t\t\t\tconst preexistingProgram = programs[p];\n\n\t\t\t\tif (preexistingProgram.cacheKey === cacheKey) {\n\t\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t\t++program.usedTimes;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (program === undefined) {\n\t\t\t\tprogram = new WebGLProgram(renderer, cacheKey, parameters, bindingStates);\n\t\t\t\tprograms.push(program);\n\t\t\t}\n\n\t\t\treturn program;\n\t\t}\n\n\t\tfunction releaseProgram(program) {\n\t\t\tif (--program.usedTimes === 0) {\n\t\t\t\t// Remove from unordered set\n\t\t\t\tconst i = programs.indexOf(program);\n\t\t\t\tprograms[i] = programs[programs.length - 1];\n\t\t\t\tprograms.pop(); // Free WebGL resources\n\n\t\t\t\tprogram.destroy();\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tgetParameters: getParameters,\n\t\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\t\tgetUniforms: getUniforms,\n\t\t\tacquireProgram: acquireProgram,\n\t\t\treleaseProgram: releaseProgram,\n\t\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\t\tprograms: programs\n\t\t};\n\t}\n\n\tfunction WebGLProperties() {\n\t\tlet properties = new WeakMap();\n\n\t\tfunction get(object) {\n\t\t\tlet map = properties.get(object);\n\n\t\t\tif (map === undefined) {\n\t\t\t\tmap = {};\n\t\t\t\tproperties.set(object, map);\n\t\t\t}\n\n\t\t\treturn map;\n\t\t}\n\n\t\tfunction remove(object) {\n\t\t\tproperties.delete(object);\n\t\t}\n\n\t\tfunction update(object, key, value) {\n\t\t\tproperties.get(object)[key] = value;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tproperties = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction painterSortStable(a, b) {\n\t\tif (a.groupOrder !== b.groupOrder) {\n\t\t\treturn a.groupOrder - b.groupOrder;\n\t\t} else if (a.renderOrder !== b.renderOrder) {\n\t\t\treturn a.renderOrder - b.renderOrder;\n\t\t} else if (a.program !== b.program) {\n\t\t\treturn a.program.id - b.program.id;\n\t\t} else if (a.material.id !== b.material.id) {\n\t\t\treturn a.material.id - b.material.id;\n\t\t} else if (a.z !== b.z) {\n\t\t\treturn a.z - b.z;\n\t\t} else {\n\t\t\treturn a.id - b.id;\n\t\t}\n\t}\n\n\tfunction reversePainterSortStable(a, b) {\n\t\tif (a.groupOrder !== b.groupOrder) {\n\t\t\treturn a.groupOrder - b.groupOrder;\n\t\t} else if (a.renderOrder !== b.renderOrder) {\n\t\t\treturn a.renderOrder - b.renderOrder;\n\t\t} else if (a.z !== b.z) {\n\t\t\treturn b.z - a.z;\n\t\t} else {\n\t\t\treturn a.id - b.id;\n\t\t}\n\t}\n\n\tfunction WebGLRenderList(properties) {\n\t\tconst renderItems = [];\n\t\tlet renderItemsIndex = 0;\n\t\tconst opaque = [];\n\t\tconst transmissive = [];\n\t\tconst transparent = [];\n\t\tconst defaultProgram = {\n\t\t\tid: -1\n\t\t};\n\n\t\tfunction init() {\n\t\t\trenderItemsIndex = 0;\n\t\t\topaque.length = 0;\n\t\t\ttransmissive.length = 0;\n\t\t\ttransparent.length = 0;\n\t\t}\n\n\t\tfunction getNextRenderItem(object, geometry, material, groupOrder, z, group) {\n\t\t\tlet renderItem = renderItems[renderItemsIndex];\n\t\t\tconst materialProperties = properties.get(material);\n\n\t\t\tif (renderItem === undefined) {\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tprogram: materialProperties.program || defaultProgram,\n\t\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\t\tz: z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\t\t\t\trenderItems[renderItemsIndex] = renderItem;\n\t\t\t} else {\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.program = materialProperties.program || defaultProgram;\n\t\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\t\trenderItem.z = z;\n\t\t\t\trenderItem.group = group;\n\t\t\t}\n\n\t\t\trenderItemsIndex++;\n\t\t\treturn renderItem;\n\t\t}\n\n\t\tfunction push(object, geometry, material, groupOrder, z, group) {\n\t\t\tconst renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n\n\t\t\tif (material.transmission > 0.0) {\n\t\t\t\ttransmissive.push(renderItem);\n\t\t\t} else if (material.transparent === true) {\n\t\t\t\ttransparent.push(renderItem);\n\t\t\t} else {\n\t\t\t\topaque.push(renderItem);\n\t\t\t}\n\t\t}\n\n\t\tfunction unshift(object, geometry, material, groupOrder, z, group) {\n\t\t\tconst renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n\n\t\t\tif (material.transmission > 0.0) {\n\t\t\t\ttransmissive.unshift(renderItem);\n\t\t\t} else if (material.transparent === true) {\n\t\t\t\ttransparent.unshift(renderItem);\n\t\t\t} else {\n\t\t\t\topaque.unshift(renderItem);\n\t\t\t}\n\t\t}\n\n\t\tfunction sort(customOpaqueSort, customTransparentSort) {\n\t\t\tif (opaque.length > 1) opaque.sort(customOpaqueSort || painterSortStable);\n\t\t\tif (transmissive.length > 1) transmissive.sort(customTransparentSort || reversePainterSortStable);\n\t\t\tif (transparent.length > 1) transparent.sort(customTransparentSort || reversePainterSortStable);\n\t\t}\n\n\t\tfunction finish() {\n\t\t\t// Clear references from inactive renderItems in the list\n\t\t\tfor (let i = renderItemsIndex, il = renderItems.length; i < il; i++) {\n\t\t\t\tconst renderItem = renderItems[i];\n\t\t\t\tif (renderItem.id === null) break;\n\t\t\t\trenderItem.id = null;\n\t\t\t\trenderItem.object = null;\n\t\t\t\trenderItem.geometry = null;\n\t\t\t\trenderItem.material = null;\n\t\t\t\trenderItem.program = null;\n\t\t\t\trenderItem.group = null;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\topaque: opaque,\n\t\t\ttransmissive: transmissive,\n\t\t\ttransparent: transparent,\n\t\t\tinit: init,\n\t\t\tpush: push,\n\t\t\tunshift: unshift,\n\t\t\tfinish: finish,\n\t\t\tsort: sort\n\t\t};\n\t}\n\n\tfunction WebGLRenderLists(properties) {\n\t\tlet lists = new WeakMap();\n\n\t\tfunction get(scene, renderCallDepth) {\n\t\t\tlet list;\n\n\t\t\tif (lists.has(scene) === false) {\n\t\t\t\tlist = new WebGLRenderList(properties);\n\t\t\t\tlists.set(scene, [list]);\n\t\t\t} else {\n\t\t\t\tif (renderCallDepth >= lists.get(scene).length) {\n\t\t\t\t\tlist = new WebGLRenderList(properties);\n\t\t\t\t\tlists.get(scene).push(list);\n\t\t\t\t} else {\n\t\t\t\t\tlist = lists.get(scene)[renderCallDepth];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tlists = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction UniformsCache() {\n\t\tconst lights = {};\n\t\treturn {\n\t\t\tget: function (light) {\n\t\t\t\tif (lights[light.id] !== undefined) {\n\t\t\t\t\treturn lights[light.id];\n\t\t\t\t}\n\n\t\t\t\tlet uniforms;\n\n\t\t\t\tswitch (light.type) {\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlights[light.id] = uniforms;\n\t\t\t\treturn uniforms;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction ShadowUniformsCache() {\n\t\tconst lights = {};\n\t\treturn {\n\t\t\tget: function (light) {\n\t\t\t\tif (lights[light.id] !== undefined) {\n\t\t\t\t\treturn lights[light.id];\n\t\t\t\t}\n\n\t\t\t\tlet uniforms;\n\n\t\t\t\tswitch (light.type) {\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t}\n\n\t\t\t\tlights[light.id] = uniforms;\n\t\t\t\treturn uniforms;\n\t\t\t}\n\t\t};\n\t}\n\n\tlet nextVersion = 0;\n\n\tfunction shadowCastingLightsFirst(lightA, lightB) {\n\t\treturn (lightB.castShadow ? 1 : 0) - (lightA.castShadow ? 1 : 0);\n\t}\n\n\tfunction WebGLLights(extensions, capabilities) {\n\t\tconst cache = new UniformsCache();\n\t\tconst shadowCache = ShadowUniformsCache();\n\t\tconst state = {\n\t\t\tversion: 0,\n\t\t\thash: {\n\t\t\t\tdirectionalLength: -1,\n\t\t\t\tpointLength: -1,\n\t\t\t\tspotLength: -1,\n\t\t\t\trectAreaLength: -1,\n\t\t\t\themiLength: -1,\n\t\t\t\tnumDirectionalShadows: -1,\n\t\t\t\tnumPointShadows: -1,\n\t\t\t\tnumSpotShadows: -1\n\t\t\t},\n\t\t\tambient: [0, 0, 0],\n\t\t\tprobe: [],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadow: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadow: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\trectArea: [],\n\t\t\trectAreaLTC1: null,\n\t\t\trectAreaLTC2: null,\n\t\t\tpoint: [],\n\t\t\tpointShadow: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: []\n\t\t};\n\n\t\tfor (let i = 0; i < 9; i++) state.probe.push(new Vector3());\n\n\t\tconst vector3 = new Vector3();\n\t\tconst matrix4 = new Matrix4();\n\t\tconst matrix42 = new Matrix4();\n\n\t\tfunction setup(lights) {\n\t\t\tlet r = 0,\n\t\t\t\t\tg = 0,\n\t\t\t\t\tb = 0;\n\n\t\t\tfor (let i = 0; i < 9; i++) state.probe[i].set(0, 0, 0);\n\n\t\t\tlet directionalLength = 0;\n\t\t\tlet pointLength = 0;\n\t\t\tlet spotLength = 0;\n\t\t\tlet rectAreaLength = 0;\n\t\t\tlet hemiLength = 0;\n\t\t\tlet numDirectionalShadows = 0;\n\t\t\tlet numPointShadows = 0;\n\t\t\tlet numSpotShadows = 0;\n\t\t\tlights.sort(shadowCastingLightsFirst);\n\n\t\t\tfor (let i = 0, l = lights.length; i < l; i++) {\n\t\t\t\tconst light = lights[i];\n\t\t\t\tconst color = light.color;\n\t\t\t\tconst intensity = light.intensity;\n\t\t\t\tconst distance = light.distance;\n\t\t\t\tconst shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n\t\t\t\tif (light.isAmbientLight) {\n\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\tb += color.b * intensity;\n\t\t\t\t} else if (light.isLightProbe) {\n\t\t\t\t\tfor (let j = 0; j < 9; j++) {\n\t\t\t\t\t\tstate.probe[j].addScaledVector(light.sh.coefficients[j], intensity);\n\t\t\t\t\t}\n\t\t\t\t} else if (light.isDirectionalLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.color.copy(light.color).multiplyScalar(light.intensity);\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tconst shadow = light.shadow;\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tstate.directionalShadow[directionalLength] = shadowUniforms;\n\t\t\t\t\t\tstate.directionalShadowMap[directionalLength] = shadowMap;\n\t\t\t\t\t\tstate.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumDirectionalShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.directional[directionalLength] = uniforms;\n\t\t\t\t\tdirectionalLength++;\n\t\t\t\t} else if (light.isSpotLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.color.copy(color).multiplyScalar(intensity);\n\t\t\t\t\tuniforms.distance = distance;\n\t\t\t\t\tuniforms.coneCos = Math.cos(light.angle);\n\t\t\t\t\tuniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tconst shadow = light.shadow;\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tstate.spotShadow[spotLength] = shadowUniforms;\n\t\t\t\t\t\tstate.spotShadowMap[spotLength] = shadowMap;\n\t\t\t\t\t\tstate.spotShadowMatrix[spotLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumSpotShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.spot[spotLength] = uniforms;\n\t\t\t\t\tspotLength++;\n\t\t\t\t} else if (light.isRectAreaLight) {\n\t\t\t\t\tconst uniforms = cache.get(light); // (a) intensity is the total visible light emitted\n\t\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\t\t\t\t\t// (b) intensity is the brightness of the light\n\n\t\t\t\t\tuniforms.color.copy(color).multiplyScalar(intensity);\n\t\t\t\t\tuniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\t\t\t\t\tuniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\t\t\t\t\tstate.rectArea[rectAreaLength] = uniforms;\n\t\t\t\t\trectAreaLength++;\n\t\t\t\t} else if (light.isPointLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.color.copy(light.color).multiplyScalar(light.intensity);\n\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tconst shadow = light.shadow;\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\t\t\t\t\t\tstate.pointShadow[pointLength] = shadowUniforms;\n\t\t\t\t\t\tstate.pointShadowMap[pointLength] = shadowMap;\n\t\t\t\t\t\tstate.pointShadowMatrix[pointLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumPointShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.point[pointLength] = uniforms;\n\t\t\t\t\tpointLength++;\n\t\t\t\t} else if (light.isHemisphereLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.skyColor.copy(light.color).multiplyScalar(intensity);\n\t\t\t\t\tuniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);\n\t\t\t\t\tstate.hemi[hemiLength] = uniforms;\n\t\t\t\t\themiLength++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (rectAreaLength > 0) {\n\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\t// WebGL 2\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\t\t\t\t} else {\n\t\t\t\t\t// WebGL 1\n\t\t\t\t\tif (extensions.has('OES_texture_float_linear') === true) {\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\t\t\t\t\t} else if (extensions.has('OES_texture_half_float_linear') === true) {\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.ambient[0] = r;\n\t\t\tstate.ambient[1] = g;\n\t\t\tstate.ambient[2] = b;\n\t\t\tconst hash = state.hash;\n\n\t\t\tif (hash.directionalLength !== directionalLength || hash.pointLength !== pointLength || hash.spotLength !== spotLength || hash.rectAreaLength !== rectAreaLength || hash.hemiLength !== hemiLength || hash.numDirectionalShadows !== numDirectionalShadows || hash.numPointShadows !== numPointShadows || hash.numSpotShadows !== numSpotShadows) {\n\t\t\t\tstate.directional.length = directionalLength;\n\t\t\t\tstate.spot.length = spotLength;\n\t\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\t\tstate.point.length = pointLength;\n\t\t\t\tstate.hemi.length = hemiLength;\n\t\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\t\t\t\thash.directionalLength = directionalLength;\n\t\t\t\thash.pointLength = pointLength;\n\t\t\t\thash.spotLength = spotLength;\n\t\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\t\thash.hemiLength = hemiLength;\n\t\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\t\thash.numPointShadows = numPointShadows;\n\t\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\t\tstate.version = nextVersion++;\n\t\t\t}\n\t\t}\n\n\t\tfunction setupView(lights, camera) {\n\t\t\tlet directionalLength = 0;\n\t\t\tlet pointLength = 0;\n\t\t\tlet spotLength = 0;\n\t\t\tlet rectAreaLength = 0;\n\t\t\tlet hemiLength = 0;\n\t\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\t\tfor (let i = 0, l = lights.length; i < l; i++) {\n\t\t\t\tconst light = lights[i];\n\n\t\t\t\tif (light.isDirectionalLight) {\n\t\t\t\t\tconst uniforms = state.directional[directionalLength];\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tvector3.setFromMatrixPosition(light.target.matrixWorld);\n\t\t\t\t\tuniforms.direction.sub(vector3);\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\n\t\t\t\t\tdirectionalLength++;\n\t\t\t\t} else if (light.isSpotLight) {\n\t\t\t\t\tconst uniforms = state.spot[spotLength];\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix);\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tvector3.setFromMatrixPosition(light.target.matrixWorld);\n\t\t\t\t\tuniforms.direction.sub(vector3);\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\n\t\t\t\t\tspotLength++;\n\t\t\t\t} else if (light.isRectAreaLight) {\n\t\t\t\t\tconst uniforms = state.rectArea[rectAreaLength];\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\n\n\t\t\t\t\tmatrix42.identity();\n\t\t\t\t\tmatrix4.copy(light.matrixWorld);\n\t\t\t\t\tmatrix4.premultiply(viewMatrix);\n\t\t\t\t\tmatrix42.extractRotation(matrix4);\n\t\t\t\t\tuniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\t\t\t\t\tuniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\t\t\t\t\tuniforms.halfWidth.applyMatrix4(matrix42);\n\t\t\t\t\tuniforms.halfHeight.applyMatrix4(matrix42);\n\t\t\t\t\trectAreaLength++;\n\t\t\t\t} else if (light.isPointLight) {\n\t\t\t\t\tconst uniforms = state.point[pointLength];\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix);\n\t\t\t\t\tpointLength++;\n\t\t\t\t} else if (light.isHemisphereLight) {\n\t\t\t\t\tconst uniforms = state.hemi[hemiLength];\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\n\t\t\t\t\tuniforms.direction.normalize();\n\t\t\t\t\themiLength++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\tsetupView: setupView,\n\t\t\tstate: state\n\t\t};\n\t}\n\n\tfunction WebGLRenderState(extensions, capabilities) {\n\t\tconst lights = new WebGLLights(extensions, capabilities);\n\t\tconst lightsArray = [];\n\t\tconst shadowsArray = [];\n\n\t\tfunction init() {\n\t\t\tlightsArray.length = 0;\n\t\t\tshadowsArray.length = 0;\n\t\t}\n\n\t\tfunction pushLight(light) {\n\t\t\tlightsArray.push(light);\n\t\t}\n\n\t\tfunction pushShadow(shadowLight) {\n\t\t\tshadowsArray.push(shadowLight);\n\t\t}\n\n\t\tfunction setupLights() {\n\t\t\tlights.setup(lightsArray);\n\t\t}\n\n\t\tfunction setupLightsView(camera) {\n\t\t\tlights.setupView(lightsArray, camera);\n\t\t}\n\n\t\tconst state = {\n\t\t\tlightsArray: lightsArray,\n\t\t\tshadowsArray: shadowsArray,\n\t\t\tlights: lights\n\t\t};\n\t\treturn {\n\t\t\tinit: init,\n\t\t\tstate: state,\n\t\t\tsetupLights: setupLights,\n\t\t\tsetupLightsView: setupLightsView,\n\t\t\tpushLight: pushLight,\n\t\t\tpushShadow: pushShadow\n\t\t};\n\t}\n\n\tfunction WebGLRenderStates(extensions, capabilities) {\n\t\tlet renderStates = new WeakMap();\n\n\t\tfunction get(scene, renderCallDepth = 0) {\n\t\t\tlet renderState;\n\n\t\t\tif (renderStates.has(scene) === false) {\n\t\t\t\trenderState = new WebGLRenderState(extensions, capabilities);\n\t\t\t\trenderStates.set(scene, [renderState]);\n\t\t\t} else {\n\t\t\t\tif (renderCallDepth >= renderStates.get(scene).length) {\n\t\t\t\t\trenderState = new WebGLRenderState(extensions, capabilities);\n\t\t\t\t\trenderStates.get(scene).push(renderState);\n\t\t\t\t} else {\n\t\t\t\t\trenderState = renderStates.get(scene)[renderCallDepth];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn renderState;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\trenderStates = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\t/**\n\t * parameters = {\n\t *\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>\n\t * }\n\t */\n\n\tclass MeshDepthMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshDepthMaterial';\n\t\t\tthis.depthPacking = BasicDepthPacking;\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.fog = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.depthPacking = source.depthPacking;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\n\t *\treferencePosition: <float>,\n\t *\tnearDistance: <float>,\n\t *\tfarDistance: <float>,\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>\n\t *\n\t * }\n\t */\n\n\tclass MeshDistanceMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshDistanceMaterial';\n\t\t\tthis.referencePosition = new Vector3();\n\t\t\tthis.nearDistance = 1;\n\t\t\tthis.farDistance = 1000;\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.fog = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.referencePosition.copy(source.referencePosition);\n\t\t\tthis.nearDistance = source.nearDistance;\n\t\t\tthis.farDistance = source.farDistance;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\n\tvar vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\\n\\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean * HALF_SAMPLE_RATE;\\n\\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\n\tvar vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\n\tfunction WebGLShadowMap(_renderer, _objects, _capabilities) {\n\t\tlet _frustum = new Frustum();\n\n\t\tconst _shadowMapSize = new Vector2(),\n\t\t\t\t\t_viewportSize = new Vector2(),\n\t\t\t\t\t_viewport = new Vector4(),\n\t\t\t\t\t_depthMaterials = [],\n\t\t\t\t\t_distanceMaterials = [],\n\t\t\t\t\t_materialCache = {},\n\t\t\t\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\t\tconst shadowSide = {\n\t\t\t0: BackSide,\n\t\t\t1: FrontSide,\n\t\t\t2: DoubleSide\n\t\t};\n\t\tconst shadowMaterialVertical = new ShaderMaterial({\n\t\t\tdefines: {\n\t\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\tshadow_pass: {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\tresolution: {\n\t\t\t\t\tvalue: new Vector2()\n\t\t\t\t},\n\t\t\t\tradius: {\n\t\t\t\t\tvalue: 4.0\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: vsm_vert,\n\t\t\tfragmentShader: vsm_frag\n\t\t});\n\t\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\t\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\t\tconst fullScreenTri = new BufferGeometry();\n\t\tfullScreenTri.setAttribute('position', new BufferAttribute(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3));\n\t\tconst fullScreenMesh = new Mesh(fullScreenTri, shadowMaterialVertical);\n\t\tconst scope = this;\n\t\tthis.enabled = false;\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.render = function (lights, scene, camera) {\n\t\t\tif (scope.enabled === false) return;\n\t\t\tif (scope.autoUpdate === false && scope.needsUpdate === false) return;\n\t\t\tif (lights.length === 0) return;\n\n\t\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\n\t\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\n\t\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\t\tconst _state = _renderer.state; // Set GL state for depth map.\n\n\t\t\t_state.setBlending(NoBlending);\n\n\t\t\t_state.buffers.color.setClear(1, 1, 1, 1);\n\n\t\t\t_state.buffers.depth.setTest(true);\n\n\t\t\t_state.setScissorTest(false); // render depth map\n\n\n\t\t\tfor (let i = 0, il = lights.length; i < il; i++) {\n\t\t\t\tconst light = lights[i];\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif (shadow === undefined) {\n\t\t\t\t\tconsole.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (shadow.autoUpdate === false && shadow.needsUpdate === false) continue;\n\n\t\t\t\t_shadowMapSize.copy(shadow.mapSize);\n\n\t\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t\t_shadowMapSize.multiply(shadowFrameExtents);\n\n\t\t\t\t_viewportSize.copy(shadow.mapSize);\n\n\t\t\t\tif (_shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize) {\n\t\t\t\t\tif (_shadowMapSize.x > _maxTextureSize) {\n\t\t\t\t\t\t_viewportSize.x = Math.floor(_maxTextureSize / shadowFrameExtents.x);\n\t\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_shadowMapSize.y > _maxTextureSize) {\n\t\t\t\t\t\t_viewportSize.y = Math.floor(_maxTextureSize / shadowFrameExtents.y);\n\t\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (shadow.map === null && !shadow.isPointLightShadow && this.type === VSMShadowMap) {\n\t\t\t\t\tconst pars = {\n\t\t\t\t\t\tminFilter: LinearFilter,\n\t\t\t\t\t\tmagFilter: LinearFilter,\n\t\t\t\t\t\tformat: RGBAFormat\n\t\t\t\t\t};\n\t\t\t\t\tshadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\t\t\t\t\tshadow.mapPass = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\t\t\t\t}\n\n\t\t\t\tif (shadow.map === null) {\n\t\t\t\t\tconst pars = {\n\t\t\t\t\t\tminFilter: NearestFilter,\n\t\t\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\t\t\tformat: RGBAFormat\n\t\t\t\t\t};\n\t\t\t\t\tshadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\t\t\t\t}\n\n\t\t\t\t_renderer.setRenderTarget(shadow.map);\n\n\t\t\t\t_renderer.clear();\n\n\t\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\t\tfor (let vp = 0; vp < viewportCount; vp++) {\n\t\t\t\t\tconst viewport = shadow.getViewport(vp);\n\n\t\t\t\t\t_viewport.set(_viewportSize.x * viewport.x, _viewportSize.y * viewport.y, _viewportSize.x * viewport.z, _viewportSize.y * viewport.w);\n\n\t\t\t\t\t_state.viewport(_viewport);\n\n\t\t\t\t\tshadow.updateMatrices(light, vp);\n\t\t\t\t\t_frustum = shadow.getFrustum();\n\t\t\t\t\trenderObject(scene, camera, shadow.camera, light, this.type);\n\t\t\t\t} // do blur pass for VSM\n\n\n\t\t\t\tif (!shadow.isPointLightShadow && this.type === VSMShadowMap) {\n\t\t\t\t\tVSMPass(shadow, camera);\n\t\t\t\t}\n\n\t\t\t\tshadow.needsUpdate = false;\n\t\t\t}\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t\t_renderer.setRenderTarget(currentRenderTarget, activeCubeFace, activeMipmapLevel);\n\t\t};\n\n\t\tfunction VSMPass(shadow, camera) {\n\t\t\tconst geometry = _objects.update(fullScreenMesh); // vertical pass\n\n\n\t\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\n\t\t\t_renderer.setRenderTarget(shadow.mapPass);\n\n\t\t\t_renderer.clear();\n\n\t\t\t_renderer.renderBufferDirect(camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null); // horizontal pass\n\n\n\t\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\n\t\t\t_renderer.setRenderTarget(shadow.map);\n\n\t\t\t_renderer.clear();\n\n\t\t\t_renderer.renderBufferDirect(camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null);\n\t\t}\n\n\t\tfunction getDepthMaterialVariant(useMorphing) {\n\t\t\tconst index = useMorphing << 0;\n\t\t\tlet material = _depthMaterials[index];\n\n\t\t\tif (material === undefined) {\n\t\t\t\tmaterial = new MeshDepthMaterial({\n\t\t\t\t\tdepthPacking: RGBADepthPacking,\n\t\t\t\t\tmorphTargets: useMorphing\n\t\t\t\t});\n\t\t\t\t_depthMaterials[index] = material;\n\t\t\t}\n\n\t\t\treturn material;\n\t\t}\n\n\t\tfunction getDistanceMaterialVariant(useMorphing) {\n\t\t\tconst index = useMorphing << 0;\n\t\t\tlet material = _distanceMaterials[index];\n\n\t\t\tif (material === undefined) {\n\t\t\t\tmaterial = new MeshDistanceMaterial({\n\t\t\t\t\tmorphTargets: useMorphing\n\t\t\t\t});\n\t\t\t\t_distanceMaterials[index] = material;\n\t\t\t}\n\n\t\t\treturn material;\n\t\t}\n\n\t\tfunction getDepthMaterial(object, geometry, material, light, shadowCameraNear, shadowCameraFar, type) {\n\t\t\tlet result = null;\n\t\t\tlet getMaterialVariant = getDepthMaterialVariant;\n\t\t\tlet customMaterial = object.customDepthMaterial;\n\n\t\t\tif (light.isPointLight === true) {\n\t\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\t\t\t}\n\n\t\t\tif (customMaterial === undefined) {\n\t\t\t\tlet useMorphing = false;\n\n\t\t\t\tif (material.morphTargets === true) {\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\t\t\t\t}\n\n\t\t\t\tresult = getMaterialVariant(useMorphing);\n\t\t\t} else {\n\t\t\t\tresult = customMaterial;\n\t\t\t}\n\n\t\t\tif (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0) {\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\t\t\t\tconst keyA = result.uuid,\n\t\t\t\t\t\t\tkeyB = material.uuid;\n\t\t\t\tlet materialsForVariant = _materialCache[keyA];\n\n\t\t\t\tif (materialsForVariant === undefined) {\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[keyA] = materialsForVariant;\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[keyB];\n\n\t\t\t\tif (cachedMaterial === undefined) {\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[keyB] = cachedMaterial;\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tif (type === VSMShadowMap) {\n\t\t\t\tresult.side = material.shadowSide !== null ? material.shadowSide : material.side;\n\t\t\t} else {\n\t\t\t\tresult.side = material.shadowSide !== null ? material.shadowSide : shadowSide[material.side];\n\t\t\t}\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\t\tresult.clipIntersection = material.clipIntersection;\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif (light.isPointLight === true && result.isMeshDistanceMaterial === true) {\n\t\t\t\tresult.referencePosition.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\t\tresult.farDistance = shadowCameraFar;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction renderObject(object, camera, shadowCamera, light, type) {\n\t\t\tif (object.visible === false) return;\n\t\t\tconst visible = object.layers.test(camera.layers);\n\n\t\t\tif (visible && (object.isMesh || object.isLine || object.isPoints)) {\n\t\t\t\tif ((object.castShadow || object.receiveShadow && type === VSMShadowMap) && (!object.frustumCulled || _frustum.intersectsObject(object))) {\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n\t\t\t\t\tconst geometry = _objects.update(object);\n\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor (let k = 0, kl = groups.length; k < kl; k++) {\n\t\t\t\t\t\t\tconst group = groups[k];\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\n\t\t\t\t\t\t\tif (groupMaterial && groupMaterial.visible) {\n\t\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial(object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type);\n\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (material.visible) {\n\t\t\t\t\t\tconst depthMaterial = getDepthMaterial(object, geometry, material, light, shadowCamera.near, shadowCamera.far, type);\n\n\t\t\t\t\t\t_renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\trenderObject(children[i], camera, shadowCamera, light, type);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction WebGLState(gl, extensions, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction ColorBuffer() {\n\t\t\tlet locked = false;\n\t\t\tconst color = new Vector4();\n\t\t\tlet currentColorMask = null;\n\t\t\tconst currentColorClear = new Vector4(0, 0, 0, 0);\n\t\t\treturn {\n\t\t\t\tsetMask: function (colorMask) {\n\t\t\t\t\tif (currentColorMask !== colorMask && !locked) {\n\t\t\t\t\t\tgl.colorMask(colorMask, colorMask, colorMask, colorMask);\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function (lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function (r, g, b, a, premultipliedAlpha) {\n\t\t\t\t\tif (premultipliedAlpha === true) {\n\t\t\t\t\t\tr *= a;\n\t\t\t\t\t\tg *= a;\n\t\t\t\t\t\tb *= a;\n\t\t\t\t\t}\n\n\t\t\t\t\tcolor.set(r, g, b, a);\n\n\t\t\t\t\tif (currentColorClear.equals(color) === false) {\n\t\t\t\t\t\tgl.clearColor(r, g, b, a);\n\t\t\t\t\t\tcurrentColorClear.copy(color);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function () {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set(-1, 0, 0, 0); // set to invalid state\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\t\t\tlet locked = false;\n\t\t\tlet currentDepthMask = null;\n\t\t\tlet currentDepthFunc = null;\n\t\t\tlet currentDepthClear = null;\n\t\t\treturn {\n\t\t\t\tsetTest: function (depthTest) {\n\t\t\t\t\tif (depthTest) {\n\t\t\t\t\t\tenable(gl.DEPTH_TEST);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdisable(gl.DEPTH_TEST);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetMask: function (depthMask) {\n\t\t\t\t\tif (currentDepthMask !== depthMask && !locked) {\n\t\t\t\t\t\tgl.depthMask(depthMask);\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetFunc: function (depthFunc) {\n\t\t\t\t\tif (currentDepthFunc !== depthFunc) {\n\t\t\t\t\t\tif (depthFunc) {\n\t\t\t\t\t\t\tswitch (depthFunc) {\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.NEVER);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.ALWAYS);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LESS);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.EQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.GEQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.GREATER);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.NOTEQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function (lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function (depth) {\n\t\t\t\t\tif (currentDepthClear !== depth) {\n\t\t\t\t\t\tgl.clearDepth(depth);\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function () {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\t\t\tlet locked = false;\n\t\t\tlet currentStencilMask = null;\n\t\t\tlet currentStencilFunc = null;\n\t\t\tlet currentStencilRef = null;\n\t\t\tlet currentStencilFuncMask = null;\n\t\t\tlet currentStencilFail = null;\n\t\t\tlet currentStencilZFail = null;\n\t\t\tlet currentStencilZPass = null;\n\t\t\tlet currentStencilClear = null;\n\t\t\treturn {\n\t\t\t\tsetTest: function (stencilTest) {\n\t\t\t\t\tif (!locked) {\n\t\t\t\t\t\tif (stencilTest) {\n\t\t\t\t\t\t\tenable(gl.STENCIL_TEST);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdisable(gl.STENCIL_TEST);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetMask: function (stencilMask) {\n\t\t\t\t\tif (currentStencilMask !== stencilMask && !locked) {\n\t\t\t\t\t\tgl.stencilMask(stencilMask);\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetFunc: function (stencilFunc, stencilRef, stencilMask) {\n\t\t\t\t\tif (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n\t\t\t\t\t\tgl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetOp: function (stencilFail, stencilZFail, stencilZPass) {\n\t\t\t\t\tif (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n\t\t\t\t\t\tgl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function (lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function (stencil) {\n\t\t\t\t\tif (currentStencilClear !== stencil) {\n\t\t\t\t\t\tgl.clearStencil(stencil);\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function () {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\t\t\t\t}\n\t\t\t};\n\t\t} //\n\n\n\t\tconst colorBuffer = new ColorBuffer();\n\t\tconst depthBuffer = new DepthBuffer();\n\t\tconst stencilBuffer = new StencilBuffer();\n\t\tlet enabledCapabilities = {};\n\t\tlet xrFramebuffer = null;\n\t\tlet currentBoundFramebuffers = {};\n\t\tlet currentProgram = null;\n\t\tlet currentBlendingEnabled = false;\n\t\tlet currentBlending = null;\n\t\tlet currentBlendEquation = null;\n\t\tlet currentBlendSrc = null;\n\t\tlet currentBlendDst = null;\n\t\tlet currentBlendEquationAlpha = null;\n\t\tlet currentBlendSrcAlpha = null;\n\t\tlet currentBlendDstAlpha = null;\n\t\tlet currentPremultipledAlpha = false;\n\t\tlet currentFlipSided = null;\n\t\tlet currentCullFace = null;\n\t\tlet currentLineWidth = null;\n\t\tlet currentPolygonOffsetFactor = null;\n\t\tlet currentPolygonOffsetUnits = null;\n\t\tconst maxTextures = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n\t\tlet lineWidthAvailable = false;\n\t\tlet version = 0;\n\t\tconst glVersion = gl.getParameter(gl.VERSION);\n\n\t\tif (glVersion.indexOf('WebGL') !== -1) {\n\t\t\tversion = parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);\n\t\t\tlineWidthAvailable = version >= 1.0;\n\t\t} else if (glVersion.indexOf('OpenGL ES') !== -1) {\n\t\t\tversion = parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);\n\t\t\tlineWidthAvailable = version >= 2.0;\n\t\t}\n\n\t\tlet currentTextureSlot = null;\n\t\tlet currentBoundTextures = {};\n\t\tconst scissorParam = gl.getParameter(gl.SCISSOR_BOX);\n\t\tconst viewportParam = gl.getParameter(gl.VIEWPORT);\n\t\tconst currentScissor = new Vector4().fromArray(scissorParam);\n\t\tconst currentViewport = new Vector4().fromArray(viewportParam);\n\n\t\tfunction createTexture(type, target, count) {\n\t\t\tconst data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n\n\t\t\tconst texture = gl.createTexture();\n\t\t\tgl.bindTexture(type, texture);\n\t\t\tgl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tgl.texImage2D(target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tconst emptyTextures = {};\n\t\temptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\n\t\temptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6); // init\n\n\t\tcolorBuffer.setClear(0, 0, 0, 1);\n\t\tdepthBuffer.setClear(1);\n\t\tstencilBuffer.setClear(0);\n\t\tenable(gl.DEPTH_TEST);\n\t\tdepthBuffer.setFunc(LessEqualDepth);\n\t\tsetFlipSided(false);\n\t\tsetCullFace(CullFaceBack);\n\t\tenable(gl.CULL_FACE);\n\t\tsetBlending(NoBlending); //\n\n\t\tfunction enable(id) {\n\t\t\tif (enabledCapabilities[id] !== true) {\n\t\t\t\tgl.enable(id);\n\t\t\t\tenabledCapabilities[id] = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction disable(id) {\n\t\t\tif (enabledCapabilities[id] !== false) {\n\t\t\t\tgl.disable(id);\n\t\t\t\tenabledCapabilities[id] = false;\n\t\t\t}\n\t\t}\n\n\t\tfunction bindXRFramebuffer(framebuffer) {\n\t\t\tif (framebuffer !== xrFramebuffer) {\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t\t\t\txrFramebuffer = framebuffer;\n\t\t\t}\n\t\t}\n\n\t\tfunction bindFramebuffer(target, framebuffer) {\n\t\t\tif (framebuffer === null && xrFramebuffer !== null) framebuffer = xrFramebuffer; // use active XR framebuffer if available\n\n\t\t\tif (currentBoundFramebuffers[target] !== framebuffer) {\n\t\t\t\tgl.bindFramebuffer(target, framebuffer);\n\t\t\t\tcurrentBoundFramebuffers[target] = framebuffer;\n\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\t\t\t\t\tif (target === gl.DRAW_FRAMEBUFFER) {\n\t\t\t\t\t\tcurrentBoundFramebuffers[gl.FRAMEBUFFER] = framebuffer;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target === gl.FRAMEBUFFER) {\n\t\t\t\t\t\tcurrentBoundFramebuffers[gl.DRAW_FRAMEBUFFER] = framebuffer;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction useProgram(program) {\n\t\t\tif (currentProgram !== program) {\n\t\t\t\tgl.useProgram(program);\n\t\t\t\tcurrentProgram = program;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tconst equationToGL = {\n\t\t\t[AddEquation]: gl.FUNC_ADD,\n\t\t\t[SubtractEquation]: gl.FUNC_SUBTRACT,\n\t\t\t[ReverseSubtractEquation]: gl.FUNC_REVERSE_SUBTRACT\n\t\t};\n\n\t\tif (isWebGL2) {\n\t\t\tequationToGL[MinEquation] = gl.MIN;\n\t\t\tequationToGL[MaxEquation] = gl.MAX;\n\t\t} else {\n\t\t\tconst extension = extensions.get('EXT_blend_minmax');\n\n\t\t\tif (extension !== null) {\n\t\t\t\tequationToGL[MinEquation] = extension.MIN_EXT;\n\t\t\t\tequationToGL[MaxEquation] = extension.MAX_EXT;\n\t\t\t}\n\t\t}\n\n\t\tconst factorToGL = {\n\t\t\t[ZeroFactor]: gl.ZERO,\n\t\t\t[OneFactor]: gl.ONE,\n\t\t\t[SrcColorFactor]: gl.SRC_COLOR,\n\t\t\t[SrcAlphaFactor]: gl.SRC_ALPHA,\n\t\t\t[SrcAlphaSaturateFactor]: gl.SRC_ALPHA_SATURATE,\n\t\t\t[DstColorFactor]: gl.DST_COLOR,\n\t\t\t[DstAlphaFactor]: gl.DST_ALPHA,\n\t\t\t[OneMinusSrcColorFactor]: gl.ONE_MINUS_SRC_COLOR,\n\t\t\t[OneMinusSrcAlphaFactor]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t\t[OneMinusDstColorFactor]: gl.ONE_MINUS_DST_COLOR,\n\t\t\t[OneMinusDstAlphaFactor]: gl.ONE_MINUS_DST_ALPHA\n\t\t};\n\n\t\tfunction setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n\t\t\tif (blending === NoBlending) {\n\t\t\t\tif (currentBlendingEnabled === true) {\n\t\t\t\t\tdisable(gl.BLEND);\n\t\t\t\t\tcurrentBlendingEnabled = false;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (currentBlendingEnabled === false) {\n\t\t\t\tenable(gl.BLEND);\n\t\t\t\tcurrentBlendingEnabled = true;\n\t\t\t}\n\n\t\t\tif (blending !== CustomBlending) {\n\t\t\t\tif (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n\t\t\t\t\tif (currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation) {\n\t\t\t\t\t\tgl.blendEquation(gl.FUNC_ADD);\n\t\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (premultipliedAlpha) {\n\t\t\t\t\t\tswitch (blending) {\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ONE, gl.ONE);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error('THREE.WebGLState: Invalid blending: ', blending);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tswitch (blending) {\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error('THREE.WebGLState: Invalid blending: ', blending);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\t\tcurrentBlendDst = null;\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\t\tcurrentBlending = blending;\n\t\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t} // custom blending\n\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n\t\t\t\tgl.blendEquationSeparate(equationToGL[blendEquation], equationToGL[blendEquationAlpha]);\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\t\t\t}\n\n\t\t\tif (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n\t\t\t\tgl.blendFuncSeparate(factorToGL[blendSrc], factorToGL[blendDst], factorToGL[blendSrcAlpha], factorToGL[blendDstAlpha]);\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\t\t\t}\n\n\t\t\tcurrentBlending = blending;\n\t\t\tcurrentPremultipledAlpha = null;\n\t\t}\n\n\t\tfunction setMaterial(material, frontFaceCW) {\n\t\t\tmaterial.side === DoubleSide ? disable(gl.CULL_FACE) : enable(gl.CULL_FACE);\n\t\t\tlet flipSided = material.side === BackSide;\n\t\t\tif (frontFaceCW) flipSided = !flipSided;\n\t\t\tsetFlipSided(flipSided);\n\t\t\tmaterial.blending === NormalBlending && material.transparent === false ? setBlending(NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n\t\t\tdepthBuffer.setFunc(material.depthFunc);\n\t\t\tdepthBuffer.setTest(material.depthTest);\n\t\t\tdepthBuffer.setMask(material.depthWrite);\n\t\t\tcolorBuffer.setMask(material.colorWrite);\n\t\t\tconst stencilWrite = material.stencilWrite;\n\t\t\tstencilBuffer.setTest(stencilWrite);\n\n\t\t\tif (stencilWrite) {\n\t\t\t\tstencilBuffer.setMask(material.stencilWriteMask);\n\t\t\t\tstencilBuffer.setFunc(material.stencilFunc, material.stencilRef, material.stencilFuncMask);\n\t\t\t\tstencilBuffer.setOp(material.stencilFail, material.stencilZFail, material.stencilZPass);\n\t\t\t}\n\n\t\t\tsetPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n\t\t\tmaterial.alphaToCoverage === true ? enable(gl.SAMPLE_ALPHA_TO_COVERAGE) : disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\t\t} //\n\n\n\t\tfunction setFlipSided(flipSided) {\n\t\t\tif (currentFlipSided !== flipSided) {\n\t\t\t\tif (flipSided) {\n\t\t\t\t\tgl.frontFace(gl.CW);\n\t\t\t\t} else {\n\t\t\t\t\tgl.frontFace(gl.CCW);\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\t\t\t}\n\t\t}\n\n\t\tfunction setCullFace(cullFace) {\n\t\t\tif (cullFace !== CullFaceNone) {\n\t\t\t\tenable(gl.CULL_FACE);\n\n\t\t\t\tif (cullFace !== currentCullFace) {\n\t\t\t\t\tif (cullFace === CullFaceBack) {\n\t\t\t\t\t\tgl.cullFace(gl.BACK);\n\t\t\t\t\t} else if (cullFace === CullFaceFront) {\n\t\t\t\t\t\tgl.cullFace(gl.FRONT);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgl.cullFace(gl.FRONT_AND_BACK);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdisable(gl.CULL_FACE);\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\t\t}\n\n\t\tfunction setLineWidth(width) {\n\t\t\tif (width !== currentLineWidth) {\n\t\t\t\tif (lineWidthAvailable) gl.lineWidth(width);\n\t\t\t\tcurrentLineWidth = width;\n\t\t\t}\n\t\t}\n\n\t\tfunction setPolygonOffset(polygonOffset, factor, units) {\n\t\t\tif (polygonOffset) {\n\t\t\t\tenable(gl.POLYGON_OFFSET_FILL);\n\n\t\t\t\tif (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n\t\t\t\t\tgl.polygonOffset(factor, units);\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdisable(gl.POLYGON_OFFSET_FILL);\n\t\t\t}\n\t\t}\n\n\t\tfunction setScissorTest(scissorTest) {\n\t\t\tif (scissorTest) {\n\t\t\t\tenable(gl.SCISSOR_TEST);\n\t\t\t} else {\n\t\t\t\tdisable(gl.SCISSOR_TEST);\n\t\t\t}\n\t\t} // texture\n\n\n\t\tfunction activeTexture(webglSlot) {\n\t\t\tif (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\tif (currentTextureSlot !== webglSlot) {\n\t\t\t\tgl.activeTexture(webglSlot);\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\t\t\t}\n\t\t}\n\n\t\tfunction bindTexture(webglType, webglTexture) {\n\t\t\tif (currentTextureSlot === null) {\n\t\t\t\tactiveTexture();\n\t\t\t}\n\n\t\t\tlet boundTexture = currentBoundTextures[currentTextureSlot];\n\n\t\t\tif (boundTexture === undefined) {\n\t\t\t\tboundTexture = {\n\t\t\t\t\ttype: undefined,\n\t\t\t\t\ttexture: undefined\n\t\t\t\t};\n\t\t\t\tcurrentBoundTextures[currentTextureSlot] = boundTexture;\n\t\t\t}\n\n\t\t\tif (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n\t\t\t\tgl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\t\t\t}\n\t\t}\n\n\t\tfunction unbindTexture() {\n\t\t\tconst boundTexture = currentBoundTextures[currentTextureSlot];\n\n\t\t\tif (boundTexture !== undefined && boundTexture.type !== undefined) {\n\t\t\t\tgl.bindTexture(boundTexture.type, null);\n\t\t\t\tboundTexture.type = undefined;\n\t\t\t\tboundTexture.texture = undefined;\n\t\t\t}\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\t\t\ttry {\n\t\t\t\tgl.compressedTexImage2D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t}\n\n\t\tfunction texImage2D() {\n\t\t\ttry {\n\t\t\t\tgl.texImage2D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t}\n\n\t\tfunction texImage3D() {\n\t\t\ttry {\n\t\t\t\tgl.texImage3D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction scissor(scissor) {\n\t\t\tif (currentScissor.equals(scissor) === false) {\n\t\t\t\tgl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n\t\t\t\tcurrentScissor.copy(scissor);\n\t\t\t}\n\t\t}\n\n\t\tfunction viewport(viewport) {\n\t\t\tif (currentViewport.equals(viewport) === false) {\n\t\t\t\tgl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n\t\t\t\tcurrentViewport.copy(viewport);\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction reset() {\n\t\t\t// reset state\n\t\t\tgl.disable(gl.BLEND);\n\t\t\tgl.disable(gl.CULL_FACE);\n\t\t\tgl.disable(gl.DEPTH_TEST);\n\t\t\tgl.disable(gl.POLYGON_OFFSET_FILL);\n\t\t\tgl.disable(gl.SCISSOR_TEST);\n\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t\tgl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\t\t\tgl.blendEquation(gl.FUNC_ADD);\n\t\t\tgl.blendFunc(gl.ONE, gl.ZERO);\n\t\t\tgl.blendFuncSeparate(gl.ONE, gl.ZERO, gl.ONE, gl.ZERO);\n\t\t\tgl.colorMask(true, true, true, true);\n\t\t\tgl.clearColor(0, 0, 0, 0);\n\t\t\tgl.depthMask(true);\n\t\t\tgl.depthFunc(gl.LESS);\n\t\t\tgl.clearDepth(1);\n\t\t\tgl.stencilMask(0xffffffff);\n\t\t\tgl.stencilFunc(gl.ALWAYS, 0, 0xffffffff);\n\t\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\t\t\tgl.clearStencil(0);\n\t\t\tgl.cullFace(gl.BACK);\n\t\t\tgl.frontFace(gl.CCW);\n\t\t\tgl.polygonOffset(0, 0);\n\t\t\tgl.activeTexture(gl.TEXTURE0);\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n\t\t\tif (isWebGL2 === true) {\n\t\t\t\tgl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n\t\t\t\tgl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n\t\t\t}\n\n\t\t\tgl.useProgram(null);\n\t\t\tgl.lineWidth(1);\n\t\t\tgl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n\t\t\tgl.viewport(0, 0, gl.canvas.width, gl.canvas.height); // reset internals\n\n\t\t\tenabledCapabilities = {};\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\t\t\txrFramebuffer = null;\n\t\t\tcurrentBoundFramebuffers = {};\n\t\t\tcurrentProgram = null;\n\t\t\tcurrentBlendingEnabled = false;\n\t\t\tcurrentBlending = null;\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\t\t\tcurrentPremultipledAlpha = false;\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\t\t\tcurrentLineWidth = null;\n\t\t\tcurrentPolygonOffsetFactor = null;\n\t\t\tcurrentPolygonOffsetUnits = null;\n\t\t\tcurrentScissor.set(0, 0, gl.canvas.width, gl.canvas.height);\n\t\t\tcurrentViewport.set(0, 0, gl.canvas.width, gl.canvas.height);\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\t\t}\n\n\t\treturn {\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\t\t\tbindFramebuffer: bindFramebuffer,\n\t\t\tbindXRFramebuffer: bindXRFramebuffer,\n\t\t\tuseProgram: useProgram,\n\t\t\tsetBlending: setBlending,\n\t\t\tsetMaterial: setMaterial,\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\t\t\tsetScissorTest: setScissorTest,\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tunbindTexture: unbindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\t\t\ttexImage3D: texImage3D,\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\t\t\treset: reset\n\t\t};\n\t}\n\n\tfunction WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tconst maxTextures = capabilities.maxTextures;\n\t\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\t\tconst maxTextureSize = capabilities.maxTextureSize;\n\t\tconst maxSamples = capabilities.maxSamples;\n\n\t\tconst _videoTextures = new WeakMap();\n\n\t\tlet _canvas; // cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\n\t\tlet useOffscreenCanvas = false;\n\n\t\ttry {\n\t\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined' && new OffscreenCanvas(1, 1).getContext('2d') !== null;\n\t\t} catch (err) {// Ignore any errors\n\t\t}\n\n\t\tfunction createCanvas(width, height) {\n\t\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\t\t\treturn useOffscreenCanvas ? new OffscreenCanvas(width, height) : document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n\t\t}\n\n\t\tfunction resizeImage(image, needsPowerOfTwo, needsNewCanvas, maxSize) {\n\t\t\tlet scale = 1; // handle case if texture exceeds max size\n\n\t\t\tif (image.width > maxSize || image.height > maxSize) {\n\t\t\t\tscale = maxSize / Math.max(image.width, image.height);\n\t\t\t} // only perform resize if necessary\n\n\n\t\t\tif (scale < 1 || needsPowerOfTwo === true) {\n\t\t\t\t// only perform resize for certain image types\n\t\t\t\tif (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n\t\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\t\t\t\t\tconst width = floor(scale * image.width);\n\t\t\t\t\tconst height = floor(scale * image.height);\n\t\t\t\t\tif (_canvas === undefined) _canvas = createCanvas(width, height); // cube textures can't reuse the same canvas\n\n\t\t\t\t\tconst canvas = needsNewCanvas ? createCanvas(width, height) : _canvas;\n\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\tcanvas.height = height;\n\t\t\t\t\tconst context = canvas.getContext('2d');\n\t\t\t\t\tcontext.drawImage(image, 0, 0, width, height);\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').');\n\t\t\t\t\treturn canvas;\n\t\t\t\t} else {\n\t\t\t\t\tif ('data' in image) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn image;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn image;\n\t\t}\n\n\t\tfunction isPowerOfTwo$1(image) {\n\t\t\treturn isPowerOfTwo(image.width) && isPowerOfTwo(image.height);\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo(texture) {\n\t\t\tif (isWebGL2) return false;\n\t\t\treturn texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping || texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\t\t}\n\n\t\tfunction textureNeedsGenerateMipmaps(texture, supportsMips) {\n\t\t\treturn texture.generateMipmaps && supportsMips && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\t\t}\n\n\t\tfunction generateMipmap(target, texture, width, height, depth = 1) {\n\t\t\t_gl.generateMipmap(target);\n\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\ttextureProperties.__maxMipLevel = Math.log2(Math.max(width, height, depth));\n\t\t}\n\n\t\tfunction getInternalFormat(internalFormatName, glFormat, glType) {\n\t\t\tif (isWebGL2 === false) return glFormat;\n\n\t\t\tif (internalFormatName !== null) {\n\t\t\t\tif (_gl[internalFormatName] !== undefined) return _gl[internalFormatName];\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'');\n\t\t\t}\n\n\t\t\tlet internalFormat = glFormat;\n\n\t\t\tif (glFormat === _gl.RED) {\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.R32F;\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.R16F;\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.R8;\n\t\t\t}\n\n\t\t\tif (glFormat === _gl.RGB) {\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.RGB32F;\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.RGB16F;\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.RGB8;\n\t\t\t}\n\n\t\t\tif (glFormat === _gl.RGBA) {\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.RGBA32F;\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.RGBA16F;\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.RGBA8;\n\t\t\t}\n\n\t\t\tif (internalFormat === _gl.R16F || internalFormat === _gl.R32F || internalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F) {\n\t\t\t\textensions.get('EXT_color_buffer_float');\n\t\t\t}\n\n\t\t\treturn internalFormat;\n\t\t} // Fallback filters for non-power-of-2 textures\n\n\n\t\tfunction filterFallback(f) {\n\t\t\tif (f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter) {\n\t\t\t\treturn _gl.NEAREST;\n\t\t\t}\n\n\t\t\treturn _gl.LINEAR;\n\t\t} //\n\n\n\t\tfunction onTextureDispose(event) {\n\t\t\tconst texture = event.target;\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\n\t\t\tdeallocateTexture(texture);\n\n\t\t\tif (texture.isVideoTexture) {\n\t\t\t\t_videoTextures.delete(texture);\n\t\t\t}\n\n\t\t\tinfo.memory.textures--;\n\t\t}\n\n\t\tfunction onRenderTargetDispose(event) {\n\t\t\tconst renderTarget = event.target;\n\t\t\trenderTarget.removeEventListener('dispose', onRenderTargetDispose);\n\t\t\tdeallocateRenderTarget(renderTarget);\n\t\t} //\n\n\n\t\tfunction deallocateTexture(texture) {\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\tif (textureProperties.__webglInit === undefined) return;\n\n\t\t\t_gl.deleteTexture(textureProperties.__webglTexture);\n\n\t\t\tproperties.remove(texture);\n\t\t}\n\n\t\tfunction deallocateRenderTarget(renderTarget) {\n\t\t\tconst texture = renderTarget.texture;\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\tif (!renderTarget) return;\n\n\t\t\tif (textureProperties.__webglTexture !== undefined) {\n\t\t\t\t_gl.deleteTexture(textureProperties.__webglTexture);\n\n\t\t\t\tinfo.memory.textures--;\n\t\t\t}\n\n\t\t\tif (renderTarget.depthTexture) {\n\t\t\t\trenderTarget.depthTexture.dispose();\n\t\t\t}\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget) {\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\t_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n\t\t\t\t\tif (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n\t\t\t\tif (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n\t\t\t\tif (renderTargetProperties.__webglMultisampledFramebuffer) _gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);\n\t\t\t\tif (renderTargetProperties.__webglColorRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer);\n\t\t\t\tif (renderTargetProperties.__webglDepthRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);\n\t\t\t}\n\n\t\t\tif (renderTarget.isWebGLMultipleRenderTargets) {\n\t\t\t\tfor (let i = 0, il = texture.length; i < il; i++) {\n\t\t\t\t\tconst attachmentProperties = properties.get(texture[i]);\n\n\t\t\t\t\tif (attachmentProperties.__webglTexture) {\n\t\t\t\t\t\t_gl.deleteTexture(attachmentProperties.__webglTexture);\n\n\t\t\t\t\t\tinfo.memory.textures--;\n\t\t\t\t\t}\n\n\t\t\t\t\tproperties.remove(texture[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.remove(texture);\n\t\t\tproperties.remove(renderTarget);\n\t\t} //\n\n\n\t\tlet textureUnits = 0;\n\n\t\tfunction resetTextureUnits() {\n\t\t\ttextureUnits = 0;\n\t\t}\n\n\t\tfunction allocateTextureUnit() {\n\t\t\tconst textureUnit = textureUnits;\n\n\t\t\tif (textureUnit >= maxTextures) {\n\t\t\t\tconsole.warn('THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures);\n\t\t\t}\n\n\t\t\ttextureUnits += 1;\n\t\t\treturn textureUnit;\n\t\t} //\n\n\n\t\tfunction setTexture2D(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\tif (texture.isVideoTexture) updateVideoTexture(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tconst image = texture.image;\n\n\t\t\t\tif (image === undefined) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');\n\t\t\t\t} else if (image.complete === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');\n\t\t\t\t} else {\n\t\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTexture2DArray(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTexture3D(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_3D, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTextureCube(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadCubeTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n\t\t}\n\n\t\tconst wrappingToGL = {\n\t\t\t[RepeatWrapping]: _gl.REPEAT,\n\t\t\t[ClampToEdgeWrapping]: _gl.CLAMP_TO_EDGE,\n\t\t\t[MirroredRepeatWrapping]: _gl.MIRRORED_REPEAT\n\t\t};\n\t\tconst filterToGL = {\n\t\t\t[NearestFilter]: _gl.NEAREST,\n\t\t\t[NearestMipmapNearestFilter]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t\t[NearestMipmapLinearFilter]: _gl.NEAREST_MIPMAP_LINEAR,\n\t\t\t[LinearFilter]: _gl.LINEAR,\n\t\t\t[LinearMipmapNearestFilter]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t\t[LinearMipmapLinearFilter]: _gl.LINEAR_MIPMAP_LINEAR\n\t\t};\n\n\t\tfunction setTextureParameters(textureType, texture, supportsMips) {\n\t\t\tif (supportsMips) {\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[texture.wrapS]);\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[texture.wrapT]);\n\n\t\t\t\tif (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\n\t\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[texture.wrapR]);\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[texture.magFilter]);\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[texture.minFilter]);\n\t\t\t} else {\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\n\n\t\t\t\tif (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\n\t\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE);\n\t\t\t\t}\n\n\t\t\t\tif (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\n\n\t\t\t\tif (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (extensions.has('EXT_texture_filter_anisotropic') === true) {\n\t\t\t\tconst extension = extensions.get('EXT_texture_filter_anisotropic');\n\t\t\t\tif (texture.type === FloatType && extensions.has('OES_texture_float_linear') === false) return; // verify extension for WebGL 1 and WebGL 2\n\n\t\t\t\tif (isWebGL2 === false && texture.type === HalfFloatType && extensions.has('OES_texture_half_float_linear') === false) return; // verify extension for WebGL 1 only\n\n\t\t\t\tif (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n\t\t\t\t\t_gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));\n\n\t\t\t\t\tproperties.get(texture).__currentAnisotropy = texture.anisotropy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction initTexture(textureProperties, texture) {\n\t\t\tif (textureProperties.__webglInit === undefined) {\n\t\t\t\ttextureProperties.__webglInit = true;\n\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\t\t\tinfo.memory.textures++;\n\t\t\t}\n\t\t}\n\n\t\tfunction uploadTexture(textureProperties, texture, slot) {\n\t\t\tlet textureType = _gl.TEXTURE_2D;\n\t\t\tif (texture.isDataTexture2DArray) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\t\tif (texture.isDataTexture3D) textureType = _gl.TEXTURE_3D;\n\t\t\tinitTexture(textureProperties, texture);\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(textureType, textureProperties.__webglTexture);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo(texture) && isPowerOfTwo$1(texture.image) === false;\n\t\t\tconst image = resizeImage(texture.image, needsPowerOfTwo, false, maxTextureSize);\n\t\t\tconst supportsMips = isPowerOfTwo$1(image) || isWebGL2,\n\t\t\t\t\t\tglFormat = utils.convert(texture.format);\n\t\t\tlet glType = utils.convert(texture.type),\n\t\t\t\t\tglInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\n\t\t\tsetTextureParameters(textureType, texture, supportsMips);\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tif (texture.isDepthTexture) {\n\t\t\t\t// populate depth texture with dummy data\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tif (texture.type === FloatType) {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\t\t\t\t\t} else if (texture.type === UnsignedIntType) {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\t\t\t\t\t} else if (texture.type === UnsignedInt248Type) {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (texture.type === FloatType) {\n\t\t\t\t\t\tconsole.error('WebGLRenderer: Floating point depth texture requires WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t} // validation checks for WebGL 1\n\n\n\t\t\t\tif (texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = utils.convert(texture.type);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n\t\t\t\t\tif (texture.type !== UnsignedInt248Type) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert(texture.type);\n\t\t\t\t\t}\n\t\t\t\t} //\n\n\n\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null);\n\t\t\t} else if (texture.isDataTexture) {\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\t\t\t\tif (mipmaps.length > 0 && supportsMips) {\n\t\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\n\t\t\t\t\t\tmipmap = mipmaps[i];\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t\t} else {\n\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data);\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t\t}\n\t\t\t} else if (texture.isCompressedTexture) {\n\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\n\t\t\t\t\tmipmap = mipmaps[i];\n\n\t\t\t\t\tif (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n\t\t\t\t\t\tif (glFormat !== null) {\n\t\t\t\t\t\t\tstate.compressedTexImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t} else if (texture.isDataTexture2DArray) {\n\t\t\t\tstate.texImage3D(_gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t} else if (texture.isDataTexture3D) {\n\t\t\t\tstate.texImage3D(_gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t} else {\n\t\t\t\t// regular Texture (image, video, canvas)\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\t\t\t\tif (mipmaps.length > 0 && supportsMips) {\n\t\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\n\t\t\t\t\t\tmipmap = mipmaps[i];\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap);\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t\t} else {\n\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image);\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\tgenerateMipmap(textureType, texture, image.width, image.height);\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tif (texture.onUpdate) texture.onUpdate(texture);\n\t\t}\n\n\t\tfunction uploadCubeTexture(textureProperties, texture, slot) {\n\t\t\tif (texture.image.length !== 6) return;\n\t\t\tinitTexture(textureProperties, texture);\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\n\n\t\t\tconst isCompressed = texture && (texture.isCompressedTexture || texture.image[0].isCompressedTexture);\n\t\t\tconst isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tif (!isCompressed && !isDataTexture) {\n\t\t\t\t\tcubeImage[i] = resizeImage(texture.image[i], false, true, maxCubemapSize);\n\t\t\t\t} else {\n\t\t\t\t\tcubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst image = cubeImage[0],\n\t\t\t\t\t\tsupportsMips = isPowerOfTwo$1(image) || isWebGL2,\n\t\t\t\t\t\tglFormat = utils.convert(texture.format),\n\t\t\t\t\t\tglType = utils.convert(texture.type),\n\t\t\t\t\t\tglInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\n\t\t\tsetTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\n\t\t\tlet mipmaps;\n\n\t\t\tif (isCompressed) {\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\tmipmaps = cubeImage[i].mipmaps;\n\n\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\n\t\t\t\t\t\tconst mipmap = mipmaps[j];\n\n\t\t\t\t\t\tif (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n\t\t\t\t\t\t\tif (glFormat !== null) {\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t} else {\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\tif (isDataTexture) {\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n\n\t\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\n\t\t\t\t\t\t\tconst mipmap = mipmaps[j];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[i].image;\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[i]);\n\n\t\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\n\t\t\t\t\t\t\tconst mipmap = mipmaps[j];\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\t\t\t}\n\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap(_gl.TEXTURE_CUBE_MAP, texture, image.width, image.height);\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tif (texture.onUpdate) texture.onUpdate(texture);\n\t\t} // Render targets\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\n\n\t\tfunction setupFrameBufferTexture(framebuffer, renderTarget, texture, attachment, textureTarget) {\n\t\t\tconst glFormat = utils.convert(texture.format);\n\t\t\tconst glType = utils.convert(texture.type);\n\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\n\n\t\t\tif (textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY) {\n\t\t\t\tstate.texImage3D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null);\n\t\t\t} else {\n\t\t\t\tstate.texImage2D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, attachment, textureTarget, properties.get(texture).__webglTexture, 0);\n\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\n\t\t} // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n\t\tfunction setupRenderBufferStorage(renderbuffer, renderTarget, isMultisample) {\n\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\n\n\t\t\tif (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n\t\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\t\tif (depthTexture && depthTexture.isDepthTexture) {\n\t\t\t\t\t\tif (depthTexture.type === FloatType) {\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\t\t\t\t\t\t} else if (depthTexture.type === UnsignedIntType) {\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n\t\t\t} else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n\t\t\t} else {\n\t\t\t\t// Use the first texture for MRT so far\n\t\t\t\tconst texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[0] : renderTarget.texture;\n\t\t\t\tconst glFormat = utils.convert(texture.format);\n\t\t\t\tconst glType = utils.convert(texture.type);\n\t\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\n\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n\t\t} // Setup resources for a Depth Texture for a FBO (needs an extension)\n\n\n\t\tfunction setupDepthTexture(framebuffer, renderTarget) {\n\t\t\tconst isCube = renderTarget && renderTarget.isWebGLCubeRenderTarget;\n\t\t\tif (isCube) throw new Error('Depth Texture with cube render targets is not supported');\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\tif (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {\n\t\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n\t\t\t} // upload an empty depth texture with framebuffer size\n\n\n\t\t\tif (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t\t}\n\n\t\t\tsetTexture2D(renderTarget.depthTexture, 0);\n\n\t\t\tconst webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\n\n\t\t\tif (renderTarget.depthTexture.format === DepthFormat) {\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n\t\t\t} else if (renderTarget.depthTexture.format === DepthStencilFormat) {\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown depthTexture format');\n\t\t\t}\n\t\t} // Setup GL resources for a non-texture depth buffer\n\n\n\t\tfunction setupDepthRenderbuffer(renderTarget) {\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\tconst isCube = renderTarget.isWebGLCubeRenderTarget === true;\n\n\t\t\tif (renderTarget.depthTexture) {\n\t\t\t\tif (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\n\t\t\t\tsetupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n\t\t\t} else {\n\t\t\t\tif (isCube) {\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[i]);\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget, false);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\n\t\t} // Set up GL resources for the render target\n\n\n\t\tfunction setupRenderTarget(renderTarget) {\n\t\t\tconst texture = renderTarget.texture;\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\trenderTarget.addEventListener('dispose', onRenderTargetDispose);\n\n\t\t\tif (renderTarget.isWebGLMultipleRenderTargets !== true) {\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\t\t\ttextureProperties.__version = texture.version;\n\t\t\t\tinfo.memory.textures++;\n\t\t\t}\n\n\t\t\tconst isCube = renderTarget.isWebGLCubeRenderTarget === true;\n\t\t\tconst isMultipleRenderTargets = renderTarget.isWebGLMultipleRenderTargets === true;\n\t\t\tconst isMultisample = renderTarget.isWebGLMultisampleRenderTarget === true;\n\t\t\tconst isRenderTarget3D = texture.isDataTexture3D || texture.isDataTexture2DArray;\n\t\t\tconst supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2; // Handles WebGL2 RGBFormat fallback - #18858\n\n\t\t\tif (isWebGL2 && texture.format === RGBFormat && (texture.type === FloatType || texture.type === HalfFloatType)) {\n\t\t\t\ttexture.format = RGBAFormat;\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.');\n\t\t\t} // Setup framebuffer\n\n\n\t\t\tif (isCube) {\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t\tif (isMultipleRenderTargets) {\n\t\t\t\t\tif (capabilities.drawBuffers) {\n\t\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\t\t\t\tconst attachmentProperties = properties.get(textures[i]);\n\n\t\t\t\t\t\t\tif (attachmentProperties.__webglTexture === undefined) {\n\t\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\t\t\t\t\t\t\t\tinfo.memory.textures++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.');\n\t\t\t\t\t}\n\t\t\t\t} else if (isMultisample) {\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer);\n\n\t\t\t\t\t\tconst glFormat = utils.convert(texture.format);\n\t\t\t\t\t\tconst glType = utils.convert(texture.type);\n\t\t\t\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\n\t\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer);\n\n\t\t\t\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n\n\t\t\t\t\t\tif (renderTarget.depthBuffer) {\n\t\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // Setup color buffer\n\n\n\t\t\tif (isCube) {\n\t\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n\t\t\t\tsetTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\n\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n\t\t\t\t}\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t\tgenerateMipmap(_gl.TEXTURE_CUBE_MAP, texture, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n\t\t\t} else if (isMultipleRenderTargets) {\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\t\tconst attachment = textures[i];\n\t\t\t\t\tconst attachmentProperties = properties.get(attachment);\n\t\t\t\t\tstate.bindTexture(_gl.TEXTURE_2D, attachmentProperties.__webglTexture);\n\t\t\t\t\tsetTextureParameters(_gl.TEXTURE_2D, attachment, supportsMips);\n\t\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D);\n\n\t\t\t\t\tif (textureNeedsGenerateMipmaps(attachment, supportsMips)) {\n\t\t\t\t\t\tgenerateMipmap(_gl.TEXTURE_2D, attachment, renderTarget.width, renderTarget.height);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture(_gl.TEXTURE_2D, null);\n\t\t\t} else {\n\t\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\t\tif (isRenderTarget3D) {\n\t\t\t\t\t// Render targets containing layers, i.e: Texture 3D and 2d arrays\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\tconst isTexture3D = texture.isDataTexture3D;\n\t\t\t\t\t\tglTextureType = isTexture3D ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture(glTextureType, textureProperties.__webglTexture);\n\t\t\t\tsetTextureParameters(glTextureType, texture, supportsMips);\n\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType);\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t\tgenerateMipmap(glTextureType, texture, renderTarget.width, renderTarget.height, renderTarget.depth);\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture(glTextureType, null);\n\t\t\t} // Setup depth and stencil buffers\n\n\n\t\t\tif (renderTarget.depthBuffer) {\n\t\t\t\tsetupDepthRenderbuffer(renderTarget);\n\t\t\t}\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap(renderTarget) {\n\t\t\tconst supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2;\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [renderTarget.texture];\n\n\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\tconst texture = textures[i];\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\n\t\t\t\t\tconst webglTexture = properties.get(texture).__webglTexture;\n\n\t\t\t\t\tstate.bindTexture(target, webglTexture);\n\t\t\t\t\tgenerateMipmap(target, texture, renderTarget.width, renderTarget.height);\n\t\t\t\t\tstate.bindTexture(target, null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction updateMultisampleRenderTarget(renderTarget) {\n\t\t\tif (renderTarget.isWebGLMultisampleRenderTarget) {\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tconst width = renderTarget.width;\n\t\t\t\t\tconst height = renderTarget.height;\n\t\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\t\t\tif (renderTarget.depthBuffer) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif (renderTarget.stencilBuffer) mask |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\t\t\tstate.bindFramebuffer(_gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n\t\t\t\t\tstate.bindFramebuffer(_gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\n\t\t\t\t\t_gl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST);\n\n\t\t\t\t\tstate.bindFramebuffer(_gl.READ_FRAMEBUFFER, null);\n\t\t\t\t\tstate.bindFramebuffer(_gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction getRenderTargetSamples(renderTarget) {\n\t\t\treturn isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ? Math.min(maxSamples, renderTarget.samples) : 0;\n\t\t}\n\n\t\tfunction updateVideoTexture(texture) {\n\t\t\tconst frame = info.render.frame; // Check the last frame we updated the VideoTexture\n\n\t\t\tif (_videoTextures.get(texture) !== frame) {\n\t\t\t\t_videoTextures.set(texture, frame);\n\n\t\t\t\ttexture.update();\n\t\t\t}\n\t\t} // backwards compatibility\n\n\n\t\tlet warnedTexture2D = false;\n\t\tlet warnedTextureCube = false;\n\n\t\tfunction safeSetTexture2D(texture, slot) {\n\t\t\tif (texture && texture.isWebGLRenderTarget) {\n\t\t\t\tif (warnedTexture2D === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.');\n\t\t\t\t\twarnedTexture2D = true;\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\t\t\t}\n\n\t\t\tsetTexture2D(texture, slot);\n\t\t}\n\n\t\tfunction safeSetTextureCube(texture, slot) {\n\t\t\tif (texture && texture.isWebGLCubeRenderTarget) {\n\t\t\t\tif (warnedTextureCube === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.');\n\t\t\t\t\twarnedTextureCube = true;\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\t\t\t}\n\n\t\t\tsetTextureCube(texture, slot);\n\t\t} //\n\n\n\t\tthis.allocateTextureUnit = allocateTextureUnit;\n\t\tthis.resetTextureUnits = resetTextureUnits;\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTexture2DArray = setTexture2DArray;\n\t\tthis.setTexture3D = setTexture3D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\t\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\t\tthis.safeSetTexture2D = safeSetTexture2D;\n\t\tthis.safeSetTextureCube = safeSetTextureCube;\n\t}\n\n\tfunction WebGLUtils(gl, extensions, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction convert(p) {\n\t\t\tlet extension;\n\t\t\tif (p === UnsignedByteType) return gl.UNSIGNED_BYTE;\n\t\t\tif (p === UnsignedShort4444Type) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\tif (p === UnsignedShort5551Type) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\t\tif (p === UnsignedShort565Type) return gl.UNSIGNED_SHORT_5_6_5;\n\t\t\tif (p === ByteType) return gl.BYTE;\n\t\t\tif (p === ShortType) return gl.SHORT;\n\t\t\tif (p === UnsignedShortType) return gl.UNSIGNED_SHORT;\n\t\t\tif (p === IntType) return gl.INT;\n\t\t\tif (p === UnsignedIntType) return gl.UNSIGNED_INT;\n\t\t\tif (p === FloatType) return gl.FLOAT;\n\n\t\t\tif (p === HalfFloatType) {\n\t\t\t\tif (isWebGL2) return gl.HALF_FLOAT;\n\t\t\t\textension = extensions.get('OES_texture_half_float');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.HALF_FLOAT_OES;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === AlphaFormat) return gl.ALPHA;\n\t\t\tif (p === RGBFormat) return gl.RGB;\n\t\t\tif (p === RGBAFormat) return gl.RGBA;\n\t\t\tif (p === LuminanceFormat) return gl.LUMINANCE;\n\t\t\tif (p === LuminanceAlphaFormat) return gl.LUMINANCE_ALPHA;\n\t\t\tif (p === DepthFormat) return gl.DEPTH_COMPONENT;\n\t\t\tif (p === DepthStencilFormat) return gl.DEPTH_STENCIL;\n\t\t\tif (p === RedFormat) return gl.RED; // WebGL2 formats.\n\n\t\t\tif (p === RedIntegerFormat) return gl.RED_INTEGER;\n\t\t\tif (p === RGFormat) return gl.RG;\n\t\t\tif (p === RGIntegerFormat) return gl.RG_INTEGER;\n\t\t\tif (p === RGBIntegerFormat) return gl.RGB_INTEGER;\n\t\t\tif (p === RGBAIntegerFormat) return gl.RGBA_INTEGER;\n\n\t\t\tif (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t\tif (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGB_ETC1_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_etc1');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_etc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_ETC2_Format) return extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\t\tif (p === RGBA_ETC2_EAC_Format) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format || p === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format || p === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format || p === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format || p === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format || p === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_astc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\t// TODO Complete?\n\t\t\t\t\treturn p;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGBA_BPTC_Format) {\n\t\t\t\textension = extensions.get('EXT_texture_compression_bptc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\t// TODO Complete?\n\t\t\t\t\treturn p;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === UnsignedInt248Type) {\n\t\t\t\tif (isWebGL2) return gl.UNSIGNED_INT_24_8;\n\t\t\t\textension = extensions.get('WEBGL_depth_texture');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tconvert: convert\n\t\t};\n\t}\n\n\tclass ArrayCamera extends PerspectiveCamera {\n\t\tconstructor(array = []) {\n\t\t\tsuper();\n\t\t\tthis.cameras = array;\n\t\t}\n\n\t}\n\n\tArrayCamera.prototype.isArrayCamera = true;\n\n\tclass Group extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Group';\n\t\t}\n\n\t}\n\n\tGroup.prototype.isGroup = true;\n\n\tconst _moveEvent = {\n\t\ttype: 'move'\n\t};\n\n\tclass WebXRController {\n\t\tconstructor() {\n\t\t\tthis._targetRay = null;\n\t\t\tthis._grip = null;\n\t\t\tthis._hand = null;\n\t\t}\n\n\t\tgetHandSpace() {\n\t\t\tif (this._hand === null) {\n\t\t\t\tthis._hand = new Group();\n\t\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\t\tthis._hand.visible = false;\n\t\t\t\tthis._hand.joints = {};\n\t\t\t\tthis._hand.inputState = {\n\t\t\t\t\tpinching: false\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn this._hand;\n\t\t}\n\n\t\tgetTargetRaySpace() {\n\t\t\tif (this._targetRay === null) {\n\t\t\t\tthis._targetRay = new Group();\n\t\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\t\tthis._targetRay.visible = false;\n\t\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\t\t\t}\n\n\t\t\treturn this._targetRay;\n\t\t}\n\n\t\tgetGripSpace() {\n\t\t\tif (this._grip === null) {\n\t\t\t\tthis._grip = new Group();\n\t\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\t\tthis._grip.visible = false;\n\t\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\t\tthis._grip.angularVelocity = new Vector3();\n\t\t\t}\n\n\t\t\treturn this._grip;\n\t\t}\n\n\t\tdispatchEvent(event) {\n\t\t\tif (this._targetRay !== null) {\n\t\t\t\tthis._targetRay.dispatchEvent(event);\n\t\t\t}\n\n\t\t\tif (this._grip !== null) {\n\t\t\t\tthis._grip.dispatchEvent(event);\n\t\t\t}\n\n\t\t\tif (this._hand !== null) {\n\t\t\t\tthis._hand.dispatchEvent(event);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tdisconnect(inputSource) {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'disconnected',\n\t\t\t\tdata: inputSource\n\t\t\t});\n\n\t\t\tif (this._targetRay !== null) {\n\t\t\t\tthis._targetRay.visible = false;\n\t\t\t}\n\n\t\t\tif (this._grip !== null) {\n\t\t\t\tthis._grip.visible = false;\n\t\t\t}\n\n\t\t\tif (this._hand !== null) {\n\t\t\t\tthis._hand.visible = false;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tupdate(inputSource, frame, referenceSpace) {\n\t\t\tlet inputPose = null;\n\t\t\tlet gripPose = null;\n\t\t\tlet handPose = null;\n\t\t\tconst targetRay = this._targetRay;\n\t\t\tconst grip = this._grip;\n\t\t\tconst hand = this._hand;\n\n\t\t\tif (inputSource && frame.session.visibilityState !== 'visible-blurred') {\n\t\t\t\tif (targetRay !== null) {\n\t\t\t\t\tinputPose = frame.getPose(inputSource.targetRaySpace, referenceSpace);\n\n\t\t\t\t\tif (inputPose !== null) {\n\t\t\t\t\t\ttargetRay.matrix.fromArray(inputPose.transform.matrix);\n\t\t\t\t\t\ttargetRay.matrix.decompose(targetRay.position, targetRay.rotation, targetRay.scale);\n\n\t\t\t\t\t\tif (inputPose.linearVelocity) {\n\t\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\t\ttargetRay.linearVelocity.copy(inputPose.linearVelocity);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (inputPose.angularVelocity) {\n\t\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\t\ttargetRay.angularVelocity.copy(inputPose.angularVelocity);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.dispatchEvent(_moveEvent);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hand && inputSource.hand) {\n\t\t\t\t\thandPose = true;\n\n\t\t\t\t\tfor (const inputjoint of inputSource.hand.values()) {\n\t\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\t\tconst jointPose = frame.getJointPose(inputjoint, referenceSpace);\n\n\t\t\t\t\t\tif (hand.joints[inputjoint.jointName] === undefined) {\n\t\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\t\thand.joints[inputjoint.jointName] = joint; // ??\n\n\t\t\t\t\t\t\thand.add(joint);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst joint = hand.joints[inputjoint.jointName];\n\n\t\t\t\t\t\tif (jointPose !== null) {\n\t\t\t\t\t\t\tjoint.matrix.fromArray(jointPose.transform.matrix);\n\t\t\t\t\t\t\tjoint.matrix.decompose(joint.position, joint.rotation, joint.scale);\n\t\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tjoint.visible = jointPose !== null;\n\t\t\t\t\t} // Custom events\n\t\t\t\t\t// Check pinchz\n\n\n\t\t\t\t\tconst indexTip = hand.joints['index-finger-tip'];\n\t\t\t\t\tconst thumbTip = hand.joints['thumb-tip'];\n\t\t\t\t\tconst distance = indexTip.position.distanceTo(thumbTip.position);\n\t\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\t\tif (hand.inputState.pinching && distance > distanceToPinch + threshold) {\n\t\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\t\tthis.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (!hand.inputState.pinching && distance <= distanceToPinch - threshold) {\n\t\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\t\tthis.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (grip !== null && inputSource.gripSpace) {\n\t\t\t\t\t\tgripPose = frame.getPose(inputSource.gripSpace, referenceSpace);\n\n\t\t\t\t\t\tif (gripPose !== null) {\n\t\t\t\t\t\t\tgrip.matrix.fromArray(gripPose.transform.matrix);\n\t\t\t\t\t\t\tgrip.matrix.decompose(grip.position, grip.rotation, grip.scale);\n\n\t\t\t\t\t\t\tif (gripPose.linearVelocity) {\n\t\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\t\tgrip.linearVelocity.copy(gripPose.linearVelocity);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (gripPose.angularVelocity) {\n\t\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\t\tgrip.angularVelocity.copy(gripPose.angularVelocity);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (targetRay !== null) {\n\t\t\t\ttargetRay.visible = inputPose !== null;\n\t\t\t}\n\n\t\t\tif (grip !== null) {\n\t\t\t\tgrip.visible = gripPose !== null;\n\t\t\t}\n\n\t\t\tif (hand !== null) {\n\t\t\t\thand.visible = handPose !== null;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass WebXRManager extends EventDispatcher {\n\t\tconstructor(renderer, gl) {\n\t\t\tsuper();\n\t\t\tconst scope = this;\n\t\t\tconst state = renderer.state;\n\t\t\tlet session = null;\n\t\t\tlet framebufferScaleFactor = 1.0;\n\t\t\tlet referenceSpace = null;\n\t\t\tlet referenceSpaceType = 'local-floor';\n\t\t\tlet pose = null;\n\t\t\tlet glBinding = null;\n\t\t\tlet glFramebuffer = null;\n\t\t\tlet glProjLayer = null;\n\t\t\tconst controllers = [];\n\t\t\tconst inputSourcesMap = new Map(); //\n\n\t\t\tconst cameraL = new PerspectiveCamera();\n\t\t\tcameraL.layers.enable(1);\n\t\t\tcameraL.viewport = new Vector4();\n\t\t\tconst cameraR = new PerspectiveCamera();\n\t\t\tcameraR.layers.enable(2);\n\t\t\tcameraR.viewport = new Vector4();\n\t\t\tconst cameras = [cameraL, cameraR];\n\t\t\tconst cameraVR = new ArrayCamera();\n\t\t\tcameraVR.layers.enable(1);\n\t\t\tcameraVR.layers.enable(2);\n\t\t\tlet _currentDepthNear = null;\n\t\t\tlet _currentDepthFar = null; //\n\n\t\t\tthis.cameraAutoUpdate = true;\n\t\t\tthis.enabled = false;\n\t\t\tthis.isPresenting = false;\n\n\t\t\tthis.getController = function (index) {\n\t\t\t\tlet controller = controllers[index];\n\n\t\t\t\tif (controller === undefined) {\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[index] = controller;\n\t\t\t\t}\n\n\t\t\t\treturn controller.getTargetRaySpace();\n\t\t\t};\n\n\t\t\tthis.getControllerGrip = function (index) {\n\t\t\t\tlet controller = controllers[index];\n\n\t\t\t\tif (controller === undefined) {\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[index] = controller;\n\t\t\t\t}\n\n\t\t\t\treturn controller.getGripSpace();\n\t\t\t};\n\n\t\t\tthis.getHand = function (index) {\n\t\t\t\tlet controller = controllers[index];\n\n\t\t\t\tif (controller === undefined) {\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[index] = controller;\n\t\t\t\t}\n\n\t\t\t\treturn controller.getHandSpace();\n\t\t\t}; //\n\n\n\t\t\tfunction onSessionEvent(event) {\n\t\t\t\tconst controller = inputSourcesMap.get(event.inputSource);\n\n\t\t\t\tif (controller) {\n\t\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\t\ttype: event.type,\n\t\t\t\t\t\tdata: event.inputSource\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction onSessionEnd() {\n\t\t\t\tinputSourcesMap.forEach(function (controller, inputSource) {\n\t\t\t\t\tcontroller.disconnect(inputSource);\n\t\t\t\t});\n\t\t\t\tinputSourcesMap.clear();\n\t\t\t\t_currentDepthNear = null;\n\t\t\t\t_currentDepthFar = null; // restore framebuffer/rendering state\n\n\t\t\t\tstate.bindXRFramebuffer(null);\n\t\t\t\trenderer.setRenderTarget(renderer.getRenderTarget()); //\n\n\t\t\t\tanimation.stop();\n\t\t\t\tscope.isPresenting = false;\n\t\t\t\tscope.dispatchEvent({\n\t\t\t\t\ttype: 'sessionend'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.setFramebufferScaleFactor = function (value) {\n\t\t\t\tframebufferScaleFactor = value;\n\n\t\t\t\tif (scope.isPresenting === true) {\n\t\t\t\t\tconsole.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.setReferenceSpaceType = function (value) {\n\t\t\t\treferenceSpaceType = value;\n\n\t\t\t\tif (scope.isPresenting === true) {\n\t\t\t\t\tconsole.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.getReferenceSpace = function () {\n\t\t\t\treturn referenceSpace;\n\t\t\t};\n\n\t\t\tthis.getSession = function () {\n\t\t\t\treturn session;\n\t\t\t};\n\n\t\t\tthis.setSession = async function (value) {\n\t\t\t\tsession = value;\n\n\t\t\t\tif (session !== null) {\n\t\t\t\t\tsession.addEventListener('select', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('selectstart', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('selectend', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('squeeze', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('squeezestart', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('squeezeend', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('end', onSessionEnd);\n\t\t\t\t\tsession.addEventListener('inputsourceschange', onInputSourcesChange);\n\t\t\t\t\tconst attributes = gl.getContextAttributes();\n\n\t\t\t\t\tif (attributes.xrCompatible !== true) {\n\t\t\t\t\t\tawait gl.makeXRCompatible();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (session.renderState.layers === undefined) {\n\t\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t\t}; // eslint-disable-next-line no-undef\n\n\t\t\t\t\t\tconst baseLayer = new XRWebGLLayer(session, gl, layerInit);\n\t\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\t\tbaseLayer: baseLayer\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet depthFormat = 0;\n\n\t\t\t\t\t\tif (attributes.depth) {\n\t\t\t\t\t\t\tdepthFormat = attributes.stencil ? gl.DEPTH_STENCIL : gl.DEPTH_COMPONENT;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\t\tcolorFormat: attributes.alpha ? gl.RGBA : gl.RGB,\n\t\t\t\t\t\t\tdepthFormat: depthFormat,\n\t\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t\t}; // eslint-disable-next-line no-undef\n\n\t\t\t\t\t\tglBinding = new XRWebGLBinding(session, gl);\n\t\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer(projectionlayerInit);\n\t\t\t\t\t\tglFramebuffer = gl.createFramebuffer();\n\t\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\t\tlayers: [glProjLayer]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treferenceSpace = await session.requestReferenceSpace(referenceSpaceType);\n\t\t\t\t\tanimation.setContext(session);\n\t\t\t\t\tanimation.start();\n\t\t\t\t\tscope.isPresenting = true;\n\t\t\t\t\tscope.dispatchEvent({\n\t\t\t\t\t\ttype: 'sessionstart'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfunction onInputSourcesChange(event) {\n\t\t\t\tconst inputSources = session.inputSources; // Assign inputSources to available controllers\n\n\t\t\t\tfor (let i = 0; i < controllers.length; i++) {\n\t\t\t\t\tinputSourcesMap.set(inputSources[i], controllers[i]);\n\t\t\t\t} // Notify disconnected\n\n\n\t\t\t\tfor (let i = 0; i < event.removed.length; i++) {\n\t\t\t\t\tconst inputSource = event.removed[i];\n\t\t\t\t\tconst controller = inputSourcesMap.get(inputSource);\n\n\t\t\t\t\tif (controller) {\n\t\t\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'disconnected',\n\t\t\t\t\t\t\tdata: inputSource\n\t\t\t\t\t\t});\n\t\t\t\t\t\tinputSourcesMap.delete(inputSource);\n\t\t\t\t\t}\n\t\t\t\t} // Notify connected\n\n\n\t\t\t\tfor (let i = 0; i < event.added.length; i++) {\n\t\t\t\t\tconst inputSource = event.added[i];\n\t\t\t\t\tconst controller = inputSourcesMap.get(inputSource);\n\n\t\t\t\t\tif (controller) {\n\t\t\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'connected',\n\t\t\t\t\t\t\tdata: inputSource\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tconst cameraLPos = new Vector3();\n\t\t\tconst cameraRPos = new Vector3();\n\t\t\t/**\n\t\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t\t * the cameras' projection and world matrices have already been set.\n\t\t\t * And that near and far planes are identical for both cameras.\n\t\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t\t */\n\n\t\t\tfunction setProjectionFromUnion(camera, cameraL, cameraR) {\n\t\t\t\tcameraLPos.setFromMatrixPosition(cameraL.matrixWorld);\n\t\t\t\tcameraRPos.setFromMatrixPosition(cameraR.matrixWorld);\n\t\t\t\tconst ipd = cameraLPos.distanceTo(cameraRPos);\n\t\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\t\tconst projR = cameraR.projectionMatrix.elements; // VR systems will have identical far and near planes, and\n\t\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t\t// Use the left camera for these values.\n\n\t\t\t\tconst near = projL[14] / (projL[10] - 1);\n\t\t\t\tconst far = projL[14] / (projL[10] + 1);\n\t\t\t\tconst topFov = (projL[9] + 1) / projL[5];\n\t\t\t\tconst bottomFov = (projL[9] - 1) / projL[5];\n\t\t\t\tconst leftFov = (projL[8] - 1) / projL[0];\n\t\t\t\tconst rightFov = (projR[8] + 1) / projR[0];\n\t\t\t\tconst left = near * leftFov;\n\t\t\t\tconst right = near * rightFov; // Calculate the new camera's position offset from the\n\t\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\n\t\t\t\tconst zOffset = ipd / (-leftFov + rightFov);\n\t\t\t\tconst xOffset = zOffset * -leftFov; // TODO: Better way to apply this offset?\n\n\t\t\t\tcameraL.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);\n\t\t\t\tcamera.translateX(xOffset);\n\t\t\t\tcamera.translateZ(zOffset);\n\t\t\t\tcamera.matrixWorld.compose(camera.position, camera.quaternion, camera.scale);\n\t\t\t\tcamera.matrixWorldInverse.copy(camera.matrixWorld).invert(); // Find the union of the frustum values of the cameras and scale\n\t\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t\t// although must now be relative to the new union camera.\n\n\t\t\t\tconst near2 = near + zOffset;\n\t\t\t\tconst far2 = far + zOffset;\n\t\t\t\tconst left2 = left - xOffset;\n\t\t\t\tconst right2 = right + (ipd - xOffset);\n\t\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\t\t\t\tcamera.projectionMatrix.makePerspective(left2, right2, top2, bottom2, near2, far2);\n\t\t\t}\n\n\t\t\tfunction updateCamera(camera, parent) {\n\t\t\t\tif (parent === null) {\n\t\t\t\t\tcamera.matrixWorld.copy(camera.matrix);\n\t\t\t\t} else {\n\t\t\t\t\tcamera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\n\t\t\t\t}\n\n\t\t\t\tcamera.matrixWorldInverse.copy(camera.matrixWorld).invert();\n\t\t\t}\n\n\t\t\tthis.updateCamera = function (camera) {\n\t\t\t\tif (session === null) return;\n\t\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\t\tif (_currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far) {\n\t\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t\t});\n\t\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t\t_currentDepthFar = cameraVR.far;\n\t\t\t\t}\n\n\t\t\t\tconst parent = camera.parent;\n\t\t\t\tconst cameras = cameraVR.cameras;\n\t\t\t\tupdateCamera(cameraVR, parent);\n\n\t\t\t\tfor (let i = 0; i < cameras.length; i++) {\n\t\t\t\t\tupdateCamera(cameras[i], parent);\n\t\t\t\t}\n\n\t\t\t\tcameraVR.matrixWorld.decompose(cameraVR.position, cameraVR.quaternion, cameraVR.scale); // update user camera and its children\n\n\t\t\t\tcamera.position.copy(cameraVR.position);\n\t\t\t\tcamera.quaternion.copy(cameraVR.quaternion);\n\t\t\t\tcamera.scale.copy(cameraVR.scale);\n\t\t\t\tcamera.matrix.copy(cameraVR.matrix);\n\t\t\t\tcamera.matrixWorld.copy(cameraVR.matrixWorld);\n\t\t\t\tconst children = camera.children;\n\n\t\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tchildren[i].updateMatrixWorld(true);\n\t\t\t\t} // update projection matrix for proper view frustum culling\n\n\n\t\t\t\tif (cameras.length === 2) {\n\t\t\t\t\tsetProjectionFromUnion(cameraVR, cameraL, cameraR);\n\t\t\t\t} else {\n\t\t\t\t\t// assume single camera setup (AR)\n\t\t\t\t\tcameraVR.projectionMatrix.copy(cameraL.projectionMatrix);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.getCamera = function () {\n\t\t\t\treturn cameraVR;\n\t\t\t}; // Animation Loop\n\n\n\t\t\tlet onAnimationFrameCallback = null;\n\n\t\t\tfunction onAnimationFrame(time, frame) {\n\t\t\t\tpose = frame.getViewerPose(referenceSpace);\n\n\t\t\t\tif (pose !== null) {\n\t\t\t\t\tconst views = pose.views;\n\t\t\t\t\tconst baseLayer = session.renderState.baseLayer;\n\n\t\t\t\t\tif (session.renderState.layers === undefined) {\n\t\t\t\t\t\tstate.bindXRFramebuffer(baseLayer.framebuffer);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet cameraVRNeedsUpdate = false; // check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\t\tif (views.length !== cameraVR.cameras.length) {\n\t\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\t\tcameraVRNeedsUpdate = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < views.length; i++) {\n\t\t\t\t\t\tconst view = views[i];\n\t\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\t\tif (session.renderState.layers === undefined) {\n\t\t\t\t\t\t\tviewport = baseLayer.getViewport(view);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage(glProjLayer, view);\n\t\t\t\t\t\t\tstate.bindXRFramebuffer(glFramebuffer);\n\t\t\t\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glSubImage.colorTexture, 0);\n\n\t\t\t\t\t\t\tif (glSubImage.depthStencilTexture !== undefined) {\n\t\t\t\t\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, glSubImage.depthStencilTexture, 0);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tviewport = glSubImage.viewport;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst camera = cameras[i];\n\t\t\t\t\t\tcamera.matrix.fromArray(view.transform.matrix);\n\t\t\t\t\t\tcamera.projectionMatrix.fromArray(view.projectionMatrix);\n\t\t\t\t\t\tcamera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\n\n\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\tcameraVR.matrix.copy(camera.matrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (cameraVRNeedsUpdate === true) {\n\t\t\t\t\t\t\tcameraVR.cameras.push(camera);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} //\n\n\n\t\t\t\tconst inputSources = session.inputSources;\n\n\t\t\t\tfor (let i = 0; i < controllers.length; i++) {\n\t\t\t\t\tconst controller = controllers[i];\n\t\t\t\t\tconst inputSource = inputSources[i];\n\t\t\t\t\tcontroller.update(inputSource, frame, referenceSpace);\n\t\t\t\t}\n\n\t\t\t\tif (onAnimationFrameCallback) onAnimationFrameCallback(time, frame);\n\t\t\t}\n\n\t\t\tconst animation = new WebGLAnimation();\n\t\t\tanimation.setAnimationLoop(onAnimationFrame);\n\n\t\t\tthis.setAnimationLoop = function (callback) {\n\t\t\t\tonAnimationFrameCallback = callback;\n\t\t\t};\n\n\t\t\tthis.dispose = function () {};\n\t\t}\n\n\t}\n\n\tfunction WebGLMaterials(properties) {\n\t\tfunction refreshFogUniforms(uniforms, fog) {\n\t\t\tuniforms.fogColor.value.copy(fog.color);\n\n\t\t\tif (fog.isFog) {\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\t\t\t} else if (fog.isFogExp2) {\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshMaterialUniforms(uniforms, material, pixelRatio, height, transmissionRenderTarget) {\n\t\t\tif (material.isMeshBasicMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t} else if (material.isMeshLambertMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsLambert(uniforms, material);\n\t\t\t} else if (material.isMeshToonMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsToon(uniforms, material);\n\t\t\t} else if (material.isMeshPhongMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsPhong(uniforms, material);\n\t\t\t} else if (material.isMeshStandardMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\n\t\t\t\tif (material.isMeshPhysicalMaterial) {\n\t\t\t\t\trefreshUniformsPhysical(uniforms, material, transmissionRenderTarget);\n\t\t\t\t} else {\n\t\t\t\t\trefreshUniformsStandard(uniforms, material);\n\t\t\t\t}\n\t\t\t} else if (material.isMeshMatcapMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsMatcap(uniforms, material);\n\t\t\t} else if (material.isMeshDepthMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsDepth(uniforms, material);\n\t\t\t} else if (material.isMeshDistanceMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsDistance(uniforms, material);\n\t\t\t} else if (material.isMeshNormalMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsNormal(uniforms, material);\n\t\t\t} else if (material.isLineBasicMaterial) {\n\t\t\t\trefreshUniformsLine(uniforms, material);\n\n\t\t\t\tif (material.isLineDashedMaterial) {\n\t\t\t\t\trefreshUniformsDash(uniforms, material);\n\t\t\t\t}\n\t\t\t} else if (material.isPointsMaterial) {\n\t\t\t\trefreshUniformsPoints(uniforms, material, pixelRatio, height);\n\t\t\t} else if (material.isSpriteMaterial) {\n\t\t\t\trefreshUniformsSprites(uniforms, material);\n\t\t\t} else if (material.isShadowMaterial) {\n\t\t\t\tuniforms.color.value.copy(material.color);\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\t} else if (material.isShaderMaterial) {\n\t\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsCommon(uniforms, material) {\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tif (material.color) {\n\t\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\t}\n\n\t\t\tif (material.emissive) {\n\t\t\t\tuniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n\t\t\t}\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (material.specularMap) {\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\t}\n\n\t\t\tconst envMap = properties.get(material).envMap;\n\n\t\t\tif (envMap) {\n\t\t\t\tuniforms.envMap.value = envMap;\n\t\t\t\tuniforms.flipEnvMap.value = envMap.isCubeTexture && envMap._needsFlipEnvMap ? -1 : 1;\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\tconst maxMipLevel = properties.get(envMap).__maxMipLevel;\n\n\t\t\t\tif (maxMipLevel !== undefined) {\n\t\t\t\t\tuniforms.maxMipLevel.value = maxMipLevel;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (material.lightMap) {\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\t\t\t}\n\n\t\t\tif (material.aoMap) {\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. displacementMap map\n\t\t\t// 4. normal map\n\t\t\t// 5. bump map\n\t\t\t// 6. roughnessMap map\n\t\t\t// 7. metalnessMap map\n\t\t\t// 8. alphaMap map\n\t\t\t// 9. emissiveMap map\n\t\t\t// 10. clearcoat map\n\t\t\t// 11. clearcoat normal map\n\t\t\t// 12. clearcoat roughnessMap map\n\n\n\t\t\tlet uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.specularMap) {\n\t\t\t\tuvScaleMap = material.specularMap;\n\t\t\t} else if (material.displacementMap) {\n\t\t\t\tuvScaleMap = material.displacementMap;\n\t\t\t} else if (material.normalMap) {\n\t\t\t\tuvScaleMap = material.normalMap;\n\t\t\t} else if (material.bumpMap) {\n\t\t\t\tuvScaleMap = material.bumpMap;\n\t\t\t} else if (material.roughnessMap) {\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\t\t\t} else if (material.metalnessMap) {\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t} else if (material.emissiveMap) {\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\t\t\t} else if (material.clearcoatMap) {\n\t\t\t\tuvScaleMap = material.clearcoatMap;\n\t\t\t} else if (material.clearcoatNormalMap) {\n\t\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\t\t\t} else if (material.clearcoatRoughnessMap) {\n\t\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\t// backwards compatibility\n\t\t\t\tif (uvScaleMap.isWebGLRenderTarget) {\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\t\t\t\t}\n\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t} // uv repeat and offset setting priorities for uv2\n\t\t\t// 1. ao map\n\t\t\t// 2. light map\n\n\n\t\t\tlet uv2ScaleMap;\n\n\t\t\tif (material.aoMap) {\n\t\t\t\tuv2ScaleMap = material.aoMap;\n\t\t\t} else if (material.lightMap) {\n\t\t\t\tuv2ScaleMap = material.lightMap;\n\t\t\t}\n\n\t\t\tif (uv2ScaleMap !== undefined) {\n\t\t\t\t// backwards compatibility\n\t\t\t\tif (uv2ScaleMap.isWebGLRenderTarget) {\n\t\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\t\t\t\t}\n\n\t\t\t\tif (uv2ScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuv2ScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsLine(uniforms, material) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t}\n\n\t\tfunction refreshUniformsDash(uniforms, material) {\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\t\t}\n\n\t\tfunction refreshUniformsPoints(uniforms, material, pixelRatio, height) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * pixelRatio;\n\t\t\tuniforms.scale.value = height * 0.5;\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\n\t\t\tlet uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsSprites(uniforms, material) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.rotation.value = material.rotation;\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\n\t\t\tlet uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsLambert(uniforms, material) {\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsPhong(uniforms, material) {\n\t\t\tuniforms.specular.value.copy(material.specular);\n\t\t\tuniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsToon(uniforms, material) {\n\t\t\tif (material.gradientMap) {\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\t\t\t}\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsStandard(uniforms, material) {\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif (material.roughnessMap) {\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\t\t\t}\n\n\t\t\tif (material.metalnessMap) {\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\t\t\t}\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\n\t\t\tconst envMap = properties.get(material).envMap;\n\n\t\t\tif (envMap) {\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsPhysical(uniforms, material, transmissionRenderTarget) {\n\t\t\trefreshUniformsStandard(uniforms, material);\n\t\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\t\t\tif (material.sheen) uniforms.sheen.value.copy(material.sheen);\n\n\t\t\tif (material.clearcoatMap) {\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\t\t\t}\n\n\t\t\tif (material.clearcoatRoughnessMap) {\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\t\t\t}\n\n\t\t\tif (material.clearcoatNormalMap) {\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif (material.side === BackSide) {\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\n\t\t\tif (material.transmissionMap) {\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\t\t\t}\n\n\t\t\tif (material.transmission > 0.0) {\n\t\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\t\tuniforms.transmissionSamplerSize.value.set(transmissionRenderTarget.width, transmissionRenderTarget.height);\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif (material.thicknessMap) {\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy(material.attenuationColor);\n\t\t}\n\n\t\tfunction refreshUniformsMatcap(uniforms, material) {\n\t\t\tif (material.matcap) {\n\t\t\t\tuniforms.matcap.value = material.matcap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsDepth(uniforms, material) {\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsDistance(uniforms, material) {\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\n\t\t\tuniforms.referencePosition.value.copy(material.referencePosition);\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\t\tuniforms.farDistance.value = material.farDistance;\n\t\t}\n\n\t\tfunction refreshUniformsNormal(uniforms, material) {\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\trefreshFogUniforms: refreshFogUniforms,\n\t\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t\t};\n\t}\n\n\tfunction createCanvasElement() {\n\t\tconst canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n\t\tcanvas.style.display = 'block';\n\t\treturn canvas;\n\t}\n\n\tfunction WebGLRenderer(parameters = {}) {\n\t\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\t\t\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t\t\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t\t\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null; // render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = []; // public properties\n\n\t\tthis.domElement = _canvas; // Debug configuration container\n\n\t\tthis.debug = {\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true\n\t\t}; // clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true; // scene graph\n\n\t\tthis.sortObjects = true; // user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false; // physically based shading\n\n\t\tthis.gammaFactor = 2.0; // for backwards compatibility\n\n\t\tthis.outputEncoding = LinearEncoding; // physical lights\n\n\t\tthis.physicallyCorrectLights = false; // tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0; // internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false; // internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\n\t\tlet _currentMaterialId = -1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\n\t\tconst _currentScissor = new Vector4();\n\n\t\tlet _currentScissorTest = null; //\n\n\t\tlet _width = _canvas.width;\n\t\tlet _height = _canvas.height;\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4(0, 0, _width, _height);\n\n\t\tconst _scissor = new Vector4(0, 0, _width, _height);\n\n\t\tlet _scissorTest = false; //\n\n\t\tconst _currentDrawBuffers = []; // frustum\n\n\t\tconst _frustum = new Frustum(); // clipping\n\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false; // transmission\n\n\t\tlet _transmissionRenderTarget = null; // camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = {\n\t\t\tbackground: null,\n\t\t\tfog: null,\n\t\t\tenvironment: null,\n\t\t\toverrideMaterial: null,\n\t\t\tisScene: true\n\t\t};\n\n\t\tfunction getTargetPixelRatio() {\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\t\t} // initialize\n\n\n\t\tlet _gl = _context;\n\n\t\tfunction getContext(contextNames, contextAttributes) {\n\t\t\tfor (let i = 0; i < contextNames.length; i++) {\n\t\t\t\tconst contextName = contextNames[i];\n\n\t\t\t\tconst context = _canvas.getContext(contextName, contextAttributes);\n\n\t\t\t\tif (context !== null) return context;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\ttry {\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\t\tpowerPreference: _powerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t\t}; // event listeners must be registered before WebGL context is created, see #12753\n\n\t\t\t_canvas.addEventListener('webglcontextlost', onContextLost, false);\n\n\t\t\t_canvas.addEventListener('webglcontextrestored', onContextRestore, false);\n\n\t\t\tif (_gl === null) {\n\t\t\t\tconst contextNames = ['webgl2', 'webgl', 'experimental-webgl'];\n\n\t\t\t\tif (_this.isWebGL1Renderer === true) {\n\t\t\t\t\tcontextNames.shift();\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext(contextNames, contextAttributes);\n\n\t\t\t\tif (_gl === null) {\n\t\t\t\t\tif (getContext(contextNames)) {\n\t\t\t\t\t\tthrow new Error('Error creating WebGL context with your selected attributes.');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Error creating WebGL context.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n\t\t\tif (_gl.getShaderPrecisionFormat === undefined) {\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'rangeMin': 1,\n\t\t\t\t\t\t'rangeMax': 1,\n\t\t\t\t\t\t'precision': 1\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('THREE.WebGLRenderer: ' + error.message);\n\t\t\tthrow error;\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\t\tlet utils, bindingStates;\n\n\t\tfunction initGLContext() {\n\t\t\textensions = new WebGLExtensions(_gl);\n\t\t\tcapabilities = new WebGLCapabilities(_gl, extensions, parameters);\n\t\t\textensions.init(capabilities);\n\t\t\tutils = new WebGLUtils(_gl, extensions, capabilities);\n\t\t\tstate = new WebGLState(_gl, extensions, capabilities);\n\t\t\t_currentDrawBuffers[0] = _gl.BACK;\n\t\t\tinfo = new WebGLInfo(_gl);\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info);\n\t\t\tcubemaps = new WebGLCubeMaps(_this);\n\t\t\tattributes = new WebGLAttributes(_gl, capabilities);\n\t\t\tbindingStates = new WebGLBindingStates(_gl, extensions, attributes, capabilities);\n\t\t\tgeometries = new WebGLGeometries(_gl, attributes, info, bindingStates);\n\t\t\tobjects = new WebGLObjects(_gl, geometries, attributes, info);\n\t\t\tmorphtargets = new WebGLMorphtargets(_gl);\n\t\t\tclipping = new WebGLClipping(properties);\n\t\t\tprogramCache = new WebGLPrograms(_this, cubemaps, extensions, capabilities, bindingStates, clipping);\n\t\t\tmaterials = new WebGLMaterials(properties);\n\t\t\trenderLists = new WebGLRenderLists(properties);\n\t\t\trenderStates = new WebGLRenderStates(extensions, capabilities);\n\t\t\tbackground = new WebGLBackground(_this, cubemaps, state, objects, _premultipliedAlpha);\n\t\t\tshadowMap = new WebGLShadowMap(_this, objects, capabilities);\n\t\t\tbufferRenderer = new WebGLBufferRenderer(_gl, extensions, info, capabilities);\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, info, capabilities);\n\t\t\tinfo.programs = programCache.programs;\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\t\t}\n\n\t\tinitGLContext(); // xr\n\n\t\tconst xr = new WebXRManager(_this, _gl);\n\t\tthis.xr = xr; // API\n\n\t\tthis.getContext = function () {\n\t\t\treturn _gl;\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\t\t\treturn _gl.getContextAttributes();\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\t\t\tconst extension = extensions.get('WEBGL_lose_context');\n\t\t\tif (extension) extension.loseContext();\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\t\t\tconst extension = extensions.get('WEBGL_lose_context');\n\t\t\tif (extension) extension.restoreContext();\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\t\t\treturn _pixelRatio;\n\t\t};\n\n\t\tthis.setPixelRatio = function (value) {\n\t\t\tif (value === undefined) return;\n\t\t\t_pixelRatio = value;\n\t\t\tthis.setSize(_width, _height, false);\n\t\t};\n\n\t\tthis.getSize = function (target) {\n\t\t\treturn target.set(_width, _height);\n\t\t};\n\n\t\tthis.setSize = function (width, height, updateStyle) {\n\t\t\tif (xr.isPresenting) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\t\t\t_canvas.width = Math.floor(width * _pixelRatio);\n\t\t\t_canvas.height = Math.floor(height * _pixelRatio);\n\n\t\t\tif (updateStyle !== false) {\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\t\t\t}\n\n\t\t\tthis.setViewport(0, 0, width, height);\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function (target) {\n\t\t\treturn target.set(_width * _pixelRatio, _height * _pixelRatio).floor();\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function (width, height, pixelRatio) {\n\t\t\t_width = width;\n\t\t\t_height = height;\n\t\t\t_pixelRatio = pixelRatio;\n\t\t\t_canvas.width = Math.floor(width * pixelRatio);\n\t\t\t_canvas.height = Math.floor(height * pixelRatio);\n\t\t\tthis.setViewport(0, 0, width, height);\n\t\t};\n\n\t\tthis.getCurrentViewport = function (target) {\n\t\t\treturn target.copy(_currentViewport);\n\t\t};\n\n\t\tthis.getViewport = function (target) {\n\t\t\treturn target.copy(_viewport);\n\t\t};\n\n\t\tthis.setViewport = function (x, y, width, height) {\n\t\t\tif (x.isVector4) {\n\t\t\t\t_viewport.set(x.x, x.y, x.z, x.w);\n\t\t\t} else {\n\t\t\t\t_viewport.set(x, y, width, height);\n\t\t\t}\n\n\t\t\tstate.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());\n\t\t};\n\n\t\tthis.getScissor = function (target) {\n\t\t\treturn target.copy(_scissor);\n\t\t};\n\n\t\tthis.setScissor = function (x, y, width, height) {\n\t\t\tif (x.isVector4) {\n\t\t\t\t_scissor.set(x.x, x.y, x.z, x.w);\n\t\t\t} else {\n\t\t\t\t_scissor.set(x, y, width, height);\n\t\t\t}\n\n\t\t\tstate.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\t\t\treturn _scissorTest;\n\t\t};\n\n\t\tthis.setScissorTest = function (boolean) {\n\t\t\tstate.setScissorTest(_scissorTest = boolean);\n\t\t};\n\n\t\tthis.setOpaqueSort = function (method) {\n\t\t\t_opaqueSort = method;\n\t\t};\n\n\t\tthis.setTransparentSort = function (method) {\n\t\t\t_transparentSort = method;\n\t\t}; // Clearing\n\n\n\t\tthis.getClearColor = function (target) {\n\t\t\treturn target.copy(background.getClearColor());\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\t\t\tbackground.setClearColor.apply(background, arguments);\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\t\t\treturn background.getClearAlpha();\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\t\t\tbackground.setClearAlpha.apply(background, arguments);\n\t\t};\n\n\t\tthis.clear = function (color, depth, stencil) {\n\t\t\tlet bits = 0;\n\t\t\tif (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\n\t\t\tif (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear(bits);\n\t\t};\n\n\t\tthis.clearColor = function () {\n\t\t\tthis.clear(true, false, false);\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\t\t\tthis.clear(false, true, false);\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\t\t\tthis.clear(false, false, true);\n\t\t}; //\n\n\n\t\tthis.dispose = function () {\n\t\t\t_canvas.removeEventListener('webglcontextlost', onContextLost, false);\n\n\t\t\t_canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\txr.dispose();\n\t\t\txr.removeEventListener('sessionstart', onXRSessionStart);\n\t\t\txr.removeEventListener('sessionend', onXRSessionEnd);\n\n\t\t\tif (_transmissionRenderTarget) {\n\t\t\t\t_transmissionRenderTarget.dispose();\n\n\t\t\t\t_transmissionRenderTarget = null;\n\t\t\t}\n\n\t\t\tanimation.stop();\n\t\t}; // Events\n\n\n\t\tfunction onContextLost(event) {\n\t\t\tevent.preventDefault();\n\t\t\tconsole.log('THREE.WebGLRenderer: Context Lost.');\n\t\t\t_isContextLost = true;\n\t\t}\n\n\t\tfunction onContextRestore()\n\t\t/* event */\n\t\t{\n\t\t\tconsole.log('THREE.WebGLRenderer: Context Restored.');\n\t\t\t_isContextLost = false;\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\t\t\tinitGLContext();\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\t\t}\n\n\t\tfunction onMaterialDispose(event) {\n\t\t\tconst material = event.target;\n\t\t\tmaterial.removeEventListener('dispose', onMaterialDispose);\n\t\t\tdeallocateMaterial(material);\n\t\t} // Buffer deallocation\n\n\n\t\tfunction deallocateMaterial(material) {\n\t\t\treleaseMaterialProgramReferences(material);\n\t\t\tproperties.remove(material);\n\t\t}\n\n\t\tfunction releaseMaterialProgramReferences(material) {\n\t\t\tconst programs = properties.get(material).programs;\n\n\t\t\tif (programs !== undefined) {\n\t\t\t\tprograms.forEach(function (program) {\n\t\t\t\t\tprogramCache.releaseProgram(program);\n\t\t\t\t});\n\t\t\t}\n\t\t} // Buffer rendering\n\n\n\t\tfunction renderObjectImmediate(object, program) {\n\t\t\tobject.render(function (object) {\n\t\t\t\t_this.renderBufferImmediate(object, program);\n\t\t\t});\n\t\t}\n\n\t\tthis.renderBufferImmediate = function (object, program) {\n\t\t\tbindingStates.initAttributes();\n\t\t\tconst buffers = properties.get(object);\n\t\t\tif (object.hasPositions && !buffers.position) buffers.position = _gl.createBuffer();\n\t\t\tif (object.hasNormals && !buffers.normal) buffers.normal = _gl.createBuffer();\n\t\t\tif (object.hasUvs && !buffers.uv) buffers.uv = _gl.createBuffer();\n\t\t\tif (object.hasColors && !buffers.color) buffers.color = _gl.createBuffer();\n\t\t\tconst programAttributes = program.getAttributes();\n\n\t\t\tif (object.hasPositions) {\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.position);\n\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW);\n\n\t\t\t\tbindingStates.enableAttribute(programAttributes.position);\n\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.position, 3, _gl.FLOAT, false, 0, 0);\n\t\t\t}\n\n\t\t\tif (object.hasNormals) {\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.normal);\n\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW);\n\n\t\t\t\tbindingStates.enableAttribute(programAttributes.normal);\n\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.normal, 3, _gl.FLOAT, false, 0, 0);\n\t\t\t}\n\n\t\t\tif (object.hasUvs) {\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.uv);\n\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW);\n\n\t\t\t\tbindingStates.enableAttribute(programAttributes.uv);\n\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.uv, 2, _gl.FLOAT, false, 0, 0);\n\t\t\t}\n\n\t\t\tif (object.hasColors) {\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.color);\n\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW);\n\n\t\t\t\tbindingStates.enableAttribute(programAttributes.color);\n\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.color, 3, _gl.FLOAT, false, 0, 0);\n\t\t\t}\n\n\t\t\tbindingStates.disableUnusedAttributes();\n\n\t\t\t_gl.drawArrays(_gl.TRIANGLES, 0, object.count);\n\n\t\t\tobject.count = 0;\n\t\t};\n\n\t\tthis.renderBufferDirect = function (camera, scene, geometry, material, object, group) {\n\t\t\tif (scene === null) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = object.isMesh && object.matrixWorld.determinant() < 0;\n\t\t\tconst program = setProgram(camera, scene, material, object);\n\t\t\tstate.setMaterial(material, frontFaceCW); //\n\n\t\t\tlet index = geometry.index;\n\t\t\tconst position = geometry.attributes.position; //\n\n\t\t\tif (index === null) {\n\t\t\t\tif (position === undefined || position.count === 0) return;\n\t\t\t} else if (index.count === 0) {\n\t\t\t\treturn;\n\t\t\t} //\n\n\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif (material.wireframe === true) {\n\t\t\t\tindex = geometries.getWireframeAttribute(geometry);\n\t\t\t\trangeFactor = 2;\n\t\t\t}\n\n\t\t\tif (material.morphTargets || material.morphNormals) {\n\t\t\t\tmorphtargets.update(object, geometry, material, program);\n\t\t\t}\n\n\t\t\tbindingStates.setup(object, material, program, geometry, index);\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif (index !== null) {\n\t\t\t\tattribute = attributes.get(index);\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex(attribute);\n\t\t\t} //\n\n\n\t\t\tconst dataCount = index !== null ? index.count : position.count;\n\t\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\t\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\t\t\tconst drawStart = Math.max(rangeStart, groupStart);\n\t\t\tconst drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n\t\t\tconst drawCount = Math.max(0, drawEnd - drawStart + 1);\n\t\t\tif (drawCount === 0) return; //\n\n\t\t\tif (object.isMesh) {\n\t\t\t\tif (material.wireframe === true) {\n\t\t\t\t\tstate.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n\t\t\t\t\trenderer.setMode(_gl.LINES);\n\t\t\t\t} else {\n\t\t\t\t\trenderer.setMode(_gl.TRIANGLES);\n\t\t\t\t}\n\t\t\t} else if (object.isLine) {\n\t\t\t\tlet lineWidth = material.linewidth;\n\t\t\t\tif (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth(lineWidth * getTargetPixelRatio());\n\n\t\t\t\tif (object.isLineSegments) {\n\t\t\t\t\trenderer.setMode(_gl.LINES);\n\t\t\t\t} else if (object.isLineLoop) {\n\t\t\t\t\trenderer.setMode(_gl.LINE_LOOP);\n\t\t\t\t} else {\n\t\t\t\t\trenderer.setMode(_gl.LINE_STRIP);\n\t\t\t\t}\n\t\t\t} else if (object.isPoints) {\n\t\t\t\trenderer.setMode(_gl.POINTS);\n\t\t\t} else if (object.isSprite) {\n\t\t\t\trenderer.setMode(_gl.TRIANGLES);\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh) {\n\t\t\t\trenderer.renderInstances(drawStart, drawCount, object.count);\n\t\t\t} else if (geometry.isInstancedBufferGeometry) {\n\t\t\t\tconst instanceCount = Math.min(geometry.instanceCount, geometry._maxInstanceCount);\n\t\t\t\trenderer.renderInstances(drawStart, drawCount, instanceCount);\n\t\t\t} else {\n\t\t\t\trenderer.render(drawStart, drawCount);\n\t\t\t}\n\t\t}; // Compile\n\n\n\t\tthis.compile = function (scene, camera) {\n\t\t\tcurrentRenderState = renderStates.get(scene);\n\t\t\tcurrentRenderState.init();\n\t\t\tscene.traverseVisible(function (object) {\n\t\t\t\tif (object.isLight && object.layers.test(camera.layers)) {\n\t\t\t\t\tcurrentRenderState.pushLight(object);\n\n\t\t\t\t\tif (object.castShadow) {\n\t\t\t\t\t\tcurrentRenderState.pushShadow(object);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tcurrentRenderState.setupLights();\n\t\t\tscene.traverse(function (object) {\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif (material) {\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (let i = 0; i < material.length; i++) {\n\t\t\t\t\t\t\tconst material2 = material[i];\n\t\t\t\t\t\t\tgetProgram(material2, scene, object);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgetProgram(material, scene, object);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}; // Animation Loop\n\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame(time) {\n\t\t\tif (onAnimationFrameCallback) onAnimationFrameCallback(time);\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\t\t\tanimation.stop();\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\t\t\tanimation.start();\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop(onAnimationFrame);\n\t\tif (typeof window !== 'undefined') animation.setContext(window);\n\n\t\tthis.setAnimationLoop = function (callback) {\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop(callback);\n\t\t\tcallback === null ? animation.stop() : animation.start();\n\t\t};\n\n\t\txr.addEventListener('sessionstart', onXRSessionStart);\n\t\txr.addEventListener('sessionend', onXRSessionEnd); // Rendering\n\n\t\tthis.render = function (scene, camera) {\n\t\t\tif (camera !== undefined && camera.isCamera !== true) {\n\t\t\t\tconsole.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_isContextLost === true) return; // update scene graph\n\n\t\t\tif (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n\t\t\tif (camera.parent === null) camera.updateMatrixWorld();\n\n\t\t\tif (xr.enabled === true && xr.isPresenting === true) {\n\t\t\t\tif (xr.cameraAutoUpdate === true) xr.updateCamera(camera);\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\t\t\t} //\n\n\n\t\t\tif (scene.isScene === true) scene.onBeforeRender(_this, scene, camera, _currentRenderTarget);\n\t\t\tcurrentRenderState = renderStates.get(scene, renderStateStack.length);\n\t\t\tcurrentRenderState.init();\n\t\t\trenderStateStack.push(currentRenderState);\n\n\t\t\t_projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n\t\t\t_frustum.setFromProjectionMatrix(_projScreenMatrix);\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n\t\t\tcurrentRenderList = renderLists.get(scene, renderListStack.length);\n\t\t\tcurrentRenderList.init();\n\t\t\trenderListStack.push(currentRenderList);\n\t\t\tprojectObject(scene, camera, 0, _this.sortObjects);\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif (_this.sortObjects === true) {\n\t\t\t\tcurrentRenderList.sort(_opaqueSort, _transparentSort);\n\t\t\t} //\n\n\n\t\t\tif (_clippingEnabled === true) clipping.beginShadows();\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\t\t\tshadowMap.render(shadowsArray, scene, camera);\n\t\t\tcurrentRenderState.setupLights();\n\t\t\tcurrentRenderState.setupLightsView(camera);\n\t\t\tif (_clippingEnabled === true) clipping.endShadows(); //\n\n\t\t\tif (this.info.autoReset === true) this.info.reset(); //\n\n\t\t\tbackground.render(currentRenderList, scene); // render scene\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\t\t\tif (opaqueObjects.length > 0) renderObjects(opaqueObjects, scene, camera);\n\t\t\tif (transmissiveObjects.length > 0) renderTransmissiveObjects(opaqueObjects, transmissiveObjects, scene, camera);\n\t\t\tif (transparentObjects.length > 0) renderObjects(transparentObjects, scene, camera); //\n\n\t\t\tif (_currentRenderTarget !== null) {\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\t\t\t\ttextures.updateMultisampleRenderTarget(_currentRenderTarget); // Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap(_currentRenderTarget);\n\t\t\t} //\n\n\n\t\t\tif (scene.isScene === true) scene.onAfterRender(_this, scene, camera); // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest(true);\n\t\t\tstate.buffers.depth.setMask(true);\n\t\t\tstate.buffers.color.setMask(true);\n\t\t\tstate.setPolygonOffset(false); // _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = -1;\n\t\t\t_currentCamera = null;\n\t\t\trenderStateStack.pop();\n\n\t\t\tif (renderStateStack.length > 0) {\n\t\t\t\tcurrentRenderState = renderStateStack[renderStateStack.length - 1];\n\t\t\t} else {\n\t\t\t\tcurrentRenderState = null;\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif (renderListStack.length > 0) {\n\t\t\t\tcurrentRenderList = renderListStack[renderListStack.length - 1];\n\t\t\t} else {\n\t\t\t\tcurrentRenderList = null;\n\t\t\t}\n\t\t};\n\n\t\tfunction projectObject(object, camera, groupOrder, sortObjects) {\n\t\t\tif (object.visible === false) return;\n\t\t\tconst visible = object.layers.test(camera.layers);\n\n\t\t\tif (visible) {\n\t\t\t\tif (object.isGroup) {\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\t\t\t\t} else if (object.isLOD) {\n\t\t\t\t\tif (object.autoUpdate === true) object.update(camera);\n\t\t\t\t} else if (object.isLight) {\n\t\t\t\t\tcurrentRenderState.pushLight(object);\n\n\t\t\t\t\tif (object.castShadow) {\n\t\t\t\t\t\tcurrentRenderState.pushShadow(object);\n\t\t\t\t\t}\n\t\t\t\t} else if (object.isSprite) {\n\t\t\t\t\tif (!object.frustumCulled || _frustum.intersectsSprite(object)) {\n\t\t\t\t\t\tif (sortObjects) {\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update(object);\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif (material.visible) {\n\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (object.isImmediateRenderObject) {\n\t\t\t\t\tif (sortObjects) {\n\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentRenderList.push(object, null, object.material, groupOrder, _vector3.z, null);\n\t\t\t\t} else if (object.isMesh || object.isLine || object.isPoints) {\n\t\t\t\t\tif (object.isSkinnedMesh) {\n\t\t\t\t\t\t// update skeleton only once in a frame\n\t\t\t\t\t\tif (object.skeleton.frame !== info.render.frame) {\n\t\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!object.frustumCulled || _frustum.intersectsObject(object)) {\n\t\t\t\t\t\tif (sortObjects) {\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update(object);\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\n\t\t\t\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\n\t\t\t\t\t\t\t\tif (groupMaterial && groupMaterial.visible) {\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, groupMaterial, groupOrder, _vector3.z, group);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (material.visible) {\n\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tprojectObject(children[i], camera, groupOrder, sortObjects);\n\t\t\t}\n\t\t}\n\n\t\tfunction renderTransmissiveObjects(opaqueObjects, transmissiveObjects, scene, camera) {\n\t\t\tif (_transmissionRenderTarget === null) {\n\t\t\t\tconst needsAntialias = _antialias === true && capabilities.isWebGL2 === true;\n\t\t\t\tconst renderTargetType = needsAntialias ? WebGLMultisampleRenderTarget : WebGLRenderTarget;\n\t\t\t\t_transmissionRenderTarget = new renderTargetType(1024, 1024, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: utils.convert(HalfFloatType) !== null ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\t\twrapS: ClampToEdgeWrapping,\n\t\t\t\t\twrapT: ClampToEdgeWrapping\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\n\t\t\t_this.setRenderTarget(_transmissionRenderTarget);\n\n\t\t\t_this.clear(); // Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\n\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\t\t\trenderObjects(opaqueObjects, scene, camera);\n\t\t\t_this.toneMapping = currentToneMapping;\n\t\t\ttextures.updateMultisampleRenderTarget(_transmissionRenderTarget);\n\t\t\ttextures.updateRenderTargetMipmap(_transmissionRenderTarget);\n\n\t\t\t_this.setRenderTarget(currentRenderTarget);\n\n\t\t\trenderObjects(transmissiveObjects, scene, camera);\n\t\t}\n\n\t\tfunction renderObjects(renderList, scene, camera) {\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor (let i = 0, l = renderList.length; i < l; i++) {\n\t\t\t\tconst renderItem = renderList[i];\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif (camera.isArrayCamera) {\n\t\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\t\tfor (let j = 0, jl = cameras.length; j < jl; j++) {\n\t\t\t\t\t\tconst camera2 = cameras[j];\n\n\t\t\t\t\t\tif (object.layers.test(camera2.layers)) {\n\t\t\t\t\t\t\tstate.viewport(_currentViewport.copy(camera2.viewport));\n\t\t\t\t\t\t\tcurrentRenderState.setupLightsView(camera2);\n\t\t\t\t\t\t\trenderObject(object, scene, camera2, geometry, material, group);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trenderObject(object, scene, camera, geometry, material, group);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction renderObject(object, scene, camera, geometry, material, group) {\n\t\t\tobject.onBeforeRender(_this, scene, camera, geometry, material, group);\n\t\t\tobject.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n\t\t\tobject.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\n\t\t\tif (object.isImmediateRenderObject) {\n\t\t\t\tconst program = setProgram(camera, scene, material, object);\n\t\t\t\tstate.setMaterial(material);\n\t\t\t\tbindingStates.reset();\n\t\t\t\trenderObjectImmediate(object, program);\n\t\t\t} else {\n\t\t\t\tif (material.transparent === true && material.side === DoubleSide) {\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\n\t\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\n\t\t\t\t\tmaterial.side = DoubleSide;\n\t\t\t\t} else {\n\t\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tobject.onAfterRender(_this, scene, camera, geometry, material, group);\n\t\t}\n\n\t\tfunction getProgram(material, scene, object) {\n\t\t\tif (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get(material);\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\t\t\tconst lightsStateVersion = lights.state.version;\n\t\t\tconst parameters = programCache.getParameters(material, lights.state, shadowsArray, scene, object);\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey(parameters);\n\t\t\tlet programs = materialProperties.programs; // always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = cubemaps.get(material.envMap || materialProperties.environment);\n\n\t\t\tif (programs === undefined) {\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener('dispose', onMaterialDispose);\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\t\t\t}\n\n\t\t\tlet program = programs.get(programCacheKey);\n\n\t\t\tif (program !== undefined) {\n\t\t\t\t// early out if program and light state is identical\n\t\t\t\tif (materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion) {\n\t\t\t\t\tupdateCommonMaterialProperties(material, parameters);\n\t\t\t\t\treturn program;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tparameters.uniforms = programCache.getUniforms(material);\n\t\t\t\tmaterial.onBuild(parameters, _this);\n\t\t\t\tmaterial.onBeforeCompile(parameters, _this);\n\t\t\t\tprogram = programCache.acquireProgram(parameters, programCacheKey);\n\t\t\t\tprograms.set(programCacheKey, program);\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties(material, parameters); // store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights(material);\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif (materialProperties.needsLights) {\n\t\t\t\t// wire up the material to this renderer's lighting state\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\n\t\t\t}\n\n\t\t\tconst progUniforms = program.getUniforms();\n\t\t\tconst uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\t\t\treturn program;\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties(material, parameters) {\n\t\t\tconst materialProperties = properties.get(material);\n\t\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t}\n\n\t\tfunction setProgram(camera, scene, material, object) {\n\t\t\tif (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst encoding = _currentRenderTarget === null ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\t\t\tconst envMap = cubemaps.get(material.envMap || environment);\n\t\t\tconst vertexAlphas = material.vertexColors === true && object.geometry && object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4;\n\t\t\tconst materialProperties = properties.get(material);\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif (_clippingEnabled === true) {\n\t\t\t\tif (_localClippingEnabled === true || camera !== _currentCamera) {\n\t\t\t\t\tconst useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\n\t\t\t\t\tclipping.setState(material, camera, useCache);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif (material.version === materialProperties.__version) {\n\t\t\t\tif (materialProperties.needsLights && materialProperties.lightsStateVersion !== lights.state.version) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.outputEncoding !== encoding) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (object.isInstancedMesh && materialProperties.instancing === false) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (!object.isInstancedMesh && materialProperties.instancing === true) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (object.isSkinnedMesh && materialProperties.skinning === false) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (!object.isSkinnedMesh && materialProperties.skinning === true) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.envMap !== envMap) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (material.fog && materialProperties.fog !== fog) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== clipping.numPlanes || materialProperties.numIntersection !== clipping.numIntersection)) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.vertexAlphas !== vertexAlphas) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\t\t\t} //\n\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif (needsProgramChange === true) {\n\t\t\t\tprogram = getProgram(material, scene, object);\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif (state.useProgram(program.program)) {\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\t\t\t}\n\n\t\t\tif (material.id !== _currentMaterialId) {\n\t\t\t\t_currentMaterialId = material.id;\n\t\t\t\trefreshMaterial = true;\n\t\t\t}\n\n\t\t\tif (refreshProgram || _currentCamera !== camera) {\n\t\t\t\tp_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\n\n\t\t\t\tif (capabilities.logarithmicDepthBuffer) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n\t\t\t\t}\n\n\t\t\t\tif (_currentCamera !== camera) {\n\t\t\t\t\t_currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true; // set to true on material change\n\n\t\t\t\t\trefreshLights = true; // remains set until update done\n\t\t\t\t} // load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\n\t\t\t\tif (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshStandardMaterial || material.envMap) {\n\t\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif (uCamPos !== undefined) {\n\t\t\t\t\t\tuCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'isOrthographic', camera.isOrthographicCamera === true);\n\t\t\t\t}\n\n\t\t\t\tif (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.isShadowMaterial || object.isSkinnedMesh) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n\t\t\t\t}\n\t\t\t} // skinning uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t// otherwise textures used for skinning can take over texture units reserved for other material textures\n\n\n\t\t\tif (object.isSkinnedMesh) {\n\t\t\t\tp_uniforms.setOptional(_gl, object, 'bindMatrix');\n\t\t\t\tp_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif (skeleton) {\n\t\t\t\t\tif (capabilities.floatVertexTextures) {\n\t\t\t\t\t\tif (skeleton.boneTexture === null) skeleton.computeBoneTexture();\n\t\t\t\t\t\tp_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture, textures);\n\t\t\t\t\t\tp_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow) {\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue(_gl, 'receiveShadow', object.receiveShadow);\n\t\t\t}\n\n\t\t\tif (refreshMaterial) {\n\t\t\t\tp_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\n\n\t\t\t\tif (materialProperties.needsLights) {\n\t\t\t\t\t// the current material requires lighting info\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n\t\t\t\t} // refresh uniforms common to several materials\n\n\n\t\t\t\tif (fog && material.fog) {\n\t\t\t\t\tmaterials.refreshFogUniforms(m_uniforms, fog);\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms(m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget);\n\t\t\t\tWebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n\t\t\t}\n\n\t\t\tif (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\n\t\t\t\tWebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\t\t\t}\n\n\t\t\tif (material.isSpriteMaterial) {\n\t\t\t\tp_uniforms.setValue(_gl, 'center', object.center);\n\t\t\t} // common matrices\n\n\n\t\t\tp_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\n\t\t\tp_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\n\t\t\tp_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\n\t\t\treturn program;\n\t\t} // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n\t\tfunction markUniformsLightsNeedsUpdate(uniforms, value) {\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\t\t}\n\n\t\tfunction materialNeedsLights(material) {\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.isShadowMaterial || material.isShaderMaterial && material.lights === true;\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\t\t\treturn _currentActiveCubeFace;\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\t\t\treturn _currentActiveMipmapLevel;\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\t\t\treturn _currentRenderTarget;\n\t\t};\n\n\t\tthis.setRenderTarget = function (renderTarget, activeCubeFace = 0, activeMipmapLevel = 0) {\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tif (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n\t\t\t\ttextures.setupRenderTarget(renderTarget);\n\t\t\t}\n\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif (renderTarget) {\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif (texture.isDataTexture3D || texture.isDataTexture2DArray) {\n\t\t\t\t\tisRenderTarget3D = true;\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n\t\t\t\tif (renderTarget.isWebGLCubeRenderTarget) {\n\t\t\t\t\tframebuffer = __webglFramebuffer[activeCubeFace];\n\t\t\t\t\tisCube = true;\n\t\t\t\t} else if (renderTarget.isWebGLMultisampleRenderTarget) {\n\t\t\t\t\tframebuffer = properties.get(renderTarget).__webglMultisampledFramebuffer;\n\t\t\t\t} else {\n\t\t\t\t\tframebuffer = __webglFramebuffer;\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy(renderTarget.viewport);\n\n\t\t\t\t_currentScissor.copy(renderTarget.scissor);\n\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\t\t\t} else {\n\t\t\t\t_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();\n\n\t\t\t\t_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();\n\n\t\t\t\t_currentScissorTest = _scissorTest;\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\tif (framebufferBound && capabilities.drawBuffers) {\n\t\t\t\tlet needsUpdate = false;\n\n\t\t\t\tif (renderTarget) {\n\t\t\t\t\tif (renderTarget.isWebGLMultipleRenderTargets) {\n\t\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\t\tif (_currentDrawBuffers.length !== textures.length || _currentDrawBuffers[0] !== _gl.COLOR_ATTACHMENT0) {\n\t\t\t\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\t\t\t\t\t_currentDrawBuffers[i] = _gl.COLOR_ATTACHMENT0 + i;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_currentDrawBuffers.length = textures.length;\n\t\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (_currentDrawBuffers.length !== 1 || _currentDrawBuffers[0] !== _gl.COLOR_ATTACHMENT0) {\n\t\t\t\t\t\t\t_currentDrawBuffers[0] = _gl.COLOR_ATTACHMENT0;\n\t\t\t\t\t\t\t_currentDrawBuffers.length = 1;\n\t\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (_currentDrawBuffers.length !== 1 || _currentDrawBuffers[0] !== _gl.BACK) {\n\t\t\t\t\t\t_currentDrawBuffers[0] = _gl.BACK;\n\t\t\t\t\t\t_currentDrawBuffers.length = 1;\n\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (needsUpdate) {\n\t\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\t\t_gl.drawBuffers(_currentDrawBuffers);\n\t\t\t\t\t} else {\n\t\t\t\t\t\textensions.get('WEBGL_draw_buffers').drawBuffersWEBGL(_currentDrawBuffers);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.viewport(_currentViewport);\n\t\t\tstate.scissor(_currentScissor);\n\t\t\tstate.setScissorTest(_currentScissorTest);\n\n\t\t\tif (isCube) {\n\t\t\t\tconst textureProperties = properties.get(renderTarget.texture);\n\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel);\n\t\t\t} else if (isRenderTarget3D) {\n\t\t\t\tconst textureProperties = properties.get(renderTarget.texture);\n\t\t\t\tconst layer = activeCubeFace || 0;\n\n\t\t\t\t_gl.framebufferTextureLayer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer);\n\t\t\t}\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer, activeCubeFaceIndex) {\n\t\t\tif (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\n\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined) {\n\t\t\t\tframebuffer = framebuffer[activeCubeFaceIndex];\n\t\t\t}\n\n\t\t\tif (framebuffer) {\n\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif (textureFormat !== RGBAFormat && utils.convert(textureFormat) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = textureType === HalfFloatType && (extensions.has('EXT_color_buffer_half_float') || capabilities.isWebGL2 && extensions.has('EXT_color_buffer_float'));\n\n\t\t\t\t\tif (textureType !== UnsignedByteType && utils.convert(textureType) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t!(textureType === FloatType && (capabilities.isWebGL2 || extensions.has('OES_texture_float') || extensions.has('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t!halfFloatSupportedByExt) {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\t\t\t\t\t\tif (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n\t\t\t\t\t\t\t_gl.readPixels(x, y, width, height, utils.convert(textureFormat), utils.convert(textureType), buffer);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\t\t\t\t\tconst framebuffer = _currentRenderTarget !== null ? properties.get(_currentRenderTarget).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function (position, texture, level = 0) {\n\t\t\tconst levelScale = Math.pow(2, -level);\n\t\t\tconst width = Math.floor(texture.image.width * levelScale);\n\t\t\tconst height = Math.floor(texture.image.height * levelScale);\n\t\t\tlet glFormat = utils.convert(texture.format);\n\n\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1120100\n\t\t\t\t// Not needed in Chrome 93+\n\t\t\t\tif (glFormat === _gl.RGB) glFormat = _gl.RGB8;\n\t\t\t\tif (glFormat === _gl.RGBA) glFormat = _gl.RGBA8;\n\t\t\t}\n\n\t\t\ttextures.setTexture2D(texture, 0);\n\n\t\t\t_gl.copyTexImage2D(_gl.TEXTURE_2D, level, glFormat, position.x, position.y, width, height, 0);\n\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.copyTextureToTexture = function (position, srcTexture, dstTexture, level = 0) {\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert(dstTexture.format);\n\t\t\tconst glType = utils.convert(dstTexture.type);\n\t\t\ttextures.setTexture2D(dstTexture, 0); // As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\n\n\t\t\tif (srcTexture.isDataTexture) {\n\t\t\t\t_gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data);\n\t\t\t} else {\n\t\t\t\tif (srcTexture.isCompressedTexture) {\n\t\t\t\t\t_gl.compressedTexSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[0].width, srcTexture.mipmaps[0].height, glFormat, srcTexture.mipmaps[0].data);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image);\n\t\t\t\t}\n\t\t\t} // Generate mipmaps only when copying level 0\n\n\n\t\t\tif (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(_gl.TEXTURE_2D);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function (sourceBox, position, srcTexture, dstTexture, level = 0) {\n\t\t\tif (_this.isWebGL1Renderer) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert(dstTexture.format);\n\t\t\tconst glType = utils.convert(dstTexture.type);\n\t\t\tlet glTarget;\n\n\t\t\tif (dstTexture.isDataTexture3D) {\n\t\t\t\ttextures.setTexture3D(dstTexture, 0);\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\t\t\t} else if (dstTexture.isDataTexture2DArray) {\n\t\t\t\ttextures.setTexture2DArray(dstTexture, 0);\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\n\n\t\t\tconst unpackRowLen = _gl.getParameter(_gl.UNPACK_ROW_LENGTH);\n\n\t\t\tconst unpackImageHeight = _gl.getParameter(_gl.UNPACK_IMAGE_HEIGHT);\n\n\t\t\tconst unpackSkipPixels = _gl.getParameter(_gl.UNPACK_SKIP_PIXELS);\n\n\t\t\tconst unpackSkipRows = _gl.getParameter(_gl.UNPACK_SKIP_ROWS);\n\n\t\t\tconst unpackSkipImages = _gl.getParameter(_gl.UNPACK_SKIP_IMAGES);\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[0] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, image.width);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, image.height);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, sourceBox.min.x);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, sourceBox.min.y);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, sourceBox.min.z);\n\n\t\t\tif (srcTexture.isDataTexture || srcTexture.isDataTexture3D) {\n\t\t\t\t_gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data);\n\t\t\t} else {\n\t\t\t\tif (srcTexture.isCompressedTexture) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.');\n\n\t\t\t\t\t_gl.compressedTexSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, unpackRowLen);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, unpackSkipPixels);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, unpackSkipRows);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, unpackSkipImages); // Generate mipmaps only when copying level 0\n\n\n\t\t\tif (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(glTarget);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.initTexture = function (texture) {\n\t\t\ttextures.setTexture2D(texture, 0);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.resetState = function () {\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\t\t};\n\n\t\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n\t\t\t\tdetail: this\n\t\t\t})); // eslint-disable-line no-undef\n\n\t\t}\n\t}\n\n\tclass WebGL1Renderer extends WebGLRenderer {}\n\n\tWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\n\tclass FogExp2 {\n\t\tconstructor(color, density = 0.00025) {\n\t\t\tthis.name = '';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.density = density;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new FogExp2(this.color, this.density);\n\t\t}\n\n\t\ttoJSON()\n\t\t/* meta */\n\t\t{\n\t\t\treturn {\n\t\t\t\ttype: 'FogExp2',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tdensity: this.density\n\t\t\t};\n\t\t}\n\n\t}\n\n\tFogExp2.prototype.isFogExp2 = true;\n\n\tclass Fog {\n\t\tconstructor(color, near = 1, far = 1000) {\n\t\t\tthis.name = '';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Fog(this.color, this.near, this.far);\n\t\t}\n\n\t\ttoJSON()\n\t\t/* meta */\n\t\t{\n\t\t\treturn {\n\t\t\t\ttype: 'Fog',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tnear: this.near,\n\t\t\t\tfar: this.far\n\t\t\t};\n\t\t}\n\n\t}\n\n\tFog.prototype.isFog = true;\n\n\tclass Scene extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Scene';\n\t\t\tthis.background = null;\n\t\t\tthis.environment = null;\n\t\t\tthis.fog = null;\n\t\t\tthis.overrideMaterial = null;\n\t\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\t\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n\t\t\t\t\tdetail: this\n\t\t\t\t})); // eslint-disable-line no-undef\n\n\t\t\t}\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tif (source.background !== null) this.background = source.background.clone();\n\t\t\tif (source.environment !== null) this.environment = source.environment.clone();\n\t\t\tif (source.fog !== null) this.fog = source.fog.clone();\n\t\t\tif (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tif (this.fog !== null) data.object.fog = this.fog.toJSON();\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tScene.prototype.isScene = true;\n\n\tclass InterleavedBuffer {\n\t\tconstructor(array, stride) {\n\t\t\tthis.array = array;\n\t\t\tthis.stride = stride;\n\t\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\t\t\tthis.usage = StaticDrawUsage;\n\t\t\tthis.updateRange = {\n\t\t\t\toffset: 0,\n\t\t\t\tcount: -1\n\t\t\t};\n\t\t\tthis.version = 0;\n\t\t\tthis.uuid = generateUUID();\n\t\t}\n\n\t\tonUploadCallback() {}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t\tsetUsage(value) {\n\t\t\tthis.usage = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.array = new source.array.constructor(source.array);\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.usage = source.usage;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyAt(index1, attribute, index2) {\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor (let i = 0, l = this.stride; i < l; i++) {\n\t\t\t\tthis.array[index1 + i] = attribute.array[index2 + i];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(value, offset = 0) {\n\t\t\tthis.array.set(value, offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone(data) {\n\t\t\tif (data.arrayBuffers === undefined) {\n\t\t\t\tdata.arrayBuffers = {};\n\t\t\t}\n\n\t\t\tif (this.array.buffer._uuid === undefined) {\n\t\t\t\tthis.array.buffer._uuid = generateUUID();\n\t\t\t}\n\n\t\t\tif (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n\t\t\t\tdata.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer;\n\t\t\t}\n\n\t\t\tconst array = new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);\n\t\t\tconst ib = new this.constructor(array, this.stride);\n\t\t\tib.setUsage(this.usage);\n\t\t\treturn ib;\n\t\t}\n\n\t\tonUpload(callback) {\n\t\t\tthis.onUploadCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(data) {\n\t\t\tif (data.arrayBuffers === undefined) {\n\t\t\t\tdata.arrayBuffers = {};\n\t\t\t} // generate UUID for array buffer if necessary\n\n\n\t\t\tif (this.array.buffer._uuid === undefined) {\n\t\t\t\tthis.array.buffer._uuid = generateUUID();\n\t\t\t}\n\n\t\t\tif (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n\t\t\t\tdata.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer));\n\t\t\t} //\n\n\n\t\t\treturn {\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tstride: this.stride\n\t\t\t};\n\t\t}\n\n\t}\n\n\tInterleavedBuffer.prototype.isInterleavedBuffer = true;\n\n\tconst _vector$6 = /*@__PURE__*/new Vector3();\n\n\tclass InterleavedBufferAttribute {\n\t\tconstructor(interleavedBuffer, itemSize, offset, normalized = false) {\n\t\t\tthis.name = '';\n\t\t\tthis.data = interleavedBuffer;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.offset = offset;\n\t\t\tthis.normalized = normalized === true;\n\t\t}\n\n\t\tget count() {\n\t\t\treturn this.data.count;\n\t\t}\n\n\t\tget array() {\n\t\t\treturn this.data.array;\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tthis.data.needsUpdate = value;\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tfor (let i = 0, l = this.data.count; i < l; i++) {\n\t\t\t\t_vector$6.x = this.getX(i);\n\t\t\t\t_vector$6.y = this.getY(i);\n\t\t\t\t_vector$6.z = this.getZ(i);\n\n\t\t\t\t_vector$6.applyMatrix4(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyNormalMatrix(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$6.x = this.getX(i);\n\t\t\t\t_vector$6.y = this.getY(i);\n\t\t\t\t_vector$6.z = this.getZ(i);\n\n\t\t\t\t_vector$6.applyNormalMatrix(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttransformDirection(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$6.x = this.getX(i);\n\t\t\t\t_vector$6.y = this.getY(i);\n\t\t\t\t_vector$6.z = this.getZ(i);\n\n\t\t\t\t_vector$6.transformDirection(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(index, x) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset] = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(index, y) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetZ(index, z) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetW(index, w) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetX(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset];\n\t\t}\n\n\t\tgetY(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 1];\n\t\t}\n\n\t\tgetZ(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 2];\n\t\t}\n\n\t\tgetW(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 3];\n\t\t}\n\n\t\tsetXY(index, x, y) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZ(index, x, y, z) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\tthis.data.array[index + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZW(index, x, y, z, w) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\tthis.data.array[index + 2] = z;\n\t\t\tthis.data.array[index + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone(data) {\n\t\t\tif (data === undefined) {\n\t\t\t\tconsole.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.');\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor (let i = 0; i < this.count; i++) {\n\t\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor (let j = 0; j < this.itemSize; j++) {\n\t\t\t\t\t\tarray.push(this.data.array[index + j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute(new this.array.constructor(array), this.itemSize, this.normalized);\n\t\t\t} else {\n\t\t\t\tif (data.interleavedBuffers === undefined) {\n\t\t\t\t\tdata.interleavedBuffers = {};\n\t\t\t\t}\n\n\t\t\t\tif (data.interleavedBuffers[this.data.uuid] === undefined) {\n\t\t\t\t\tdata.interleavedBuffers[this.data.uuid] = this.data.clone(data);\n\t\t\t\t}\n\n\t\t\t\treturn new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(data) {\n\t\t\tif (data === undefined) {\n\t\t\t\tconsole.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.');\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor (let i = 0; i < this.count; i++) {\n\t\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor (let j = 0; j < this.itemSize; j++) {\n\t\t\t\t\t\tarray.push(this.data.array[index + j]);\n\t\t\t\t\t}\n\t\t\t\t} // deinterleave data and save it as an ordinary buffer attribute for now\n\n\n\t\t\t\treturn {\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// save as true interlaved attribtue\n\t\t\t\tif (data.interleavedBuffers === undefined) {\n\t\t\t\t\tdata.interleavedBuffers = {};\n\t\t\t\t}\n\n\t\t\t\tif (data.interleavedBuffers[this.data.uuid] === undefined) {\n\t\t\t\t\tdata.interleavedBuffers[this.data.uuid] = this.data.toJSON(data);\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\tdata: this.data.uuid,\n\t\t\t\t\toffset: this.offset,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t}\n\n\tInterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\trotation: <float>,\n\t *\tsizeAttenuation: <bool>\n\t * }\n\t */\n\n\tclass SpriteMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'SpriteMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.rotation = 0;\n\t\t\tthis.sizeAttenuation = true;\n\t\t\tthis.transparent = true;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.rotation = source.rotation;\n\t\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\n\n\tlet _geometry;\n\n\tconst _intersectPoint = /*@__PURE__*/new Vector3();\n\n\tconst _worldScale = /*@__PURE__*/new Vector3();\n\n\tconst _mvPosition = /*@__PURE__*/new Vector3();\n\n\tconst _alignedPosition = /*@__PURE__*/new Vector2();\n\n\tconst _rotatedPosition = /*@__PURE__*/new Vector2();\n\n\tconst _viewWorldMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _vA = /*@__PURE__*/new Vector3();\n\n\tconst _vB = /*@__PURE__*/new Vector3();\n\n\tconst _vC = /*@__PURE__*/new Vector3();\n\n\tconst _uvA = /*@__PURE__*/new Vector2();\n\n\tconst _uvB = /*@__PURE__*/new Vector2();\n\n\tconst _uvC = /*@__PURE__*/new Vector2();\n\n\tclass Sprite extends Object3D {\n\t\tconstructor(material) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Sprite';\n\n\t\t\tif (_geometry === undefined) {\n\t\t\t\t_geometry = new BufferGeometry();\n\t\t\t\tconst float32Array = new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]);\n\t\t\t\tconst interleavedBuffer = new InterleavedBuffer(float32Array, 5);\n\n\t\t\t\t_geometry.setIndex([0, 1, 2, 0, 2, 3]);\n\n\t\t\t\t_geometry.setAttribute('position', new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false));\n\n\t\t\t\t_geometry.setAttribute('uv', new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false));\n\t\t\t}\n\n\t\t\tthis.geometry = _geometry;\n\t\t\tthis.material = material !== undefined ? material : new SpriteMaterial();\n\t\t\tthis.center = new Vector2(0.5, 0.5);\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tif (raycaster.camera === null) {\n\t\t\t\tconsole.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.');\n\t\t\t}\n\n\t\t\t_worldScale.setFromMatrixScale(this.matrixWorld);\n\n\t\t\t_viewWorldMatrix.copy(raycaster.camera.matrixWorld);\n\n\t\t\tthis.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse, this.matrixWorld);\n\n\t\t\t_mvPosition.setFromMatrixPosition(this.modelViewMatrix);\n\n\t\t\tif (raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false) {\n\t\t\t\t_worldScale.multiplyScalar(-_mvPosition.z);\n\t\t\t}\n\n\t\t\tconst rotation = this.material.rotation;\n\t\t\tlet sin, cos;\n\n\t\t\tif (rotation !== 0) {\n\t\t\t\tcos = Math.cos(rotation);\n\t\t\t\tsin = Math.sin(rotation);\n\t\t\t}\n\n\t\t\tconst center = this.center;\n\t\t\ttransformVertex(_vA.set(-0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\t\t\ttransformVertex(_vB.set(0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\t\t\ttransformVertex(_vC.set(0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n\t\t\t_uvA.set(0, 0);\n\n\t\t\t_uvB.set(1, 0);\n\n\t\t\t_uvC.set(1, 1); // check first triangle\n\n\n\t\t\tlet intersect = raycaster.ray.intersectTriangle(_vA, _vB, _vC, false, _intersectPoint);\n\n\t\t\tif (intersect === null) {\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex(_vB.set(-0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n\t\t\t\t_uvB.set(0, 1);\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle(_vA, _vC, _vB, false, _intersectPoint);\n\n\t\t\t\tif (intersect === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo(_intersectPoint);\n\t\t\tif (distance < raycaster.near || distance > raycaster.far) return;\n\t\t\tintersects.push({\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: _intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV(_intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2()),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\t\t\t});\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tif (source.center !== undefined) this.center.copy(source.center);\n\t\t\tthis.material = source.material;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSprite.prototype.isSprite = true;\n\n\tfunction transformVertex(vertexPosition, mvPosition, center, scale, sin, cos) {\n\t\t// compute position in camera space\n\t\t_alignedPosition.subVectors(vertexPosition, center).addScalar(0.5).multiply(scale); // to check if rotation is not zero\n\n\n\t\tif (sin !== undefined) {\n\t\t\t_rotatedPosition.x = cos * _alignedPosition.x - sin * _alignedPosition.y;\n\t\t\t_rotatedPosition.y = sin * _alignedPosition.x + cos * _alignedPosition.y;\n\t\t} else {\n\t\t\t_rotatedPosition.copy(_alignedPosition);\n\t\t}\n\n\t\tvertexPosition.copy(mvPosition);\n\t\tvertexPosition.x += _rotatedPosition.x;\n\t\tvertexPosition.y += _rotatedPosition.y; // transform to world space\n\n\t\tvertexPosition.applyMatrix4(_viewWorldMatrix);\n\t}\n\n\tconst _v1$2 = /*@__PURE__*/new Vector3();\n\n\tconst _v2$1 = /*@__PURE__*/new Vector3();\n\n\tclass LOD extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis._currentLevel = 0;\n\t\t\tthis.type = 'LOD';\n\t\t\tObject.defineProperties(this, {\n\t\t\t\tlevels: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: []\n\t\t\t\t},\n\t\t\t\tisLOD: {\n\t\t\t\t\tvalue: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.autoUpdate = true;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source, false);\n\t\t\tconst levels = source.levels;\n\n\t\t\tfor (let i = 0, l = levels.length; i < l; i++) {\n\t\t\t\tconst level = levels[i];\n\t\t\t\tthis.addLevel(level.object.clone(), level.distance);\n\t\t\t}\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\treturn this;\n\t\t}\n\n\t\taddLevel(object, distance = 0) {\n\t\t\tdistance = Math.abs(distance);\n\t\t\tconst levels = this.levels;\n\t\t\tlet l;\n\n\t\t\tfor (l = 0; l < levels.length; l++) {\n\t\t\t\tif (distance < levels[l].distance) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlevels.splice(l, 0, {\n\t\t\t\tdistance: distance,\n\t\t\t\tobject: object\n\t\t\t});\n\t\t\tthis.add(object);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetCurrentLevel() {\n\t\t\treturn this._currentLevel;\n\t\t}\n\n\t\tgetObjectForDistance(distance) {\n\t\t\tconst levels = this.levels;\n\n\t\t\tif (levels.length > 0) {\n\t\t\t\tlet i, l;\n\n\t\t\t\tfor (i = 1, l = levels.length; i < l; i++) {\n\t\t\t\t\tif (distance < levels[i].distance) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn levels[i - 1].object;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst levels = this.levels;\n\n\t\t\tif (levels.length > 0) {\n\t\t\t\t_v1$2.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(_v1$2);\n\t\t\t\tthis.getObjectForDistance(distance).raycast(raycaster, intersects);\n\t\t\t}\n\t\t}\n\n\t\tupdate(camera) {\n\t\t\tconst levels = this.levels;\n\n\t\t\tif (levels.length > 1) {\n\t\t\t\t_v1$2.setFromMatrixPosition(camera.matrixWorld);\n\n\t\t\t\t_v2$1.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\t\tconst distance = _v1$2.distanceTo(_v2$1) / camera.zoom;\n\t\t\t\tlevels[0].object.visible = true;\n\t\t\t\tlet i, l;\n\n\t\t\t\tfor (i = 1, l = levels.length; i < l; i++) {\n\t\t\t\t\tif (distance >= levels[i].distance) {\n\t\t\t\t\t\tlevels[i - 1].object.visible = false;\n\t\t\t\t\t\tlevels[i].object.visible = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._currentLevel = i - 1;\n\n\t\t\t\tfor (; i < l; i++) {\n\t\t\t\t\tlevels[i].object.visible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tif (this.autoUpdate === false) data.object.autoUpdate = false;\n\t\t\tdata.object.levels = [];\n\t\t\tconst levels = this.levels;\n\n\t\t\tfor (let i = 0, l = levels.length; i < l; i++) {\n\t\t\t\tconst level = levels[i];\n\t\t\t\tdata.object.levels.push({\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tconst _basePosition = /*@__PURE__*/new Vector3();\n\n\tconst _skinIndex = /*@__PURE__*/new Vector4();\n\n\tconst _skinWeight = /*@__PURE__*/new Vector4();\n\n\tconst _vector$5 = /*@__PURE__*/new Vector3();\n\n\tconst _matrix = /*@__PURE__*/new Matrix4();\n\n\tclass SkinnedMesh extends Mesh {\n\t\tconstructor(geometry, material) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'SkinnedMesh';\n\t\t\tthis.bindMode = 'attached';\n\t\t\tthis.bindMatrix = new Matrix4();\n\t\t\tthis.bindMatrixInverse = new Matrix4();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.bindMode = source.bindMode;\n\t\t\tthis.bindMatrix.copy(source.bindMatrix);\n\t\t\tthis.bindMatrixInverse.copy(source.bindMatrixInverse);\n\t\t\tthis.skeleton = source.skeleton;\n\t\t\treturn this;\n\t\t}\n\n\t\tbind(skeleton, bindMatrix) {\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif (bindMatrix === undefined) {\n\t\t\t\tthis.updateMatrixWorld(true);\n\t\t\t\tthis.skeleton.calculateInverses();\n\t\t\t\tbindMatrix = this.matrixWorld;\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy(bindMatrix);\n\t\t\tthis.bindMatrixInverse.copy(bindMatrix).invert();\n\t\t}\n\n\t\tpose() {\n\t\t\tthis.skeleton.pose();\n\t\t}\n\n\t\tnormalizeSkinWeights() {\n\t\t\tconst vector = new Vector4();\n\t\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor (let i = 0, l = skinWeight.count; i < l; i++) {\n\t\t\t\tvector.x = skinWeight.getX(i);\n\t\t\t\tvector.y = skinWeight.getY(i);\n\t\t\t\tvector.z = skinWeight.getZ(i);\n\t\t\t\tvector.w = skinWeight.getW(i);\n\t\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\t\tif (scale !== Infinity) {\n\t\t\t\t\tvector.multiplyScalar(scale);\n\t\t\t\t} else {\n\t\t\t\t\tvector.set(1, 0, 0, 0); // do something reasonable\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW(i, vector.x, vector.y, vector.z, vector.w);\n\t\t\t}\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\n\t\t\tif (this.bindMode === 'attached') {\n\t\t\t\tthis.bindMatrixInverse.copy(this.matrixWorld).invert();\n\t\t\t} else if (this.bindMode === 'detached') {\n\t\t\t\tthis.bindMatrixInverse.copy(this.bindMatrix).invert();\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\n\t\t\t}\n\t\t}\n\n\t\tboneTransform(index, target) {\n\t\t\tconst skeleton = this.skeleton;\n\t\t\tconst geometry = this.geometry;\n\n\t\t\t_skinIndex.fromBufferAttribute(geometry.attributes.skinIndex, index);\n\n\t\t\t_skinWeight.fromBufferAttribute(geometry.attributes.skinWeight, index);\n\n\t\t\t_basePosition.fromBufferAttribute(geometry.attributes.position, index).applyMatrix4(this.bindMatrix);\n\n\t\t\ttarget.set(0, 0, 0);\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tconst weight = _skinWeight.getComponent(i);\n\n\t\t\t\tif (weight !== 0) {\n\t\t\t\t\tconst boneIndex = _skinIndex.getComponent(i);\n\n\t\t\t\t\t_matrix.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld, skeleton.boneInverses[boneIndex]);\n\n\t\t\t\t\ttarget.addScaledVector(_vector$5.copy(_basePosition).applyMatrix4(_matrix), weight);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn target.applyMatrix4(this.bindMatrixInverse);\n\t\t}\n\n\t}\n\n\tSkinnedMesh.prototype.isSkinnedMesh = true;\n\n\tclass Bone extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Bone';\n\t\t}\n\n\t}\n\n\tBone.prototype.isBone = true;\n\n\tclass DataTexture extends Texture {\n\t\tconstructor(data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding) {\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n\t\t\tthis.image = {\n\t\t\t\tdata: data,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t\tthis.magFilter = magFilter;\n\t\t\tthis.minFilter = minFilter;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tDataTexture.prototype.isDataTexture = true;\n\n\tconst _offsetMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _identityMatrix = /*@__PURE__*/new Matrix4();\n\n\tclass Skeleton {\n\t\tconstructor(bones = [], boneInverses = []) {\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.bones = bones.slice(0);\n\t\t\tthis.boneInverses = boneInverses;\n\t\t\tthis.boneMatrices = null;\n\t\t\tthis.boneTexture = null;\n\t\t\tthis.boneTextureSize = 0;\n\t\t\tthis.frame = -1;\n\t\t\tthis.init();\n\t\t}\n\n\t\tinit() {\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\t\t\tthis.boneMatrices = new Float32Array(bones.length * 16); // calculate inverse bone matrices if necessary\n\n\t\t\tif (boneInverses.length === 0) {\n\t\t\t\tthis.calculateInverses();\n\t\t\t} else {\n\t\t\t\t// handle special case\n\t\t\t\tif (bones.length !== boneInverses.length) {\n\t\t\t\t\tconsole.warn('THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.');\n\t\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\t\t\tthis.boneInverses.push(new Matrix4());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcalculateInverses() {\n\t\t\tthis.boneInverses.length = 0;\n\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst inverse = new Matrix4();\n\n\t\t\t\tif (this.bones[i]) {\n\t\t\t\t\tinverse.copy(this.bones[i].matrixWorld).invert();\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push(inverse);\n\t\t\t}\n\t\t}\n\n\t\tpose() {\n\t\t\t// recover the bind-time world matrices\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst bone = this.bones[i];\n\n\t\t\t\tif (bone) {\n\t\t\t\t\tbone.matrixWorld.copy(this.boneInverses[i]).invert();\n\t\t\t\t}\n\t\t\t} // compute the local matrices, positions, rotations and scales\n\n\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst bone = this.bones[i];\n\n\t\t\t\tif (bone) {\n\t\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\t\tbone.matrix.copy(bone.parent.matrixWorld).invert();\n\t\t\t\t\t\tbone.matrix.multiply(bone.matrixWorld);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbone.matrix.copy(bone.matrixWorld);\n\t\t\t\t\t}\n\n\t\t\t\t\tbone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\t\t\tconst boneMatrices = this.boneMatrices;\n\t\t\tconst boneTexture = this.boneTexture; // flatten bone matrices to array\n\n\t\t\tfor (let i = 0, il = bones.length; i < il; i++) {\n\t\t\t\t// compute the offset between the current and the original transform\n\t\t\t\tconst matrix = bones[i] ? bones[i].matrixWorld : _identityMatrix;\n\n\t\t\t\t_offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\n\n\t\t\t\t_offsetMatrix.toArray(boneMatrices, i * 16);\n\t\t\t}\n\n\t\t\tif (boneTexture !== null) {\n\t\t\t\tboneTexture.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Skeleton(this.bones, this.boneInverses);\n\t\t}\n\n\t\tcomputeBoneTexture() {\n\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t//\t\t\tRGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t//\twith\t8x8\tpixel texture max\t 16 bones * 4 pixels =\t(8 * 8)\n\t\t\t//\t\t\t 16x16 pixel texture max\t 64 bones * 4 pixels = (16 * 16)\n\t\t\t//\t\t\t 32x32 pixel texture max\t256 bones * 4 pixels = (32 * 32)\n\t\t\t//\t\t\t 64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\t\t\tlet size = Math.sqrt(this.bones.length * 4); // 4 pixels needed for 1 matrix\n\n\t\t\tsize = ceilPowerOfTwo(size);\n\t\t\tsize = Math.max(size, 4);\n\t\t\tconst boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\n\n\t\t\tboneMatrices.set(this.boneMatrices); // copy current values\n\n\t\t\tconst boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\n\t\t\tthis.boneMatrices = boneMatrices;\n\t\t\tthis.boneTexture = boneTexture;\n\t\t\tthis.boneTextureSize = size;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetBoneByName(name) {\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst bone = this.bones[i];\n\n\t\t\t\tif (bone.name === name) {\n\t\t\t\t\treturn bone;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tdispose() {\n\t\t\tif (this.boneTexture !== null) {\n\t\t\t\tthis.boneTexture.dispose();\n\t\t\t\tthis.boneTexture = null;\n\t\t\t}\n\t\t}\n\n\t\tfromJSON(json, bones) {\n\t\t\tthis.uuid = json.uuid;\n\n\t\t\tfor (let i = 0, l = json.bones.length; i < l; i++) {\n\t\t\t\tconst uuid = json.bones[i];\n\t\t\t\tlet bone = bones[uuid];\n\n\t\t\t\tif (bone === undefined) {\n\t\t\t\t\tconsole.warn('THREE.Skeleton: No bone found with UUID:', uuid);\n\t\t\t\t\tbone = new Bone();\n\t\t\t\t}\n\n\t\t\t\tthis.bones.push(bone);\n\t\t\t\tthis.boneInverses.push(new Matrix4().fromArray(json.boneInverses[i]));\n\t\t\t}\n\n\t\t\tthis.init();\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Skeleton',\n\t\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t\t},\n\t\t\t\tbones: [],\n\t\t\t\tboneInverses: []\n\t\t\t};\n\t\t\tdata.uuid = this.uuid;\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\n\t\t\tfor (let i = 0, l = bones.length; i < l; i++) {\n\t\t\t\tconst bone = bones[i];\n\t\t\t\tdata.bones.push(bone.uuid);\n\t\t\t\tconst boneInverse = boneInverses[i];\n\t\t\t\tdata.boneInverses.push(boneInverse.toArray());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tconst _instanceLocalMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _instanceWorldMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _instanceIntersects = [];\n\n\tconst _mesh = /*@__PURE__*/new Mesh();\n\n\tclass InstancedMesh extends Mesh {\n\t\tconstructor(geometry, material, count) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.instanceMatrix = new BufferAttribute(new Float32Array(count * 16), 16);\n\t\t\tthis.instanceColor = null;\n\t\t\tthis.count = count;\n\t\t\tthis.frustumCulled = false;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.instanceMatrix.copy(source.instanceMatrix);\n\t\t\tif (source.instanceColor !== null) this.instanceColor = source.instanceColor.clone();\n\t\t\tthis.count = source.count;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetColorAt(index, color) {\n\t\t\tcolor.fromArray(this.instanceColor.array, index * 3);\n\t\t}\n\n\t\tgetMatrixAt(index, matrix) {\n\t\t\tmatrix.fromArray(this.instanceMatrix.array, index * 16);\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst raycastTimes = this.count;\n\t\t\t_mesh.geometry = this.geometry;\n\t\t\t_mesh.material = this.material;\n\t\t\tif (_mesh.material === undefined) return;\n\n\t\t\tfor (let instanceId = 0; instanceId < raycastTimes; instanceId++) {\n\t\t\t\t// calculate the world matrix for each instance\n\t\t\t\tthis.getMatrixAt(instanceId, _instanceLocalMatrix);\n\n\t\t\t\t_instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix); // the mesh represents this single instance\n\n\n\t\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t\t_mesh.raycast(raycaster, _instanceIntersects); // process the result of raycast\n\n\n\t\t\t\tfor (let i = 0, l = _instanceIntersects.length; i < l; i++) {\n\t\t\t\t\tconst intersect = _instanceIntersects[i];\n\t\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\t\tintersect.object = this;\n\t\t\t\t\tintersects.push(intersect);\n\t\t\t\t}\n\n\t\t\t\t_instanceIntersects.length = 0;\n\t\t\t}\n\t\t}\n\n\t\tsetColorAt(index, color) {\n\t\t\tif (this.instanceColor === null) {\n\t\t\t\tthis.instanceColor = new BufferAttribute(new Float32Array(this.count * 3), 3);\n\t\t\t}\n\n\t\t\tcolor.toArray(this.instanceColor.array, index * 3);\n\t\t}\n\n\t\tsetMatrixAt(index, matrix) {\n\t\t\tmatrix.toArray(this.instanceMatrix.array, index * 16);\n\t\t}\n\n\t\tupdateMorphTargets() {}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t}\n\n\tInstancedMesh.prototype.isInstancedMesh = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tlinewidth: <float>,\n\t *\tlinecap: \"round\",\n\t *\tlinejoin: \"round\"\n\t * }\n\t */\n\n\tclass LineBasicMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineBasicMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.linewidth = 1;\n\t\t\tthis.linecap = 'round';\n\t\t\tthis.linejoin = 'round';\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.linewidth = source.linewidth;\n\t\t\tthis.linecap = source.linecap;\n\t\t\tthis.linejoin = source.linejoin;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tconst _start$1 = /*@__PURE__*/new Vector3();\n\n\tconst _end$1 = /*@__PURE__*/new Vector3();\n\n\tconst _inverseMatrix$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _ray$1 = /*@__PURE__*/new Ray();\n\n\tconst _sphere$1 = /*@__PURE__*/new Sphere();\n\n\tclass Line extends Object3D {\n\t\tconstructor(geometry = new BufferGeometry(), material = new LineBasicMaterial()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Line';\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\t\t\tthis.updateMorphTargets();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t}\n\n\t\tcomputeLineDistances() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\t// we assume non-indexed geometry\n\t\t\t\tif (geometry.index === null) {\n\t\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\t\tconst lineDistances = [0];\n\n\t\t\t\t\tfor (let i = 1, l = positionAttribute.count; i < l; i++) {\n\t\t\t\t\t\t_start$1.fromBufferAttribute(positionAttribute, i - 1);\n\n\t\t\t\t\t\t_end$1.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\tlineDistances[i] = lineDistances[i - 1];\n\t\t\t\t\t\tlineDistances[i] += _start$1.distanceTo(_end$1);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst threshold = raycaster.params.Line.threshold;\n\t\t\tconst drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$1.copy(geometry.boundingSphere);\n\n\t\t\t_sphere$1.applyMatrix4(matrixWorld);\n\n\t\t\t_sphere$1.radius += threshold;\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere$1) === false) return; //\n\n\t\t\t_inverseMatrix$1.copy(matrixWorld).invert();\n\n\t\t\t_ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);\n\n\t\t\tconst localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n\t\t\tconst localThresholdSq = localThreshold * localThreshold;\n\t\t\tconst vStart = new Vector3();\n\t\t\tconst vEnd = new Vector3();\n\t\t\tconst interSegment = new Vector3();\n\t\t\tconst interRay = new Vector3();\n\t\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, l = end - 1; i < l; i += step) {\n\t\t\t\t\t\tconst a = index.getX(i);\n\t\t\t\t\t\tconst b = index.getX(i + 1);\n\t\t\t\t\t\tvStart.fromBufferAttribute(positionAttribute, a);\n\t\t\t\t\t\tvEnd.fromBufferAttribute(positionAttribute, b);\n\n\t\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n\t\t\t\t\t\tif (distSq > localThresholdSq) continue;\n\t\t\t\t\t\tinterRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(interRay);\n\t\t\t\t\t\tif (distance < raycaster.near || distance > raycaster.far) continue;\n\t\t\t\t\t\tintersects.push({\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4(this.matrixWorld),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, l = end - 1; i < l; i += step) {\n\t\t\t\t\t\tvStart.fromBufferAttribute(positionAttribute, i);\n\t\t\t\t\t\tvEnd.fromBufferAttribute(positionAttribute, i + 1);\n\n\t\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n\t\t\t\t\t\tif (distSq > localThresholdSq) continue;\n\t\t\t\t\t\tinterRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(interRay);\n\t\t\t\t\t\tif (distance < raycaster.near || distance > raycaster.far) continue;\n\t\t\t\t\t\tintersects.push({\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4(this.matrixWorld),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t}\n\n\t\tupdateMorphTargets() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\t\tconst keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tLine.prototype.isLine = true;\n\n\tconst _start = /*@__PURE__*/new Vector3();\n\n\tconst _end = /*@__PURE__*/new Vector3();\n\n\tclass LineSegments extends Line {\n\t\tconstructor(geometry, material) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'LineSegments';\n\t\t}\n\n\t\tcomputeLineDistances() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\t// we assume non-indexed geometry\n\t\t\t\tif (geometry.index === null) {\n\t\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\t\tconst lineDistances = [];\n\n\t\t\t\t\tfor (let i = 0, l = positionAttribute.count; i < l; i += 2) {\n\t\t\t\t\t\t_start.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\t_end.fromBufferAttribute(positionAttribute, i + 1);\n\n\t\t\t\t\t\tlineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n\t\t\t\t\t\tlineDistances[i + 1] = lineDistances[i] + _start.distanceTo(_end);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineSegments.prototype.isLineSegments = true;\n\n\tclass LineLoop extends Line {\n\t\tconstructor(geometry, material) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'LineLoop';\n\t\t}\n\n\t}\n\n\tLineLoop.prototype.isLineLoop = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tsize: <float>,\n\t *\tsizeAttenuation: <bool>\n\t *\n\t *\tmorphTargets: <bool>\n\t * }\n\t */\n\n\tclass PointsMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PointsMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.size = 1;\n\t\t\tthis.sizeAttenuation = true;\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.size = source.size;\n\t\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tconst _inverseMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _ray = /*@__PURE__*/new Ray();\n\n\tconst _sphere = /*@__PURE__*/new Sphere();\n\n\tconst _position$2 = /*@__PURE__*/new Vector3();\n\n\tclass Points extends Object3D {\n\t\tconstructor(geometry = new BufferGeometry(), material = new PointsMaterial()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Points';\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\t\t\tthis.updateMorphTargets();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst threshold = raycaster.params.Points.threshold;\n\t\t\tconst drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere.copy(geometry.boundingSphere);\n\n\t\t\t_sphere.applyMatrix4(matrixWorld);\n\n\t\t\t_sphere.radius += threshold;\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere) === false) return; //\n\n\t\t\t_inverseMatrix.copy(matrixWorld).invert();\n\n\t\t\t_ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n\n\t\t\tconst localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n\t\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, il = end; i < il; i++) {\n\t\t\t\t\t\tconst a = index.getX(i);\n\n\t\t\t\t\t\t_position$2.fromBufferAttribute(positionAttribute, a);\n\n\t\t\t\t\t\ttestPoint(_position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, l = end; i < l; i++) {\n\t\t\t\t\t\t_position$2.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\ttestPoint(_position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t}\n\n\t\tupdateMorphTargets() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\t\tconst keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tPoints.prototype.isPoints = true;\n\n\tfunction testPoint(point, index, localThresholdSq, matrixWorld, raycaster, intersects, object) {\n\t\tconst rayPointDistanceSq = _ray.distanceSqToPoint(point);\n\n\t\tif (rayPointDistanceSq < localThresholdSq) {\n\t\t\tconst intersectPoint = new Vector3();\n\n\t\t\t_ray.closestPointToPoint(point, intersectPoint);\n\n\t\t\tintersectPoint.applyMatrix4(matrixWorld);\n\t\t\tconst distance = raycaster.ray.origin.distanceTo(intersectPoint);\n\t\t\tif (distance < raycaster.near || distance > raycaster.far) return;\n\t\t\tintersects.push({\n\t\t\t\tdistance: distance,\n\t\t\t\tdistanceToRay: Math.sqrt(rayPointDistanceSq),\n\t\t\t\tpoint: intersectPoint,\n\t\t\t\tindex: index,\n\t\t\t\tface: null,\n\t\t\t\tobject: object\n\t\t\t});\n\t\t}\n\t}\n\n\tclass VideoTexture extends Texture {\n\t\tconstructor(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n\t\t\tsuper(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\t\tthis.format = format !== undefined ? format : RGBFormat;\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tconst scope = this;\n\n\t\t\tfunction updateVideo() {\n\t\t\t\tscope.needsUpdate = true;\n\t\t\t\tvideo.requestVideoFrameCallback(updateVideo);\n\t\t\t}\n\n\t\t\tif ('requestVideoFrameCallback' in video) {\n\t\t\t\tvideo.requestVideoFrameCallback(updateVideo);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.image).copy(this);\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst video = this.image;\n\t\t\tconst hasVideoFrameCallback = ('requestVideoFrameCallback' in video);\n\n\t\t\tif (hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA) {\n\t\t\t\tthis.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tVideoTexture.prototype.isVideoTexture = true;\n\n\tclass CompressedTexture extends Texture {\n\t\tconstructor(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n\t\t\tthis.image = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t\tthis.mipmaps = mipmaps; // no flipping for cube textures\n\t\t\t// (also flipping doesn't work for compressed textures )\n\n\t\t\tthis.flipY = false; // can't generate mipmaps for compressed textures\n\t\t\t// mips must be embedded in DDS files\n\n\t\t\tthis.generateMipmaps = false;\n\t\t}\n\n\t}\n\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\tclass CanvasTexture extends Texture {\n\t\tconstructor(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n\t\t\tsuper(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tCanvasTexture.prototype.isCanvasTexture = true;\n\n\tclass DepthTexture extends Texture {\n\t\tconstructor(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format) {\n\t\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\t\tif (format !== DepthFormat && format !== DepthStencilFormat) {\n\t\t\t\tthrow new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');\n\t\t\t}\n\n\t\t\tif (type === undefined && format === DepthFormat) type = UnsignedShortType;\n\t\t\tif (type === undefined && format === DepthStencilFormat) type = UnsignedInt248Type;\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\t\tthis.image = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\t\t\tthis.flipY = false;\n\t\t\tthis.generateMipmaps = false;\n\t\t}\n\n\t}\n\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\tclass CircleGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CircleGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tsegments: segments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tsegments = Math.max(3, segments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2(); // center point\n\n\t\t\tvertices.push(0, 0, 0);\n\t\t\tnormals.push(0, 0, 1);\n\t\t\tuvs.push(0.5, 0.5);\n\n\t\t\tfor (let s = 0, i = 3; s <= segments; s++, i += 3) {\n\t\t\t\tconst segment = thetaStart + s / segments * thetaLength; // vertex\n\n\t\t\t\tvertex.x = radius * Math.cos(segment);\n\t\t\t\tvertex.y = radius * Math.sin(segment);\n\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\tnormals.push(0, 0, 1); // uvs\n\n\t\t\t\tuv.x = (vertices[i] / radius + 1) / 2;\n\t\t\t\tuv.y = (vertices[i + 1] / radius + 1) / 2;\n\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t} // indices\n\n\n\t\t\tfor (let i = 1; i <= segments; i++) {\n\t\t\t\tindices.push(i, i + 1, 0);\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new CircleGeometry(data.radius, data.segments, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass CylinderGeometry extends BufferGeometry {\n\t\tconstructor(radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CylinderGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradiusTop: radiusTop,\n\t\t\t\tradiusBottom: radiusBottom,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tconst scope = this;\n\t\t\tradialSegments = Math.floor(radialSegments);\n\t\t\theightSegments = Math.floor(heightSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tlet index = 0;\n\t\t\tconst indexArray = [];\n\t\t\tconst halfHeight = height / 2;\n\t\t\tlet groupStart = 0; // generate geometry\n\n\t\t\tgenerateTorso();\n\n\t\t\tif (openEnded === false) {\n\t\t\t\tif (radiusTop > 0) generateCap(true);\n\t\t\t\tif (radiusBottom > 0) generateCap(false);\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\t\tfunction generateTorso() {\n\t\t\t\tconst normal = new Vector3();\n\t\t\t\tconst vertex = new Vector3();\n\t\t\t\tlet groupCount = 0; // this will be used to calculate the normal\n\n\t\t\t\tconst slope = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\n\n\t\t\t\tfor (let y = 0; y <= heightSegments; y++) {\n\t\t\t\t\tconst indexRow = [];\n\t\t\t\t\tconst v = y / heightSegments; // calculate the radius of the current row\n\n\t\t\t\t\tconst radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n\t\t\t\t\tfor (let x = 0; x <= radialSegments; x++) {\n\t\t\t\t\t\tconst u = x / radialSegments;\n\t\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\t\t\t\t\t\tconst sinTheta = Math.sin(theta);\n\t\t\t\t\t\tconst cosTheta = Math.cos(theta); // vertex\n\n\t\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\t\tvertex.y = -v * height + halfHeight;\n\t\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\t\tnormal.set(sinTheta, slope, cosTheta).normalize();\n\t\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\t\tuvs.push(u, 1 - v); // save index of vertex in respective row\n\n\t\t\t\t\t\tindexRow.push(index++);\n\t\t\t\t\t} // now save vertices of the row in our index array\n\n\n\t\t\t\t\tindexArray.push(indexRow);\n\t\t\t\t} // generate indices\n\n\n\t\t\t\tfor (let x = 0; x < radialSegments; x++) {\n\t\t\t\t\tfor (let y = 0; y < heightSegments; y++) {\n\t\t\t\t\t\t// we use the index array to access the correct indices\n\t\t\t\t\t\tconst a = indexArray[y][x];\n\t\t\t\t\t\tconst b = indexArray[y + 1][x];\n\t\t\t\t\t\tconst c = indexArray[y + 1][x + 1];\n\t\t\t\t\t\tconst d = indexArray[y][x + 1]; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d); // update group counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\t\t\t\t\t}\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t}\n\n\t\t\tfunction generateCap(top) {\n\t\t\t\t// save the index of the first center vertex\n\t\t\t\tconst centerIndexStart = index;\n\t\t\t\tconst uv = new Vector2();\n\t\t\t\tconst vertex = new Vector3();\n\t\t\t\tlet groupCount = 0;\n\t\t\t\tconst radius = top === true ? radiusTop : radiusBottom;\n\t\t\t\tconst sign = top === true ? 1 : -1; // first we generate the center vertex data of the cap.\n\t\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\t\tfor (let x = 1; x <= radialSegments; x++) {\n\t\t\t\t\t// vertex\n\t\t\t\t\tvertices.push(0, halfHeight * sign, 0); // normal\n\n\t\t\t\t\tnormals.push(0, sign, 0); // uv\n\n\t\t\t\t\tuvs.push(0.5, 0.5); // increase index\n\n\t\t\t\t\tindex++;\n\t\t\t\t} // save the index of the last center vertex\n\n\n\t\t\t\tconst centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\n\n\t\t\t\tfor (let x = 0; x <= radialSegments; x++) {\n\t\t\t\t\tconst u = x / radialSegments;\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\t\t\t\t\tconst cosTheta = Math.cos(theta);\n\t\t\t\t\tconst sinTheta = Math.sin(theta); // vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormals.push(0, sign, 0); // uv\n\n\t\t\t\t\tuv.x = cosTheta * 0.5 + 0.5;\n\t\t\t\t\tuv.y = sinTheta * 0.5 * sign + 0.5;\n\t\t\t\t\tuvs.push(uv.x, uv.y); // increase index\n\n\t\t\t\t\tindex++;\n\t\t\t\t} // generate indices\n\n\n\t\t\t\tfor (let x = 0; x < radialSegments; x++) {\n\t\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\t\tif (top === true) {\n\t\t\t\t\t\t// face top\n\t\t\t\t\t\tindices.push(i, i + 1, c);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// face bottom\n\t\t\t\t\t\tindices.push(i + 1, i, c);\n\t\t\t\t\t}\n\n\t\t\t\t\tgroupCount += 3;\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new CylinderGeometry(data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass ConeGeometry extends CylinderGeometry {\n\t\tconstructor(radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper(0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n\t\t\tthis.type = 'ConeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new ConeGeometry(data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass PolyhedronGeometry extends BufferGeometry {\n\t\tconstructor(vertices, indices, radius = 1, detail = 0) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PolyhedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tvertices: vertices,\n\t\t\t\tindices: indices,\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t}; // default buffer data\n\n\t\t\tconst vertexBuffer = [];\n\t\t\tconst uvBuffer = []; // the subdivision creates the vertex buffer data\n\n\t\t\tsubdivide(detail); // all vertices should lie on a conceptual sphere with a given radius\n\n\t\t\tapplyRadius(radius); // finally, create the uv data\n\n\t\t\tgenerateUVs(); // build non-indexed geometry\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\n\n\t\t\tif (detail === 0) {\n\t\t\t\tthis.computeVertexNormals(); // flat normals\n\t\t\t} else {\n\t\t\t\tthis.normalizeNormals(); // smooth normals\n\t\t\t} // helper functions\n\n\n\t\t\tfunction subdivide(detail) {\n\t\t\t\tconst a = new Vector3();\n\t\t\t\tconst b = new Vector3();\n\t\t\t\tconst c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\t\tfor (let i = 0; i < indices.length; i += 3) {\n\t\t\t\t\t// get the vertices of the face\n\t\t\t\t\tgetVertexByIndex(indices[i + 0], a);\n\t\t\t\t\tgetVertexByIndex(indices[i + 1], b);\n\t\t\t\t\tgetVertexByIndex(indices[i + 2], c); // perform subdivision\n\n\t\t\t\t\tsubdivideFace(a, b, c, detail);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction subdivideFace(a, b, c, detail) {\n\t\t\t\tconst cols = detail + 1; // we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\t\tconst v = []; // construct all of the vertices for this subdivision\n\n\t\t\t\tfor (let i = 0; i <= cols; i++) {\n\t\t\t\t\tv[i] = [];\n\t\t\t\t\tconst aj = a.clone().lerp(c, i / cols);\n\t\t\t\t\tconst bj = b.clone().lerp(c, i / cols);\n\t\t\t\t\tconst rows = cols - i;\n\n\t\t\t\t\tfor (let j = 0; j <= rows; j++) {\n\t\t\t\t\t\tif (j === 0 && i === cols) {\n\t\t\t\t\t\t\tv[i][j] = aj;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tv[i][j] = aj.clone().lerp(bj, j / rows);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // construct all of the faces\n\n\n\t\t\t\tfor (let i = 0; i < cols; i++) {\n\t\t\t\t\tfor (let j = 0; j < 2 * (cols - i) - 1; j++) {\n\t\t\t\t\t\tconst k = Math.floor(j / 2);\n\n\t\t\t\t\t\tif (j % 2 === 0) {\n\t\t\t\t\t\t\tpushVertex(v[i][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k]);\n\t\t\t\t\t\t\tpushVertex(v[i][k]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpushVertex(v[i][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction applyRadius(radius) {\n\t\t\t\tconst vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\t\tfor (let i = 0; i < vertexBuffer.length; i += 3) {\n\t\t\t\t\tvertex.x = vertexBuffer[i + 0];\n\t\t\t\t\tvertex.y = vertexBuffer[i + 1];\n\t\t\t\t\tvertex.z = vertexBuffer[i + 2];\n\t\t\t\t\tvertex.normalize().multiplyScalar(radius);\n\t\t\t\t\tvertexBuffer[i + 0] = vertex.x;\n\t\t\t\t\tvertexBuffer[i + 1] = vertex.y;\n\t\t\t\t\tvertexBuffer[i + 2] = vertex.z;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateUVs() {\n\t\t\t\tconst vertex = new Vector3();\n\n\t\t\t\tfor (let i = 0; i < vertexBuffer.length; i += 3) {\n\t\t\t\t\tvertex.x = vertexBuffer[i + 0];\n\t\t\t\t\tvertex.y = vertexBuffer[i + 1];\n\t\t\t\t\tvertex.z = vertexBuffer[i + 2];\n\t\t\t\t\tconst u = azimuth(vertex) / 2 / Math.PI + 0.5;\n\t\t\t\t\tconst v = inclination(vertex) / Math.PI + 0.5;\n\t\t\t\t\tuvBuffer.push(u, 1 - v);\n\t\t\t\t}\n\n\t\t\t\tcorrectUVs();\n\t\t\t\tcorrectSeam();\n\t\t\t}\n\n\t\t\tfunction correctSeam() {\n\t\t\t\t// handle case when face straddles the seam, see #3269\n\t\t\t\tfor (let i = 0; i < uvBuffer.length; i += 6) {\n\t\t\t\t\t// uv data of a single face\n\t\t\t\t\tconst x0 = uvBuffer[i + 0];\n\t\t\t\t\tconst x1 = uvBuffer[i + 2];\n\t\t\t\t\tconst x2 = uvBuffer[i + 4];\n\t\t\t\t\tconst max = Math.max(x0, x1, x2);\n\t\t\t\t\tconst min = Math.min(x0, x1, x2); // 0.9 is somewhat arbitrary\n\n\t\t\t\t\tif (max > 0.9 && min < 0.1) {\n\t\t\t\t\t\tif (x0 < 0.2) uvBuffer[i + 0] += 1;\n\t\t\t\t\t\tif (x1 < 0.2) uvBuffer[i + 2] += 1;\n\t\t\t\t\t\tif (x2 < 0.2) uvBuffer[i + 4] += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction pushVertex(vertex) {\n\t\t\t\tvertexBuffer.push(vertex.x, vertex.y, vertex.z);\n\t\t\t}\n\n\t\t\tfunction getVertexByIndex(index, vertex) {\n\t\t\t\tconst stride = index * 3;\n\t\t\t\tvertex.x = vertices[stride + 0];\n\t\t\t\tvertex.y = vertices[stride + 1];\n\t\t\t\tvertex.z = vertices[stride + 2];\n\t\t\t}\n\n\t\t\tfunction correctUVs() {\n\t\t\t\tconst a = new Vector3();\n\t\t\t\tconst b = new Vector3();\n\t\t\t\tconst c = new Vector3();\n\t\t\t\tconst centroid = new Vector3();\n\t\t\t\tconst uvA = new Vector2();\n\t\t\t\tconst uvB = new Vector2();\n\t\t\t\tconst uvC = new Vector2();\n\n\t\t\t\tfor (let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\n\t\t\t\t\ta.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\n\t\t\t\t\tb.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\n\t\t\t\t\tc.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\n\t\t\t\t\tuvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\n\t\t\t\t\tuvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\n\t\t\t\t\tuvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\n\t\t\t\t\tcentroid.copy(a).add(b).add(c).divideScalar(3);\n\t\t\t\t\tconst azi = azimuth(centroid);\n\t\t\t\t\tcorrectUV(uvA, j + 0, a, azi);\n\t\t\t\t\tcorrectUV(uvB, j + 2, b, azi);\n\t\t\t\t\tcorrectUV(uvC, j + 4, c, azi);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction correctUV(uv, stride, vector, azimuth) {\n\t\t\t\tif (azimuth < 0 && uv.x === 1) {\n\t\t\t\t\tuvBuffer[stride] = uv.x - 1;\n\t\t\t\t}\n\n\t\t\t\tif (vector.x === 0 && vector.z === 0) {\n\t\t\t\t\tuvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\n\t\t\t\t}\n\t\t\t} // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n\t\t\tfunction azimuth(vector) {\n\t\t\t\treturn Math.atan2(vector.z, -vector.x);\n\t\t\t} // Angle above the XZ plane.\n\n\n\t\t\tfunction inclination(vector) {\n\t\t\t\treturn Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new PolyhedronGeometry(data.vertices, data.indices, data.radius, data.details);\n\t\t}\n\n\t}\n\n\tclass DodecahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst t = (1 + Math.sqrt(5)) / 2;\n\t\t\tconst r = 1 / t;\n\t\t\tconst vertices = [// (±1, ±1, ±1)\n\t\t\t-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n\t\t\t0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n\t\t\t-r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n\t\t\t-t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n\t\t\tconst indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'DodecahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new DodecahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\tconst _v0 = new Vector3();\n\n\tconst _v1$1 = new Vector3();\n\n\tconst _normal = new Vector3();\n\n\tconst _triangle = new Triangle();\n\n\tclass EdgesGeometry extends BufferGeometry {\n\t\tconstructor(geometry, thresholdAngle) {\n\t\t\tsuper();\n\t\t\tthis.type = 'EdgesGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tthresholdAngle: thresholdAngle\n\t\t\t};\n\t\t\tthresholdAngle = thresholdAngle !== undefined ? thresholdAngle : 1;\n\n\t\t\tif (geometry.isGeometry === true) {\n\t\t\t\tconsole.error('THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow(10, precisionPoints);\n\t\t\tconst thresholdDot = Math.cos(DEG2RAD * thresholdAngle);\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute('position');\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\t\t\tconst indexArr = [0, 0, 0];\n\t\t\tconst vertKeys = ['a', 'b', 'c'];\n\t\t\tconst hashes = new Array(3);\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\n\t\t\tfor (let i = 0; i < indexCount; i += 3) {\n\t\t\t\tif (indexAttr) {\n\t\t\t\t\tindexArr[0] = indexAttr.getX(i);\n\t\t\t\t\tindexArr[1] = indexAttr.getX(i + 1);\n\t\t\t\t\tindexArr[2] = indexAttr.getX(i + 2);\n\t\t\t\t} else {\n\t\t\t\t\tindexArr[0] = i;\n\t\t\t\t\tindexArr[1] = i + 1;\n\t\t\t\t\tindexArr[2] = i + 2;\n\t\t\t\t}\n\n\t\t\t\tconst {\n\t\t\t\t\ta,\n\t\t\t\t\tb,\n\t\t\t\t\tc\n\t\t\t\t} = _triangle;\n\t\t\t\ta.fromBufferAttribute(positionAttr, indexArr[0]);\n\t\t\t\tb.fromBufferAttribute(positionAttr, indexArr[1]);\n\t\t\t\tc.fromBufferAttribute(positionAttr, indexArr[2]);\n\n\t\t\t\t_triangle.getNormal(_normal); // create hashes for the edge from the vertices\n\n\n\t\t\t\thashes[0] = `${Math.round(a.x * precision)},${Math.round(a.y * precision)},${Math.round(a.z * precision)}`;\n\t\t\t\thashes[1] = `${Math.round(b.x * precision)},${Math.round(b.y * precision)},${Math.round(b.z * precision)}`;\n\t\t\t\thashes[2] = `${Math.round(c.x * precision)},${Math.round(c.y * precision)},${Math.round(c.z * precision)}`; // skip degenerate triangles\n\n\t\t\t\tif (hashes[0] === hashes[1] || hashes[1] === hashes[2] || hashes[2] === hashes[0]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} // iterate over every edge\n\n\n\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = (j + 1) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[j];\n\t\t\t\t\tconst vecHash1 = hashes[jNext];\n\t\t\t\t\tconst v0 = _triangle[vertKeys[j]];\n\t\t\t\t\tconst v1 = _triangle[vertKeys[jNext]];\n\t\t\t\t\tconst hash = `${vecHash0}_${vecHash1}`;\n\t\t\t\t\tconst reverseHash = `${vecHash1}_${vecHash0}`;\n\n\t\t\t\t\tif (reverseHash in edgeData && edgeData[reverseHash]) {\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif (_normal.dot(edgeData[reverseHash].normal) <= thresholdDot) {\n\t\t\t\t\t\t\tvertices.push(v0.x, v0.y, v0.z);\n\t\t\t\t\t\t\tvertices.push(v1.x, v1.y, v1.z);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[reverseHash] = null;\n\t\t\t\t\t} else if (!(hash in edgeData)) {\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[hash] = {\n\t\t\t\t\t\t\tindex0: indexArr[j],\n\t\t\t\t\t\t\tindex1: indexArr[jNext],\n\t\t\t\t\t\t\tnormal: _normal.clone()\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // iterate over all remaining, unmatched edges and add them to the vertex array\n\n\n\t\t\tfor (const key in edgeData) {\n\t\t\t\tif (edgeData[key]) {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tindex0,\n\t\t\t\t\t\tindex1\n\t\t\t\t\t} = edgeData[key];\n\n\t\t\t\t\t_v0.fromBufferAttribute(positionAttr, index0);\n\n\t\t\t\t\t_v1$1.fromBufferAttribute(positionAttr, index1);\n\n\t\t\t\t\tvertices.push(_v0.x, _v0.y, _v0.z);\n\t\t\t\t\tvertices.push(_v1$1.x, _v1$1.y, _v1$1.z);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t}\n\n\t}\n\n\t/**\n\t * Extensible curve object.\n\t *\n\t * Some common of curve methods:\n\t * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following curves inherit from THREE.Curve:\n\t *\n\t * -- 2D curves --\n\t * THREE.ArcCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.EllipseCurve\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.SplineCurve\n\t *\n\t * -- 3D curves --\n\t * THREE.CatmullRomCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath.\n\t *\n\t **/\n\n\tclass Curve {\n\t\tconstructor() {\n\t\t\tthis.type = 'Curve';\n\t\t\tthis.arcLengthDivisions = 200;\n\t\t} // Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\n\t\tgetPoint()\n\t\t/* t, optionalTarget */\n\t\t{\n\t\t\tconsole.warn('THREE.Curve: .getPoint() not implemented.');\n\t\t\treturn null;\n\t\t} // Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\n\t\tgetPointAt(u, optionalTarget) {\n\t\t\tconst t = this.getUtoTmapping(u);\n\t\t\treturn this.getPoint(t, optionalTarget);\n\t\t} // Get sequence of points using getPoint( t )\n\n\n\t\tgetPoints(divisions = 5) {\n\t\t\tconst points = [];\n\n\t\t\tfor (let d = 0; d <= divisions; d++) {\n\t\t\t\tpoints.push(this.getPoint(d / divisions));\n\t\t\t}\n\n\t\t\treturn points;\n\t\t} // Get sequence of points using getPointAt( u )\n\n\n\t\tgetSpacedPoints(divisions = 5) {\n\t\t\tconst points = [];\n\n\t\t\tfor (let d = 0; d <= divisions; d++) {\n\t\t\t\tpoints.push(this.getPointAt(d / divisions));\n\t\t\t}\n\n\t\t\treturn points;\n\t\t} // Get total curve arc length\n\n\n\t\tgetLength() {\n\t\t\tconst lengths = this.getLengths();\n\t\t\treturn lengths[lengths.length - 1];\n\t\t} // Get list of cumulative segment lengths\n\n\n\t\tgetLengths(divisions = this.arcLengthDivisions) {\n\t\t\tif (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n\t\t\t\treturn this.cacheArcLengths;\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\t\t\tconst cache = [];\n\t\t\tlet current,\n\t\t\t\t\tlast = this.getPoint(0);\n\t\t\tlet sum = 0;\n\t\t\tcache.push(0);\n\n\t\t\tfor (let p = 1; p <= divisions; p++) {\n\t\t\t\tcurrent = this.getPoint(p / divisions);\n\t\t\t\tsum += current.distanceTo(last);\n\t\t\t\tcache.push(sum);\n\t\t\t\tlast = current;\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\t\t}\n\n\t\tupdateArcLengths() {\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\t\t} // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\n\t\tgetUtoTmapping(u, distance) {\n\t\t\tconst arcLengths = this.getLengths();\n\t\t\tlet i = 0;\n\t\t\tconst il = arcLengths.length;\n\t\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\t\tif (distance) {\n\t\t\t\ttargetArcLength = distance;\n\t\t\t} else {\n\t\t\t\ttargetArcLength = u * arcLengths[il - 1];\n\t\t\t} // binary search for the index with largest value smaller than target u distance\n\n\n\t\t\tlet low = 0,\n\t\t\t\t\thigh = il - 1,\n\t\t\t\t\tcomparison;\n\n\t\t\twhile (low <= high) {\n\t\t\t\ti = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[i] - targetArcLength;\n\n\t\t\t\tif (comparison < 0) {\n\t\t\t\t\tlow = i + 1;\n\t\t\t\t} else if (comparison > 0) {\n\t\t\t\t\thigh = i - 1;\n\t\t\t\t} else {\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak; // DONE\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\tif (arcLengths[i] === targetArcLength) {\n\t\t\t\treturn i / (il - 1);\n\t\t\t} // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n\t\t\tconst lengthBefore = arcLengths[i];\n\t\t\tconst lengthAfter = arcLengths[i + 1];\n\t\t\tconst segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n\t\t\tconst segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n\t\t\tconst t = (i + segmentFraction) / (il - 1);\n\t\t\treturn t;\n\t\t} // Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\n\t\tgetTangent(t, optionalTarget) {\n\t\t\tconst delta = 0.0001;\n\t\t\tlet t1 = t - delta;\n\t\t\tlet t2 = t + delta; // Capping in case of danger\n\n\t\t\tif (t1 < 0) t1 = 0;\n\t\t\tif (t2 > 1) t2 = 1;\n\t\t\tconst pt1 = this.getPoint(t1);\n\t\t\tconst pt2 = this.getPoint(t2);\n\t\t\tconst tangent = optionalTarget || (pt1.isVector2 ? new Vector2() : new Vector3());\n\t\t\ttangent.copy(pt2).sub(pt1).normalize();\n\t\t\treturn tangent;\n\t\t}\n\n\t\tgetTangentAt(u, optionalTarget) {\n\t\t\tconst t = this.getUtoTmapping(u);\n\t\t\treturn this.getTangent(t, optionalTarget);\n\t\t}\n\n\t\tcomputeFrenetFrames(segments, closed) {\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\t\t\tconst normal = new Vector3();\n\t\t\tconst tangents = [];\n\t\t\tconst normals = [];\n\t\t\tconst binormals = [];\n\t\t\tconst vec = new Vector3();\n\t\t\tconst mat = new Matrix4(); // compute the tangent vectors for each segment on the curve\n\n\t\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\t\tconst u = i / segments;\n\t\t\t\ttangents[i] = this.getTangentAt(u, new Vector3());\n\t\t\t\ttangents[i].normalize();\n\t\t\t} // select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\n\t\t\tnormals[0] = new Vector3();\n\t\t\tbinormals[0] = new Vector3();\n\t\t\tlet min = Number.MAX_VALUE;\n\t\t\tconst tx = Math.abs(tangents[0].x);\n\t\t\tconst ty = Math.abs(tangents[0].y);\n\t\t\tconst tz = Math.abs(tangents[0].z);\n\n\t\t\tif (tx <= min) {\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set(1, 0, 0);\n\t\t\t}\n\n\t\t\tif (ty <= min) {\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set(0, 1, 0);\n\t\t\t}\n\n\t\t\tif (tz <= min) {\n\t\t\t\tnormal.set(0, 0, 1);\n\t\t\t}\n\n\t\t\tvec.crossVectors(tangents[0], normal).normalize();\n\t\t\tnormals[0].crossVectors(tangents[0], vec);\n\t\t\tbinormals[0].crossVectors(tangents[0], normals[0]); // compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor (let i = 1; i <= segments; i++) {\n\t\t\t\tnormals[i] = normals[i - 1].clone();\n\t\t\t\tbinormals[i] = binormals[i - 1].clone();\n\t\t\t\tvec.crossVectors(tangents[i - 1], tangents[i]);\n\n\t\t\t\tif (vec.length() > Number.EPSILON) {\n\t\t\t\t\tvec.normalize();\n\t\t\t\t\tconst theta = Math.acos(clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n\t\t\t\t}\n\n\t\t\t\tbinormals[i].crossVectors(tangents[i], normals[i]);\n\t\t\t} // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n\t\t\tif (closed === true) {\n\t\t\t\tlet theta = Math.acos(clamp(normals[0].dot(normals[segments]), -1, 1));\n\t\t\t\ttheta /= segments;\n\n\t\t\t\tif (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\n\t\t\t\t\ttheta = -theta;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 1; i <= segments; i++) {\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n\t\t\t\t\tbinormals[i].crossVectors(tangents[i], normals[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Curve',\n\t\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t\t}\n\t\t\t};\n\t\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\t\tdata.type = this.type;\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass EllipseCurve extends Curve {\n\t\tconstructor(aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0) {\n\t\t\tsuper();\n\t\t\tthis.type = 'EllipseCurve';\n\t\t\tthis.aX = aX;\n\t\t\tthis.aY = aY;\n\t\t\tthis.xRadius = xRadius;\n\t\t\tthis.yRadius = yRadius;\n\t\t\tthis.aStartAngle = aStartAngle;\n\t\t\tthis.aEndAngle = aEndAngle;\n\t\t\tthis.aClockwise = aClockwise;\n\t\t\tthis.aRotation = aRotation;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget) {\n\t\t\tconst point = optionalTarget || new Vector2();\n\t\t\tconst twoPi = Math.PI * 2;\n\t\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\t\tconst samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\n\n\t\t\twhile (deltaAngle < 0) deltaAngle += twoPi;\n\n\t\t\twhile (deltaAngle > twoPi) deltaAngle -= twoPi;\n\n\t\t\tif (deltaAngle < Number.EPSILON) {\n\t\t\t\tif (samePoints) {\n\t\t\t\t\tdeltaAngle = 0;\n\t\t\t\t} else {\n\t\t\t\t\tdeltaAngle = twoPi;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.aClockwise === true && !samePoints) {\n\t\t\t\tif (deltaAngle === twoPi) {\n\t\t\t\t\tdeltaAngle = -twoPi;\n\t\t\t\t} else {\n\t\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\t\tlet x = this.aX + this.xRadius * Math.cos(angle);\n\t\t\tlet y = this.aY + this.yRadius * Math.sin(angle);\n\n\t\t\tif (this.aRotation !== 0) {\n\t\t\t\tconst cos = Math.cos(this.aRotation);\n\t\t\t\tconst sin = Math.sin(this.aRotation);\n\t\t\t\tconst tx = x - this.aX;\n\t\t\t\tconst ty = y - this.aY; // Rotate the point about the center of the ellipse.\n\n\t\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\t\ty = tx * sin + ty * cos + this.aY;\n\t\t\t}\n\n\t\t\treturn point.set(x, y);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.aX = source.aX;\n\t\t\tthis.aY = source.aY;\n\t\t\tthis.xRadius = source.xRadius;\n\t\t\tthis.yRadius = source.yRadius;\n\t\t\tthis.aStartAngle = source.aStartAngle;\n\t\t\tthis.aEndAngle = source.aEndAngle;\n\t\t\tthis.aClockwise = source.aClockwise;\n\t\t\tthis.aRotation = source.aRotation;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.aX = this.aX;\n\t\t\tdata.aY = this.aY;\n\t\t\tdata.xRadius = this.xRadius;\n\t\t\tdata.yRadius = this.yRadius;\n\t\t\tdata.aStartAngle = this.aStartAngle;\n\t\t\tdata.aEndAngle = this.aEndAngle;\n\t\t\tdata.aClockwise = this.aClockwise;\n\t\t\tdata.aRotation = this.aRotation;\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.aX = json.aX;\n\t\t\tthis.aY = json.aY;\n\t\t\tthis.xRadius = json.xRadius;\n\t\t\tthis.yRadius = json.yRadius;\n\t\t\tthis.aStartAngle = json.aStartAngle;\n\t\t\tthis.aEndAngle = json.aEndAngle;\n\t\t\tthis.aClockwise = json.aClockwise;\n\t\t\tthis.aRotation = json.aRotation;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tclass ArcCurve extends EllipseCurve {\n\t\tconstructor(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tsuper(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\tthis.type = 'ArcCurve';\n\t\t}\n\n\t}\n\n\tArcCurve.prototype.isArcCurve = true;\n\n\t/**\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\t/*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/\n\n\tfunction CubicPoly() {\n\t\tlet c0 = 0,\n\t\t\t\tc1 = 0,\n\t\t\t\tc2 = 0,\n\t\t\t\tc3 = 0;\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *\t p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *\t p(0) = x0, p(1) = x1\n\t\t *\tand\n\t\t *\t p'(0) = t0, p'(1) = t1.\n\t\t */\n\n\t\tfunction init(x0, x1, t0, t1) {\n\t\t\tc0 = x0;\n\t\t\tc1 = t0;\n\t\t\tc2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\t\t}\n\n\t\treturn {\n\t\t\tinitCatmullRom: function (x0, x1, x2, x3, tension) {\n\t\t\t\tinit(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n\t\t\t},\n\t\t\tinitNonuniformCatmullRom: function (x0, x1, x2, x3, dt0, dt1, dt2) {\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\t\tlet t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n\t\t\t\tlet t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n\t\t\t\tt1 *= dt1;\n\t\t\t\tt2 *= dt1;\n\t\t\t\tinit(x1, x2, t1, t2);\n\t\t\t},\n\t\t\tcalc: function (t) {\n\t\t\t\tconst t2 = t * t;\n\t\t\t\tconst t3 = t2 * t;\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\t\t\t}\n\t\t};\n\t} //\n\n\n\tconst tmp = new Vector3();\n\tconst px = new CubicPoly(),\n\t\t\t\tpy = new CubicPoly(),\n\t\t\t\tpz = new CubicPoly();\n\n\tclass CatmullRomCurve3 extends Curve {\n\t\tconstructor(points = [], closed = false, curveType = 'centripetal', tension = 0.5) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CatmullRomCurve3';\n\t\t\tthis.points = points;\n\t\t\tthis.closed = closed;\n\t\t\tthis.curveType = curveType;\n\t\t\tthis.tension = tension;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst points = this.points;\n\t\t\tconst l = points.length;\n\t\t\tconst p = (l - (this.closed ? 0 : 1)) * t;\n\t\t\tlet intPoint = Math.floor(p);\n\t\t\tlet weight = p - intPoint;\n\n\t\t\tif (this.closed) {\n\t\t\t\tintPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / l) + 1) * l;\n\t\t\t} else if (weight === 0 && intPoint === l - 1) {\n\t\t\t\tintPoint = l - 2;\n\t\t\t\tweight = 1;\n\t\t\t}\n\n\t\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\t\tif (this.closed || intPoint > 0) {\n\t\t\t\tp0 = points[(intPoint - 1) % l];\n\t\t\t} else {\n\t\t\t\t// extrapolate first point\n\t\t\t\ttmp.subVectors(points[0], points[1]).add(points[0]);\n\t\t\t\tp0 = tmp;\n\t\t\t}\n\n\t\t\tconst p1 = points[intPoint % l];\n\t\t\tconst p2 = points[(intPoint + 1) % l];\n\n\t\t\tif (this.closed || intPoint + 2 < l) {\n\t\t\t\tp3 = points[(intPoint + 2) % l];\n\t\t\t} else {\n\t\t\t\t// extrapolate last point\n\t\t\t\ttmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n\t\t\t\tp3 = tmp;\n\t\t\t}\n\n\t\t\tif (this.curveType === 'centripetal' || this.curveType === 'chordal') {\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\t\tlet dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n\t\t\t\tlet dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n\t\t\t\tlet dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n\t\t\t\tif (dt1 < 1e-4) dt1 = 1.0;\n\t\t\t\tif (dt0 < 1e-4) dt0 = dt1;\n\t\t\t\tif (dt2 < 1e-4) dt2 = dt1;\n\t\t\t\tpx.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n\t\t\t\tpy.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n\t\t\t\tpz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n\t\t\t} else if (this.curveType === 'catmullrom') {\n\t\t\t\tpx.initCatmullRom(p0.x, p1.x, p2.x, p3.x, this.tension);\n\t\t\t\tpy.initCatmullRom(p0.y, p1.y, p2.y, p3.y, this.tension);\n\t\t\t\tpz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, this.tension);\n\t\t\t}\n\n\t\t\tpoint.set(px.calc(weight), py.calc(weight), pz.calc(weight));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = source.points.length; i < l; i++) {\n\t\t\t\tconst point = source.points[i];\n\t\t\t\tthis.points.push(point.clone());\n\t\t\t}\n\n\t\t\tthis.closed = source.closed;\n\t\t\tthis.curveType = source.curveType;\n\t\t\tthis.tension = source.tension;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.points = [];\n\n\t\t\tfor (let i = 0, l = this.points.length; i < l; i++) {\n\t\t\t\tconst point = this.points[i];\n\t\t\t\tdata.points.push(point.toArray());\n\t\t\t}\n\n\t\t\tdata.closed = this.closed;\n\t\t\tdata.curveType = this.curveType;\n\t\t\tdata.tension = this.tension;\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = json.points.length; i < l; i++) {\n\t\t\t\tconst point = json.points[i];\n\t\t\t\tthis.points.push(new Vector3().fromArray(point));\n\t\t\t}\n\n\t\t\tthis.closed = json.closed;\n\t\t\tthis.curveType = json.curveType;\n\t\t\tthis.tension = json.tension;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n\t/**\n\t * Bezier Curves formulas obtained from\n\t * http://en.wikipedia.org/wiki/Bézier_curve\n\t */\n\tfunction CatmullRom(t, p0, p1, p2, p3) {\n\t\tconst v0 = (p2 - p0) * 0.5;\n\t\tconst v1 = (p3 - p1) * 0.5;\n\t\tconst t2 = t * t;\n\t\tconst t3 = t * t2;\n\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n\t} //\n\n\n\tfunction QuadraticBezierP0(t, p) {\n\t\tconst k = 1 - t;\n\t\treturn k * k * p;\n\t}\n\n\tfunction QuadraticBezierP1(t, p) {\n\t\treturn 2 * (1 - t) * t * p;\n\t}\n\n\tfunction QuadraticBezierP2(t, p) {\n\t\treturn t * t * p;\n\t}\n\n\tfunction QuadraticBezier(t, p0, p1, p2) {\n\t\treturn QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\n\t} //\n\n\n\tfunction CubicBezierP0(t, p) {\n\t\tconst k = 1 - t;\n\t\treturn k * k * k * p;\n\t}\n\n\tfunction CubicBezierP1(t, p) {\n\t\tconst k = 1 - t;\n\t\treturn 3 * k * k * t * p;\n\t}\n\n\tfunction CubicBezierP2(t, p) {\n\t\treturn 3 * (1 - t) * t * t * p;\n\t}\n\n\tfunction CubicBezierP3(t, p) {\n\t\treturn t * t * t * p;\n\t}\n\n\tfunction CubicBezier(t, p0, p1, p2, p3) {\n\t\treturn CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\n\t}\n\n\tclass CubicBezierCurve extends Curve {\n\t\tconstructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CubicBezierCurve';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2,\n\t\t\t\t\t\tv3 = this.v3;\n\t\t\tpoint.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\tthis.v3.copy(source.v3);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\tdata.v3 = this.v3.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\tthis.v3.fromArray(json.v3);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\n\tclass CubicBezierCurve3 extends Curve {\n\t\tconstructor(v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CubicBezierCurve3';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2,\n\t\t\t\t\t\tv3 = this.v3;\n\t\t\tpoint.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\tthis.v3.copy(source.v3);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\tdata.v3 = this.v3.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\tthis.v3.fromArray(json.v3);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\n\tclass LineCurve extends Curve {\n\t\tconstructor(v1 = new Vector2(), v2 = new Vector2()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineCurve';\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\n\t\t\tif (t === 1) {\n\t\t\t\tpoint.copy(this.v2);\n\t\t\t} else {\n\t\t\t\tpoint.copy(this.v2).sub(this.v1);\n\t\t\t\tpoint.multiplyScalar(t).add(this.v1);\n\t\t\t}\n\n\t\t\treturn point;\n\t\t} // Line curve is linear, so we can overwrite default getPointAt\n\n\n\t\tgetPointAt(u, optionalTarget) {\n\t\t\treturn this.getPoint(u, optionalTarget);\n\t\t}\n\n\t\tgetTangent(t, optionalTarget) {\n\t\t\tconst tangent = optionalTarget || new Vector2();\n\t\t\ttangent.copy(this.v2).sub(this.v1).normalize();\n\t\t\treturn tangent;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineCurve.prototype.isLineCurve = true;\n\n\tclass LineCurve3 extends Curve {\n\t\tconstructor(v1 = new Vector3(), v2 = new Vector3()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineCurve3';\n\t\t\tthis.isLineCurve3 = true;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\n\t\t\tif (t === 1) {\n\t\t\t\tpoint.copy(this.v2);\n\t\t\t} else {\n\t\t\t\tpoint.copy(this.v2).sub(this.v1);\n\t\t\t\tpoint.multiplyScalar(t).add(this.v1);\n\t\t\t}\n\n\t\t\treturn point;\n\t\t} // Line curve is linear, so we can overwrite default getPointAt\n\n\n\t\tgetPointAt(u, optionalTarget) {\n\t\t\treturn this.getPoint(u, optionalTarget);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass QuadraticBezierCurve extends Curve {\n\t\tconstructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'QuadraticBezierCurve';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2;\n\t\t\tpoint.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\n\tclass QuadraticBezierCurve3 extends Curve {\n\t\tconstructor(v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'QuadraticBezierCurve3';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2;\n\t\t\tpoint.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\n\tclass SplineCurve extends Curve {\n\t\tconstructor(points = []) {\n\t\t\tsuper();\n\t\t\tthis.type = 'SplineCurve';\n\t\t\tthis.points = points;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst points = this.points;\n\t\t\tconst p = (points.length - 1) * t;\n\t\t\tconst intPoint = Math.floor(p);\n\t\t\tconst weight = p - intPoint;\n\t\t\tconst p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n\t\t\tconst p1 = points[intPoint];\n\t\t\tconst p2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n\t\t\tconst p3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n\t\t\tpoint.set(CatmullRom(weight, p0.x, p1.x, p2.x, p3.x), CatmullRom(weight, p0.y, p1.y, p2.y, p3.y));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = source.points.length; i < l; i++) {\n\t\t\t\tconst point = source.points[i];\n\t\t\t\tthis.points.push(point.clone());\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.points = [];\n\n\t\t\tfor (let i = 0, l = this.points.length; i < l; i++) {\n\t\t\t\tconst point = this.points[i];\n\t\t\t\tdata.points.push(point.toArray());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = json.points.length; i < l; i++) {\n\t\t\t\tconst point = json.points[i];\n\t\t\t\tthis.points.push(new Vector2().fromArray(point));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tvar Curves = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tArcCurve: ArcCurve,\n\t\tCatmullRomCurve3: CatmullRomCurve3,\n\t\tCubicBezierCurve: CubicBezierCurve,\n\t\tCubicBezierCurve3: CubicBezierCurve3,\n\t\tEllipseCurve: EllipseCurve,\n\t\tLineCurve: LineCurve,\n\t\tLineCurve3: LineCurve3,\n\t\tQuadraticBezierCurve: QuadraticBezierCurve,\n\t\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\t\tSplineCurve: SplineCurve\n\t});\n\n\t/**\n\t * Port from https://github.com/mapbox/earcut (v2.2.2)\n\t */\n\tconst Earcut = {\n\t\ttriangulate: function (data, holeIndices, dim = 2) {\n\t\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\t\tconst outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\t\t\tlet outerNode = linkedList(data, 0, outerLen, dim, true);\n\t\t\tconst triangles = [];\n\t\t\tif (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\t\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\t\t\tif (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim); // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\t\tif (data.length > 80 * dim) {\n\t\t\t\tminX = maxX = data[0];\n\t\t\t\tminY = maxY = data[1];\n\n\t\t\t\tfor (let i = dim; i < outerLen; i += dim) {\n\t\t\t\t\tx = data[i];\n\t\t\t\t\ty = data[i + 1];\n\t\t\t\t\tif (x < minX) minX = x;\n\t\t\t\t\tif (y < minY) minY = y;\n\t\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\t} // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\n\t\t\t\tinvSize = Math.max(maxX - minX, maxY - minY);\n\t\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\t\t\t}\n\n\t\t\tearcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\t\t\treturn triangles;\n\t\t}\n\t}; // create a circular doubly linked list from polygon points in the specified winding order\n\n\tfunction linkedList(data, start, end, dim, clockwise) {\n\t\tlet i, last;\n\n\t\tif (clockwise === signedArea(data, start, end, dim) > 0) {\n\t\t\tfor (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n\t\t} else {\n\t\t\tfor (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n\t\t}\n\n\t\tif (last && equals(last, last.next)) {\n\t\t\tremoveNode(last);\n\t\t\tlast = last.next;\n\t\t}\n\n\t\treturn last;\n\t} // eliminate colinear or duplicate points\n\n\n\tfunction filterPoints(start, end) {\n\t\tif (!start) return start;\n\t\tif (!end) end = start;\n\t\tlet p = start,\n\t\t\t\tagain;\n\n\t\tdo {\n\t\t\tagain = false;\n\n\t\t\tif (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n\t\t\t\tremoveNode(p);\n\t\t\t\tp = end = p.prev;\n\t\t\t\tif (p === p.next) break;\n\t\t\t\tagain = true;\n\t\t\t} else {\n\t\t\t\tp = p.next;\n\t\t\t}\n\t\t} while (again || p !== end);\n\n\t\treturn end;\n\t} // main ear slicing loop which triangulates a polygon (given as a linked list)\n\n\n\tfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n\t\tif (!ear) return; // interlink polygon nodes in z-order\n\n\t\tif (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\t\tlet stop = ear,\n\t\t\t\tprev,\n\t\t\t\tnext; // iterate through ears, slicing them one by one\n\n\t\twhile (ear.prev !== ear.next) {\n\t\t\tprev = ear.prev;\n\t\t\tnext = ear.next;\n\n\t\t\tif (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n\t\t\t\t// cut off the triangle\n\t\t\t\ttriangles.push(prev.i / dim);\n\t\t\t\ttriangles.push(ear.i / dim);\n\t\t\t\ttriangles.push(next.i / dim);\n\t\t\t\tremoveNode(ear); // skipping the next vertex leads to less sliver triangles\n\n\t\t\t\tear = next.next;\n\t\t\t\tstop = next.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tear = next; // if we looped through the whole remaining polygon and can't find any more ears\n\n\t\t\tif (ear === stop) {\n\t\t\t\t// try filtering points and slicing again\n\t\t\t\tif (!pass) {\n\t\t\t\t\tearcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1); // if this didn't work, try curing all small self-intersections locally\n\t\t\t\t} else if (pass === 1) {\n\t\t\t\t\tear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n\t\t\t\t\tearcutLinked(ear, triangles, dim, minX, minY, invSize, 2); // as a last resort, try splitting the remaining polygon into two\n\t\t\t\t} else if (pass === 2) {\n\t\t\t\t\tsplitEarcut(ear, triangles, dim, minX, minY, invSize);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} // check whether a polygon node forms a valid ear with adjacent nodes\n\n\n\tfunction isEar(ear) {\n\t\tconst a = ear.prev,\n\t\t\t\t\tb = ear,\n\t\t\t\t\tc = ear.next;\n\t\tif (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\t\t// now make sure we don't have other points inside the potential ear\n\n\t\tlet p = ear.next.next;\n\n\t\twhile (p !== ear.prev) {\n\t\t\tif (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.next;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction isEarHashed(ear, minX, minY, invSize) {\n\t\tconst a = ear.prev,\n\t\t\t\t\tb = ear,\n\t\t\t\t\tc = ear.next;\n\t\tif (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\t\t// triangle bbox; min & max are calculated like this for speed\n\n\t\tconst minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\n\t\t\t\t\tminTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\n\t\t\t\t\tmaxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\n\t\t\t\t\tmaxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y; // z-order range for the current triangle bbox;\n\n\t\tconst minZ = zOrder(minTX, minTY, minX, minY, invSize),\n\t\t\t\t\tmaxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\t\tlet p = ear.prevZ,\n\t\t\t\tn = ear.nextZ; // look for points inside the triangle in both directions\n\n\t\twhile (p && p.z >= minZ && n && n.z <= maxZ) {\n\t\t\tif (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.prevZ;\n\t\t\tif (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n\t\t\tn = n.nextZ;\n\t\t} // look for remaining points in decreasing z-order\n\n\n\t\twhile (p && p.z >= minZ) {\n\t\t\tif (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.prevZ;\n\t\t} // look for remaining points in increasing z-order\n\n\n\t\twhile (n && n.z <= maxZ) {\n\t\t\tif (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n\t\t\tn = n.nextZ;\n\t\t}\n\n\t\treturn true;\n\t} // go through all polygon nodes and cure small local self-intersections\n\n\n\tfunction cureLocalIntersections(start, triangles, dim) {\n\t\tlet p = start;\n\n\t\tdo {\n\t\t\tconst a = p.prev,\n\t\t\t\t\t\tb = p.next.next;\n\n\t\t\tif (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\t\t\t\ttriangles.push(a.i / dim);\n\t\t\t\ttriangles.push(p.i / dim);\n\t\t\t\ttriangles.push(b.i / dim); // remove two nodes involved\n\n\t\t\t\tremoveNode(p);\n\t\t\t\tremoveNode(p.next);\n\t\t\t\tp = start = b;\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\treturn filterPoints(p);\n\t} // try splitting polygon into two and triangulate them independently\n\n\n\tfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n\t\t// look for a valid diagonal that divides the polygon into two\n\t\tlet a = start;\n\n\t\tdo {\n\t\t\tlet b = a.next.next;\n\n\t\t\twhile (b !== a.prev) {\n\t\t\t\tif (a.i !== b.i && isValidDiagonal(a, b)) {\n\t\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\t\tlet c = splitPolygon(a, b); // filter colinear points around the cuts\n\n\t\t\t\t\ta = filterPoints(a, a.next);\n\t\t\t\t\tc = filterPoints(c, c.next); // run earcut on each half\n\n\t\t\t\t\tearcutLinked(a, triangles, dim, minX, minY, invSize);\n\t\t\t\t\tearcutLinked(c, triangles, dim, minX, minY, invSize);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tb = b.next;\n\t\t\t}\n\n\t\t\ta = a.next;\n\t\t} while (a !== start);\n\t} // link every hole into the outer loop, producing a single-ring polygon without holes\n\n\n\tfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n\t\tconst queue = [];\n\t\tlet i, len, start, end, list;\n\n\t\tfor (i = 0, len = holeIndices.length; i < len; i++) {\n\t\t\tstart = holeIndices[i] * dim;\n\t\t\tend = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n\t\t\tlist = linkedList(data, start, end, dim, false);\n\t\t\tif (list === list.next) list.steiner = true;\n\t\t\tqueue.push(getLeftmost(list));\n\t\t}\n\n\t\tqueue.sort(compareX); // process holes from left to right\n\n\t\tfor (i = 0; i < queue.length; i++) {\n\t\t\teliminateHole(queue[i], outerNode);\n\t\t\touterNode = filterPoints(outerNode, outerNode.next);\n\t\t}\n\n\t\treturn outerNode;\n\t}\n\n\tfunction compareX(a, b) {\n\t\treturn a.x - b.x;\n\t} // find a bridge between vertices that connects hole with an outer ring and and link it\n\n\n\tfunction eliminateHole(hole, outerNode) {\n\t\touterNode = findHoleBridge(hole, outerNode);\n\n\t\tif (outerNode) {\n\t\t\tconst b = splitPolygon(outerNode, hole); // filter collinear points around the cuts\n\n\t\t\tfilterPoints(outerNode, outerNode.next);\n\t\t\tfilterPoints(b, b.next);\n\t\t}\n\t} // David Eberly's algorithm for finding a bridge between hole and outer polygon\n\n\n\tfunction findHoleBridge(hole, outerNode) {\n\t\tlet p = outerNode;\n\t\tconst hx = hole.x;\n\t\tconst hy = hole.y;\n\t\tlet qx = -Infinity,\n\t\t\t\tm; // find a segment intersected by a ray from the hole's leftmost point to the left;\n\t\t// segment's endpoint with lesser x will be potential connection point\n\n\t\tdo {\n\t\t\tif (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n\t\t\t\tconst x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n\n\t\t\t\tif (x <= hx && x > qx) {\n\t\t\t\t\tqx = x;\n\n\t\t\t\t\tif (x === hx) {\n\t\t\t\t\t\tif (hy === p.y) return p;\n\t\t\t\t\t\tif (hy === p.next.y) return p.next;\n\t\t\t\t\t}\n\n\t\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== outerNode);\n\n\t\tif (!m) return null;\n\t\tif (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\t\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t\t// if there are no points found, we have a valid connection;\n\t\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\t\tconst stop = m,\n\t\t\t\t\tmx = m.x,\n\t\t\t\t\tmy = m.y;\n\t\tlet tanMin = Infinity,\n\t\t\t\ttan;\n\t\tp = m;\n\n\t\tdo {\n\t\t\tif (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\t\t\t\ttan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n\t\t\t\tif (locallyInside(p, hole) && (tan < tanMin || tan === tanMin && (p.x > m.x || p.x === m.x && sectorContainsSector(m, p)))) {\n\t\t\t\t\tm = p;\n\t\t\t\t\ttanMin = tan;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== stop);\n\n\t\treturn m;\n\t} // whether sector in vertex m contains sector in vertex p in the same coordinates\n\n\n\tfunction sectorContainsSector(m, p) {\n\t\treturn area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n\t} // interlink polygon nodes in z-order\n\n\n\tfunction indexCurve(start, minX, minY, invSize) {\n\t\tlet p = start;\n\n\t\tdo {\n\t\t\tif (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n\t\t\tp.prevZ = p.prev;\n\t\t\tp.nextZ = p.next;\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\tp.prevZ.nextZ = null;\n\t\tp.prevZ = null;\n\t\tsortLinked(p);\n\t} // Simon Tatham's linked list merge sort algorithm\n\t// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\n\n\tfunction sortLinked(list) {\n\t\tlet i,\n\t\t\t\tp,\n\t\t\t\tq,\n\t\t\t\te,\n\t\t\t\ttail,\n\t\t\t\tnumMerges,\n\t\t\t\tpSize,\n\t\t\t\tqSize,\n\t\t\t\tinSize = 1;\n\n\t\tdo {\n\t\t\tp = list;\n\t\t\tlist = null;\n\t\t\ttail = null;\n\t\t\tnumMerges = 0;\n\n\t\t\twhile (p) {\n\t\t\t\tnumMerges++;\n\t\t\t\tq = p;\n\t\t\t\tpSize = 0;\n\n\t\t\t\tfor (i = 0; i < inSize; i++) {\n\t\t\t\t\tpSize++;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tif (!q) break;\n\t\t\t\t}\n\n\t\t\t\tqSize = inSize;\n\n\t\t\t\twhile (pSize > 0 || qSize > 0 && q) {\n\t\t\t\t\tif (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n\t\t\t\t\t\te = p;\n\t\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\t\tpSize--;\n\t\t\t\t\t} else {\n\t\t\t\t\t\te = q;\n\t\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\t\tqSize--;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tail) tail.nextZ = e;else list = e;\n\t\t\t\t\te.prevZ = tail;\n\t\t\t\t\ttail = e;\n\t\t\t\t}\n\n\t\t\t\tp = q;\n\t\t\t}\n\n\t\t\ttail.nextZ = null;\n\t\t\tinSize *= 2;\n\t\t} while (numMerges > 1);\n\n\t\treturn list;\n\t} // z-order of a point given coords and inverse of the longer side of data bbox\n\n\n\tfunction zOrder(x, y, minX, minY, invSize) {\n\t\t// coords are transformed into non-negative 15-bit integer range\n\t\tx = 32767 * (x - minX) * invSize;\n\t\ty = 32767 * (y - minY) * invSize;\n\t\tx = (x | x << 8) & 0x00FF00FF;\n\t\tx = (x | x << 4) & 0x0F0F0F0F;\n\t\tx = (x | x << 2) & 0x33333333;\n\t\tx = (x | x << 1) & 0x55555555;\n\t\ty = (y | y << 8) & 0x00FF00FF;\n\t\ty = (y | y << 4) & 0x0F0F0F0F;\n\t\ty = (y | y << 2) & 0x33333333;\n\t\ty = (y | y << 1) & 0x55555555;\n\t\treturn x | y << 1;\n\t} // find the leftmost node of a polygon ring\n\n\n\tfunction getLeftmost(start) {\n\t\tlet p = start,\n\t\t\t\tleftmost = start;\n\n\t\tdo {\n\t\t\tif (p.x < leftmost.x || p.x === leftmost.x && p.y < leftmost.y) leftmost = p;\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\treturn leftmost;\n\t} // check if a point lies within a convex triangle\n\n\n\tfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n\t\treturn (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n\t} // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\n\n\tfunction isValidDiagonal(a, b) {\n\t\treturn a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && ( // dones't intersect other edges\n\t\tlocallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && ( // locally visible\n\t\tarea(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n\t\tequals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n\t} // signed area of a triangle\n\n\n\tfunction area(p, q, r) {\n\t\treturn (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n\t} // check if two points are equal\n\n\n\tfunction equals(p1, p2) {\n\t\treturn p1.x === p2.x && p1.y === p2.y;\n\t} // check if two segments intersect\n\n\n\tfunction intersects(p1, q1, p2, q2) {\n\t\tconst o1 = sign(area(p1, q1, p2));\n\t\tconst o2 = sign(area(p1, q1, q2));\n\t\tconst o3 = sign(area(p2, q2, p1));\n\t\tconst o4 = sign(area(p2, q2, q1));\n\t\tif (o1 !== o2 && o3 !== o4) return true; // general case\n\n\t\tif (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\n\t\tif (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\n\t\tif (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\n\t\tif (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\t\treturn false;\n\t} // for collinear points p, q, r, check if point q lies on segment pr\n\n\n\tfunction onSegment(p, q, r) {\n\t\treturn q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n\t}\n\n\tfunction sign(num) {\n\t\treturn num > 0 ? 1 : num < 0 ? -1 : 0;\n\t} // check if a polygon diagonal intersects any polygon segments\n\n\n\tfunction intersectsPolygon(a, b) {\n\t\tlet p = a;\n\n\t\tdo {\n\t\t\tif (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\n\t\t\tp = p.next;\n\t\t} while (p !== a);\n\n\t\treturn false;\n\t} // check if a polygon diagonal is locally inside the polygon\n\n\n\tfunction locallyInside(a, b) {\n\t\treturn area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n\t} // check if the middle point of a polygon diagonal is inside the polygon\n\n\n\tfunction middleInside(a, b) {\n\t\tlet p = a,\n\t\t\t\tinside = false;\n\t\tconst px = (a.x + b.x) / 2,\n\t\t\t\t\tpy = (a.y + b.y) / 2;\n\n\t\tdo {\n\t\t\tif (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\n\t\t\tp = p.next;\n\t\t} while (p !== a);\n\n\t\treturn inside;\n\t} // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n\t// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\n\n\tfunction splitPolygon(a, b) {\n\t\tconst a2 = new Node(a.i, a.x, a.y),\n\t\t\t\t\tb2 = new Node(b.i, b.x, b.y),\n\t\t\t\t\tan = a.next,\n\t\t\t\t\tbp = b.prev;\n\t\ta.next = b;\n\t\tb.prev = a;\n\t\ta2.next = an;\n\t\tan.prev = a2;\n\t\tb2.next = a2;\n\t\ta2.prev = b2;\n\t\tbp.next = b2;\n\t\tb2.prev = bp;\n\t\treturn b2;\n\t} // create a node and optionally link it with previous one (in a circular doubly linked list)\n\n\n\tfunction insertNode(i, x, y, last) {\n\t\tconst p = new Node(i, x, y);\n\n\t\tif (!last) {\n\t\t\tp.prev = p;\n\t\t\tp.next = p;\n\t\t} else {\n\t\t\tp.next = last.next;\n\t\t\tp.prev = last;\n\t\t\tlast.next.prev = p;\n\t\t\tlast.next = p;\n\t\t}\n\n\t\treturn p;\n\t}\n\n\tfunction removeNode(p) {\n\t\tp.next.prev = p.prev;\n\t\tp.prev.next = p.next;\n\t\tif (p.prevZ) p.prevZ.nextZ = p.nextZ;\n\t\tif (p.nextZ) p.nextZ.prevZ = p.prevZ;\n\t}\n\n\tfunction Node(i, x, y) {\n\t\t// vertex index in coordinates array\n\t\tthis.i = i; // vertex coordinates\n\n\t\tthis.x = x;\n\t\tthis.y = y; // previous and next vertex nodes in a polygon ring\n\n\t\tthis.prev = null;\n\t\tthis.next = null; // z-order curve value\n\n\t\tthis.z = null; // previous and next nodes in z-order\n\n\t\tthis.prevZ = null;\n\t\tthis.nextZ = null; // indicates whether this is a steiner point\n\n\t\tthis.steiner = false;\n\t}\n\n\tfunction signedArea(data, start, end, dim) {\n\t\tlet sum = 0;\n\n\t\tfor (let i = start, j = end - dim; i < end; i += dim) {\n\t\t\tsum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n\t\t\tj = i;\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\tclass ShapeUtils {\n\t\t// calculate area of the contour polygon\n\t\tstatic area(contour) {\n\t\t\tconst n = contour.length;\n\t\t\tlet a = 0.0;\n\n\t\t\tfor (let p = n - 1, q = 0; q < n; p = q++) {\n\t\t\t\ta += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\t\t}\n\n\t\tstatic isClockWise(pts) {\n\t\t\treturn ShapeUtils.area(pts) < 0;\n\t\t}\n\n\t\tstatic triangulateShape(contour, holes) {\n\t\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\n\t\t\tconst holeIndices = []; // array of hole indices\n\n\t\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\t\tremoveDupEndPts(contour);\n\t\t\taddContour(vertices, contour); //\n\n\t\t\tlet holeIndex = contour.length;\n\t\t\tholes.forEach(removeDupEndPts);\n\n\t\t\tfor (let i = 0; i < holes.length; i++) {\n\t\t\t\tholeIndices.push(holeIndex);\n\t\t\t\tholeIndex += holes[i].length;\n\t\t\t\taddContour(vertices, holes[i]);\n\t\t\t} //\n\n\n\t\t\tconst triangles = Earcut.triangulate(vertices, holeIndices); //\n\n\t\t\tfor (let i = 0; i < triangles.length; i += 3) {\n\t\t\t\tfaces.push(triangles.slice(i, i + 3));\n\t\t\t}\n\n\t\t\treturn faces;\n\t\t}\n\n\t}\n\n\tfunction removeDupEndPts(points) {\n\t\tconst l = points.length;\n\n\t\tif (l > 2 && points[l - 1].equals(points[0])) {\n\t\t\tpoints.pop();\n\t\t}\n\t}\n\n\tfunction addContour(vertices, contour) {\n\t\tfor (let i = 0; i < contour.length; i++) {\n\t\t\tvertices.push(contour[i].x);\n\t\t\tvertices.push(contour[i].y);\n\t\t}\n\t}\n\n\t/**\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *\tcurveSegments: <int>, // number of points on the curves\n\t *\tsteps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *\tdepth: <float>, // Depth to extrude the shape\n\t *\n\t *\tbevelEnabled: <bool>, // turn on bevel\n\t *\tbevelThickness: <float>, // how deep into the original shape bevel goes\n\t *\tbevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n\t *\tbevelOffset: <float>, // how far from shape outline does bevel start\n\t *\tbevelSegments: <int>, // number of bevel layers\n\t *\n\t *\textrudePath: <THREE.Curve> // curve to extrude shape along\n\t *\n\t *\tUVGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t */\n\n\tclass ExtrudeGeometry extends BufferGeometry {\n\t\tconstructor(shapes, options) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ExtrudeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tshapes: shapes,\n\t\t\t\toptions: options\n\t\t\t};\n\t\t\tshapes = Array.isArray(shapes) ? shapes : [shapes];\n\t\t\tconst scope = this;\n\t\t\tconst verticesArray = [];\n\t\t\tconst uvArray = [];\n\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\taddShape(shape);\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(verticesArray, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvArray, 2));\n\t\t\tthis.computeVertexNormals(); // functions\n\n\t\t\tfunction addShape(shape) {\n\t\t\t\tconst placeholder = []; // options\n\n\t\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\t\tlet depth = options.depth !== undefined ? options.depth : 100;\n\t\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\t\t\t\tconst extrudePath = options.extrudePath;\n\t\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator; // deprecated options\n\n\t\t\t\tif (options.amount !== undefined) {\n\t\t\t\t\tconsole.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');\n\t\t\t\t\tdepth = options.amount;\n\t\t\t\t} //\n\n\n\t\t\t\tlet extrudePts,\n\t\t\t\t\t\textrudeByPath = false;\n\t\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\t\tif (extrudePath) {\n\t\t\t\t\textrudePts = extrudePath.getSpacedPoints(steps);\n\t\t\t\t\textrudeByPath = true;\n\t\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\t\t\t\t\t// SETUP TNB variables\n\t\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\t\tsplineTube = extrudePath.computeFrenetFrames(steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\t\tbinormal = new Vector3();\n\t\t\t\t\tnormal = new Vector3();\n\t\t\t\t\tposition2 = new Vector3();\n\t\t\t\t} // Safeguards if bevels are not enabled\n\n\n\t\t\t\tif (!bevelEnabled) {\n\t\t\t\t\tbevelSegments = 0;\n\t\t\t\t\tbevelThickness = 0;\n\t\t\t\t\tbevelSize = 0;\n\t\t\t\t\tbevelOffset = 0;\n\t\t\t\t} // Variables initialization\n\n\n\t\t\t\tconst shapePoints = shape.extractPoints(curveSegments);\n\t\t\t\tlet vertices = shapePoints.shape;\n\t\t\t\tconst holes = shapePoints.holes;\n\t\t\t\tconst reverse = !ShapeUtils.isClockWise(vertices);\n\n\t\t\t\tif (reverse) {\n\t\t\t\t\tvertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\n\t\t\t\t\t\tif (ShapeUtils.isClockWise(ahole)) {\n\t\t\t\t\t\t\tholes[h] = ahole.reverse();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst faces = ShapeUtils.triangulateShape(vertices, holes);\n\t\t\t\t/* Vertices */\n\n\t\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\tvertices = vertices.concat(ahole);\n\t\t\t\t}\n\n\t\t\t\tfunction scalePt2(pt, vec, size) {\n\t\t\t\t\tif (!vec) console.error('THREE.ExtrudeGeometry: vec does not exist');\n\t\t\t\t\treturn vec.clone().multiplyScalar(size).add(pt);\n\t\t\t\t}\n\n\t\t\t\tconst vlen = vertices.length,\n\t\t\t\t\t\t\tflen = faces.length; // Find directions for point movement\n\n\t\t\t\tfunction getBevelVec(inPt, inPrev, inNext) {\n\t\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t\t//\t shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t\t//\n\t\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t\t//\tadjacent edges of inPt at a distance of 1 unit on the left side.\n\t\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\t\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\t\t\t\t\tconst v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n\t\t\t\t\tconst collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n\t\t\t\t\tif (Math.abs(collinear0) > Number.EPSILON) {\n\t\t\t\t\t\t// not collinear\n\t\t\t\t\t\t// length of vectors for normalizing\n\t\t\t\t\t\tconst v_prev_len = Math.sqrt(v_prev_lensq);\n\t\t\t\t\t\tconst v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n\t\t\t\t\t\tconst ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n\t\t\t\t\t\tconst ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n\t\t\t\t\t\tconst ptNextShift_x = inNext.x - v_next_y / v_next_len;\n\t\t\t\t\t\tconst ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n\t\t\t\t\t\tconst sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n\t\t\t\t\t\tv_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n\t\t\t\t\t\tv_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t\t//\tbut prevent crazy spikes\n\n\t\t\t\t\t\tconst v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n\t\t\t\t\t\tif (v_trans_lensq <= 2) {\n\t\t\t\t\t\t\treturn new Vector2(v_trans_x, v_trans_y);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_trans_lensq / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// handle special case of collinear edges\n\t\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\t\tif (v_prev_x > Number.EPSILON) {\n\t\t\t\t\t\t\tif (v_next_x > Number.EPSILON) {\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (v_prev_x < -Number.EPSILON) {\n\t\t\t\t\t\t\t\tif (v_next_x < -Number.EPSILON) {\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (direction_eq) {\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\t\tv_trans_x = -v_prev_y;\n\t\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_prev_lensq);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_prev_lensq / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n\t\t\t\t}\n\n\t\t\t\tconst contourMovements = [];\n\n\t\t\t\tfor (let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n\t\t\t\t\tif (j === il) j = 0;\n\t\t\t\t\tif (k === il) k = 0; //\t(j)---(i)---(k)\n\t\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\t\tcontourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\n\t\t\t\t}\n\n\t\t\t\tconst holesMovements = [];\n\t\t\t\tlet oneHoleMovements,\n\t\t\t\t\t\tverticesMovements = contourMovements.concat();\n\n\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\toneHoleMovements = [];\n\n\t\t\t\t\tfor (let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n\t\t\t\t\t\tif (j === il) j = 0;\n\t\t\t\t\t\tif (k === il) k = 0; //\t(j)---(i)---(k)\n\n\t\t\t\t\t\toneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\n\t\t\t\t\t}\n\n\t\t\t\t\tholesMovements.push(oneHoleMovements);\n\t\t\t\t\tverticesMovements = verticesMovements.concat(oneHoleMovements);\n\t\t\t\t} // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n\t\t\t\tfor (let b = 0; b < bevelSegments; b++) {\n\t\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\t\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\t\tconst z = bevelThickness * Math.cos(t * Math.PI / 2);\n\t\t\t\t\tconst bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\n\n\t\t\t\t\tfor (let i = 0, il = contour.length; i < il; i++) {\n\t\t\t\t\t\tconst vert = scalePt2(contour[i], contourMovements[i], bs);\n\t\t\t\t\t\tv(vert.x, vert.y, -z);\n\t\t\t\t\t} // expand holes\n\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\t\toneHoleMovements = holesMovements[h];\n\n\t\t\t\t\t\tfor (let i = 0, il = ahole.length; i < il; i++) {\n\t\t\t\t\t\t\tconst vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\t\t\t\t\t\t\tv(vert.x, vert.y, -z);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst bs = bevelSize + bevelOffset; // Back facing vertices\n\n\t\t\t\tfor (let i = 0; i < vlen; i++) {\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\tv(vert.x, vert.y, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\t\t\t\t\t\tnormal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\n\t\t\t\t\t\tbinormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\n\t\t\t\t\t\tposition2.copy(extrudePts[0]).add(normal).add(binormal);\n\t\t\t\t\t\tv(position2.x, position2.y, position2.z);\n\t\t\t\t\t}\n\t\t\t\t} // Add stepped vertices...\n\t\t\t\t// Including front facing vertices\n\n\n\t\t\t\tfor (let s = 1; s <= steps; s++) {\n\t\t\t\t\tfor (let i = 0; i < vlen; i++) {\n\t\t\t\t\t\tconst vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n\t\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\t\tv(vert.x, vert.y, depth / steps * s);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\t\t\t\t\t\t\tnormal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\n\t\t\t\t\t\t\tbinormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\n\t\t\t\t\t\t\tposition2.copy(extrudePts[s]).add(normal).add(binormal);\n\t\t\t\t\t\t\tv(position2.x, position2.y, position2.z);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // Add bevel segments planes\n\t\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n\t\t\t\tfor (let b = bevelSegments - 1; b >= 0; b--) {\n\t\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\t\tconst z = bevelThickness * Math.cos(t * Math.PI / 2);\n\t\t\t\t\tconst bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\n\n\t\t\t\t\tfor (let i = 0, il = contour.length; i < il; i++) {\n\t\t\t\t\t\tconst vert = scalePt2(contour[i], contourMovements[i], bs);\n\t\t\t\t\t\tv(vert.x, vert.y, depth + z);\n\t\t\t\t\t} // expand holes\n\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\t\toneHoleMovements = holesMovements[h];\n\n\t\t\t\t\t\tfor (let i = 0, il = ahole.length; i < il; i++) {\n\t\t\t\t\t\t\tconst vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\n\t\t\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\t\t\tv(vert.x, vert.y, depth + z);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tv(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* Faces */\n\t\t\t\t// Top and bottom faces\n\n\n\t\t\t\tbuildLidFaces(); // Sides faces\n\n\t\t\t\tbuildSideFaces(); /////\tInternal functions\n\n\t\t\t\tfunction buildLidFaces() {\n\t\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\t\tif (bevelEnabled) {\n\t\t\t\t\t\tlet layer = 0; // steps + 1\n\n\t\t\t\t\t\tlet offset = vlen * layer; // Bottom faces\n\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[2] + offset, face[1] + offset, face[0] + offset);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\t\toffset = vlen * layer; // Top faces\n\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[0] + offset, face[1] + offset, face[2] + offset);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Bottom faces\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[2], face[1], face[0]);\n\t\t\t\t\t\t} // Top faces\n\n\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.addGroup(start, verticesArray.length / 3 - start, 0);\n\t\t\t\t} // Create faces for the z-sides of the shape\n\n\n\t\t\t\tfunction buildSideFaces() {\n\t\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\t\tlet layeroffset = 0;\n\t\t\t\t\tsidewalls(contour, layeroffset);\n\t\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\t\tsidewalls(ahole, layeroffset); //, true\n\n\t\t\t\t\t\tlayeroffset += ahole.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.addGroup(start, verticesArray.length / 3 - start, 1);\n\t\t\t\t}\n\n\t\t\t\tfunction sidewalls(contour, layeroffset) {\n\t\t\t\t\tlet i = contour.length;\n\n\t\t\t\t\twhile (--i >= 0) {\n\t\t\t\t\t\tconst j = i;\n\t\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\t\tif (k < 0) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\t\tfor (let s = 0, sl = steps + bevelSegments * 2; s < sl; s++) {\n\t\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\t\tconst slen2 = vlen * (s + 1);\n\t\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\t\t\t\t\t\t\tf4(a, b, c, d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction v(x, y, z) {\n\t\t\t\t\tplaceholder.push(x);\n\t\t\t\t\tplaceholder.push(y);\n\t\t\t\t\tplaceholder.push(z);\n\t\t\t\t}\n\n\t\t\t\tfunction f3(a, b, c) {\n\t\t\t\t\taddVertex(a);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(c);\n\t\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\t\tconst uvs = uvgen.generateTopUV(scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n\t\t\t\t\taddUV(uvs[0]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[2]);\n\t\t\t\t}\n\n\t\t\t\tfunction f4(a, b, c, d) {\n\t\t\t\t\taddVertex(a);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(d);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(c);\n\t\t\t\t\taddVertex(d);\n\t\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\t\tconst uvs = uvgen.generateSideWallUV(scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n\t\t\t\t\taddUV(uvs[0]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[3]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[2]);\n\t\t\t\t\taddUV(uvs[3]);\n\t\t\t\t}\n\n\t\t\t\tfunction addVertex(index) {\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 0]);\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 1]);\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 2]);\n\t\t\t\t}\n\n\t\t\t\tfunction addUV(vector2) {\n\t\t\t\t\tuvArray.push(vector2.x);\n\t\t\t\t\tuvArray.push(vector2.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tconst shapes = this.parameters.shapes;\n\t\t\tconst options = this.parameters.options;\n\t\t\treturn toJSON$1(shapes, options, data);\n\t\t}\n\n\t\tstatic fromJSON(data, shapes) {\n\t\t\tconst geometryShapes = [];\n\n\t\t\tfor (let j = 0, jl = data.shapes.length; j < jl; j++) {\n\t\t\t\tconst shape = shapes[data.shapes[j]];\n\t\t\t\tgeometryShapes.push(shape);\n\t\t\t}\n\n\t\t\tconst extrudePath = data.options.extrudePath;\n\n\t\t\tif (extrudePath !== undefined) {\n\t\t\t\tdata.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\n\t\t\t}\n\n\t\t\treturn new ExtrudeGeometry(geometryShapes, data.options);\n\t\t}\n\n\t}\n\n\tconst WorldUVGenerator = {\n\t\tgenerateTopUV: function (geometry, vertices, indexA, indexB, indexC) {\n\t\t\tconst a_x = vertices[indexA * 3];\n\t\t\tconst a_y = vertices[indexA * 3 + 1];\n\t\t\tconst b_x = vertices[indexB * 3];\n\t\t\tconst b_y = vertices[indexB * 3 + 1];\n\t\t\tconst c_x = vertices[indexC * 3];\n\t\t\tconst c_y = vertices[indexC * 3 + 1];\n\t\t\treturn [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\n\t\t},\n\t\tgenerateSideWallUV: function (geometry, vertices, indexA, indexB, indexC, indexD) {\n\t\t\tconst a_x = vertices[indexA * 3];\n\t\t\tconst a_y = vertices[indexA * 3 + 1];\n\t\t\tconst a_z = vertices[indexA * 3 + 2];\n\t\t\tconst b_x = vertices[indexB * 3];\n\t\t\tconst b_y = vertices[indexB * 3 + 1];\n\t\t\tconst b_z = vertices[indexB * 3 + 2];\n\t\t\tconst c_x = vertices[indexC * 3];\n\t\t\tconst c_y = vertices[indexC * 3 + 1];\n\t\t\tconst c_z = vertices[indexC * 3 + 2];\n\t\t\tconst d_x = vertices[indexD * 3];\n\t\t\tconst d_y = vertices[indexD * 3 + 1];\n\t\t\tconst d_z = vertices[indexD * 3 + 2];\n\n\t\t\tif (Math.abs(a_y - b_y) < Math.abs(a_x - b_x)) {\n\t\t\t\treturn [new Vector2(a_x, 1 - a_z), new Vector2(b_x, 1 - b_z), new Vector2(c_x, 1 - c_z), new Vector2(d_x, 1 - d_z)];\n\t\t\t} else {\n\t\t\t\treturn [new Vector2(a_y, 1 - a_z), new Vector2(b_y, 1 - b_z), new Vector2(c_y, 1 - c_z), new Vector2(d_y, 1 - d_z)];\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction toJSON$1(shapes, options, data) {\n\t\tdata.shapes = [];\n\n\t\tif (Array.isArray(shapes)) {\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\tdata.shapes.push(shape.uuid);\n\t\t\t}\n\t\t} else {\n\t\t\tdata.shapes.push(shapes.uuid);\n\t\t}\n\n\t\tif (options.extrudePath !== undefined) data.options.extrudePath = options.extrudePath.toJSON();\n\t\treturn data;\n\t}\n\n\tclass IcosahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst t = (1 + Math.sqrt(5)) / 2;\n\t\t\tconst vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n\t\t\tconst indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'IcosahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new IcosahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\tclass LatheGeometry extends BufferGeometry {\n\t\tconstructor(points, segments = 12, phiStart = 0, phiLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LatheGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tpoints: points,\n\t\t\t\tsegments: segments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength\n\t\t\t};\n\t\t\tsegments = Math.floor(segments); // clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\t\tphiLength = clamp(phiLength, 0, Math.PI * 2); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst inverseSegments = 1.0 / segments;\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2(); // generate vertices and uvs\n\n\t\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\t\t\t\tconst sin = Math.sin(phi);\n\t\t\t\tconst cos = Math.cos(phi);\n\n\t\t\t\tfor (let j = 0; j <= points.length - 1; j++) {\n\t\t\t\t\t// vertex\n\t\t\t\t\tvertex.x = points[j].x * sin;\n\t\t\t\t\tvertex.y = points[j].y;\n\t\t\t\t\tvertex.z = points[j].x * cos;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // uv\n\n\t\t\t\t\tuv.x = i / segments;\n\t\t\t\t\tuv.y = j / (points.length - 1);\n\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t}\n\t\t\t} // indices\n\n\n\t\t\tfor (let i = 0; i < segments; i++) {\n\t\t\t\tfor (let j = 0; j < points.length - 1; j++) {\n\t\t\t\t\tconst base = j + i * points.length;\n\t\t\t\t\tconst a = base;\n\t\t\t\t\tconst b = base + points.length;\n\t\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\t\tconst d = base + 1; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // generate normals\n\n\t\t\tthis.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\n\t\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\t\tif (phiLength === Math.PI * 2) {\n\t\t\t\tconst normals = this.attributes.normal.array;\n\t\t\t\tconst n1 = new Vector3();\n\t\t\t\tconst n2 = new Vector3();\n\t\t\t\tconst n = new Vector3(); // this is the buffer offset for the last line of vertices\n\n\t\t\t\tconst base = segments * points.length * 3;\n\n\t\t\t\tfor (let i = 0, j = 0; i < points.length; i++, j += 3) {\n\t\t\t\t\t// select the normal of the vertex in the first line\n\t\t\t\t\tn1.x = normals[j + 0];\n\t\t\t\t\tn1.y = normals[j + 1];\n\t\t\t\t\tn1.z = normals[j + 2]; // select the normal of the vertex in the last line\n\n\t\t\t\t\tn2.x = normals[base + j + 0];\n\t\t\t\t\tn2.y = normals[base + j + 1];\n\t\t\t\t\tn2.z = normals[base + j + 2]; // average normals\n\n\t\t\t\t\tn.addVectors(n1, n2).normalize(); // assign the new values to both normals\n\n\t\t\t\t\tnormals[j + 0] = normals[base + j + 0] = n.x;\n\t\t\t\t\tnormals[j + 1] = normals[base + j + 1] = n.y;\n\t\t\t\t\tnormals[j + 2] = normals[base + j + 2] = n.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new LatheGeometry(data.points, data.segments, data.phiStart, data.phiLength);\n\t\t}\n\n\t}\n\n\tclass OctahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n\t\t\tconst indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'OctahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new OctahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\t/**\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n\t */\n\n\tclass ParametricGeometry extends BufferGeometry {\n\t\tconstructor(func, slices, stacks) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ParametricGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tfunc: func,\n\t\t\t\tslices: slices,\n\t\t\t\tstacks: stacks\n\t\t\t}; // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\t\t\tconst EPS = 0.00001;\n\t\t\tconst normal = new Vector3();\n\t\t\tconst p0 = new Vector3(),\n\t\t\t\t\t\tp1 = new Vector3();\n\t\t\tconst pu = new Vector3(),\n\t\t\t\t\t\tpv = new Vector3();\n\n\t\t\tif (func.length < 3) {\n\t\t\t\tconsole.error('THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.');\n\t\t\t} // generate vertices, normals and uvs\n\n\n\t\t\tconst sliceCount = slices + 1;\n\n\t\t\tfor (let i = 0; i <= stacks; i++) {\n\t\t\t\tconst v = i / stacks;\n\n\t\t\t\tfor (let j = 0; j <= slices; j++) {\n\t\t\t\t\tconst u = j / slices; // vertex\n\n\t\t\t\t\tfunc(u, v, p0);\n\t\t\t\t\tvertices.push(p0.x, p0.y, p0.z); // normal\n\t\t\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\t\t\tif (u - EPS >= 0) {\n\t\t\t\t\t\tfunc(u - EPS, v, p1);\n\t\t\t\t\t\tpu.subVectors(p0, p1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfunc(u + EPS, v, p1);\n\t\t\t\t\t\tpu.subVectors(p1, p0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (v - EPS >= 0) {\n\t\t\t\t\t\tfunc(u, v - EPS, p1);\n\t\t\t\t\t\tpv.subVectors(p0, p1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfunc(u, v + EPS, p1);\n\t\t\t\t\t\tpv.subVectors(p1, p0);\n\t\t\t\t\t} // cross product of tangent vectors returns surface normal\n\n\n\t\t\t\t\tnormal.crossVectors(pu, pv).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(u, v);\n\t\t\t\t}\n\t\t\t} // generate indices\n\n\n\t\t\tfor (let i = 0; i < stacks; i++) {\n\t\t\t\tfor (let j = 0; j < slices; j++) {\n\t\t\t\t\tconst a = i * sliceCount + j;\n\t\t\t\t\tconst b = i * sliceCount + j + 1;\n\t\t\t\t\tconst c = (i + 1) * sliceCount + j + 1;\n\t\t\t\t\tconst d = (i + 1) * sliceCount + j; // faces one and two\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t}\n\n\tclass RingGeometry extends BufferGeometry {\n\t\tconstructor(innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'RingGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tthetaSegments: thetaSegments,\n\t\t\t\tphiSegments: phiSegments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tthetaSegments = Math.max(3, thetaSegments);\n\t\t\tphiSegments = Math.max(1, phiSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // some helper variables\n\n\t\t\tlet radius = innerRadius;\n\t\t\tconst radiusStep = (outerRadius - innerRadius) / phiSegments;\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2(); // generate vertices, normals and uvs\n\n\t\t\tfor (let j = 0; j <= phiSegments; j++) {\n\t\t\t\tfor (let i = 0; i <= thetaSegments; i++) {\n\t\t\t\t\t// values are generate from the inside of the ring to the outside\n\t\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength; // vertex\n\n\t\t\t\t\tvertex.x = radius * Math.cos(segment);\n\t\t\t\t\tvertex.y = radius * Math.sin(segment);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormals.push(0, 0, 1); // uv\n\n\t\t\t\t\tuv.x = (vertex.x / outerRadius + 1) / 2;\n\t\t\t\t\tuv.y = (vertex.y / outerRadius + 1) / 2;\n\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t} // increase the radius for next row of vertices\n\n\n\t\t\t\tradius += radiusStep;\n\t\t\t} // indices\n\n\n\t\t\tfor (let j = 0; j < phiSegments; j++) {\n\t\t\t\tconst thetaSegmentLevel = j * (thetaSegments + 1);\n\n\t\t\t\tfor (let i = 0; i < thetaSegments; i++) {\n\t\t\t\t\tconst segment = i + thetaSegmentLevel;\n\t\t\t\t\tconst a = segment;\n\t\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\t\tconst d = segment + 1; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new RingGeometry(data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass ShapeGeometry extends BufferGeometry {\n\t\tconstructor(shapes, curveSegments = 12) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ShapeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tshapes: shapes,\n\t\t\t\tcurveSegments: curveSegments\n\t\t\t}; // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tlet groupStart = 0;\n\t\t\tlet groupCount = 0; // allow single and array values for \"shapes\" parameter\n\n\t\t\tif (Array.isArray(shapes) === false) {\n\t\t\t\taddShape(shapes);\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < shapes.length; i++) {\n\t\t\t\t\taddShape(shapes[i]);\n\t\t\t\t\tthis.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\n\n\t\t\t\t\tgroupStart += groupCount;\n\t\t\t\t\tgroupCount = 0;\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // helper functions\n\n\t\t\tfunction addShape(shape) {\n\t\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\t\tconst points = shape.extractPoints(curveSegments);\n\t\t\t\tlet shapeVertices = points.shape;\n\t\t\t\tconst shapeHoles = points.holes; // check direction of vertices\n\n\t\t\t\tif (ShapeUtils.isClockWise(shapeVertices) === false) {\n\t\t\t\t\tshapeVertices = shapeVertices.reverse();\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0, l = shapeHoles.length; i < l; i++) {\n\t\t\t\t\tconst shapeHole = shapeHoles[i];\n\n\t\t\t\t\tif (ShapeUtils.isClockWise(shapeHole) === true) {\n\t\t\t\t\t\tshapeHoles[i] = shapeHole.reverse();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles); // join vertices of inner and outer paths to a single array\n\n\t\t\t\tfor (let i = 0, l = shapeHoles.length; i < l; i++) {\n\t\t\t\t\tconst shapeHole = shapeHoles[i];\n\t\t\t\t\tshapeVertices = shapeVertices.concat(shapeHole);\n\t\t\t\t} // vertices, normals, uvs\n\n\n\t\t\t\tfor (let i = 0, l = shapeVertices.length; i < l; i++) {\n\t\t\t\t\tconst vertex = shapeVertices[i];\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, 0);\n\t\t\t\t\tnormals.push(0, 0, 1);\n\t\t\t\t\tuvs.push(vertex.x, vertex.y); // world uvs\n\t\t\t\t} // incides\n\n\n\t\t\t\tfor (let i = 0, l = faces.length; i < l; i++) {\n\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\tconst a = face[0] + indexOffset;\n\t\t\t\t\tconst b = face[1] + indexOffset;\n\t\t\t\t\tconst c = face[2] + indexOffset;\n\t\t\t\t\tindices.push(a, b, c);\n\t\t\t\t\tgroupCount += 3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tconst shapes = this.parameters.shapes;\n\t\t\treturn toJSON(shapes, data);\n\t\t}\n\n\t\tstatic fromJSON(data, shapes) {\n\t\t\tconst geometryShapes = [];\n\n\t\t\tfor (let j = 0, jl = data.shapes.length; j < jl; j++) {\n\t\t\t\tconst shape = shapes[data.shapes[j]];\n\t\t\t\tgeometryShapes.push(shape);\n\t\t\t}\n\n\t\t\treturn new ShapeGeometry(geometryShapes, data.curveSegments);\n\t\t}\n\n\t}\n\n\tfunction toJSON(shapes, data) {\n\t\tdata.shapes = [];\n\n\t\tif (Array.isArray(shapes)) {\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\tdata.shapes.push(shape.uuid);\n\t\t\t}\n\t\t} else {\n\t\t\tdata.shapes.push(shapes.uuid);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tclass SphereGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, widthSegments = 8, heightSegments = 6, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI) {\n\t\t\tsuper();\n\t\t\tthis.type = 'SphereGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\twidthSegments = Math.max(3, Math.floor(widthSegments));\n\t\t\theightSegments = Math.max(2, Math.floor(heightSegments));\n\t\t\tconst thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\n\t\t\tlet index = 0;\n\t\t\tconst grid = [];\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3(); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // generate vertices, normals and uvs\n\n\t\t\tfor (let iy = 0; iy <= heightSegments; iy++) {\n\t\t\t\tconst verticesRow = [];\n\t\t\t\tconst v = iy / heightSegments; // special case for the poles\n\n\t\t\t\tlet uOffset = 0;\n\n\t\t\t\tif (iy == 0 && thetaStart == 0) {\n\t\t\t\t\tuOffset = 0.5 / widthSegments;\n\t\t\t\t} else if (iy == heightSegments && thetaEnd == Math.PI) {\n\t\t\t\t\tuOffset = -0.5 / widthSegments;\n\t\t\t\t}\n\n\t\t\t\tfor (let ix = 0; ix <= widthSegments; ix++) {\n\t\t\t\t\tconst u = ix / widthSegments; // vertex\n\n\t\t\t\t\tvertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\t\tvertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n\t\t\t\t\tvertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormal.copy(vertex).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(u + uOffset, 1 - v);\n\t\t\t\t\tverticesRow.push(index++);\n\t\t\t\t}\n\n\t\t\t\tgrid.push(verticesRow);\n\t\t\t} // indices\n\n\n\t\t\tfor (let iy = 0; iy < heightSegments; iy++) {\n\t\t\t\tfor (let ix = 0; ix < widthSegments; ix++) {\n\t\t\t\t\tconst a = grid[iy][ix + 1];\n\t\t\t\t\tconst b = grid[iy][ix];\n\t\t\t\t\tconst c = grid[iy + 1][ix];\n\t\t\t\t\tconst d = grid[iy + 1][ix + 1];\n\t\t\t\t\tif (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\n\t\t\t\t\tif (iy !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new SphereGeometry(data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass TetrahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n\t\t\tconst indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'TetrahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new TetrahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\t/**\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *\tfont: <THREE.Font>, // font\n\t *\n\t *\tsize: <float>, // size of the text\n\t *\theight: <float>, // thickness to extrude text\n\t *\tcurveSegments: <int>, // number of points on the curves\n\t *\n\t *\tbevelEnabled: <bool>, // turn on bevel\n\t *\tbevelThickness: <float>, // how deep into text bevel goes\n\t *\tbevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n\t *\tbevelOffset: <float> // how far from text outline does bevel start\n\t * }\n\t */\n\n\tclass TextGeometry extends ExtrudeGeometry {\n\t\tconstructor(text, parameters = {}) {\n\t\t\tconst font = parameters.font;\n\n\t\t\tif (!(font && font.isFont)) {\n\t\t\t\tconsole.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');\n\t\t\t\treturn new BufferGeometry();\n\t\t\t}\n\n\t\t\tconst shapes = font.generateShapes(text, parameters.size); // translate parameters to ExtrudeGeometry API\n\n\t\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50; // defaults\n\n\t\t\tif (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\n\t\t\tif (parameters.bevelSize === undefined) parameters.bevelSize = 8;\n\t\t\tif (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\n\t\t\tsuper(shapes, parameters);\n\t\t\tthis.type = 'TextGeometry';\n\t\t}\n\n\t}\n\n\tclass TorusGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'TorusGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tarc: arc\n\t\t\t};\n\t\t\tradialSegments = Math.floor(radialSegments);\n\t\t\ttubularSegments = Math.floor(tubularSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst center = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\tfor (let j = 0; j <= radialSegments; j++) {\n\t\t\t\tfor (let i = 0; i <= tubularSegments; i++) {\n\t\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2; // vertex\n\n\t\t\t\t\tvertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n\t\t\t\t\tvertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n\t\t\t\t\tvertex.z = tube * Math.sin(v);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tcenter.x = radius * Math.cos(u);\n\t\t\t\t\tcenter.y = radius * Math.sin(u);\n\t\t\t\t\tnormal.subVectors(vertex, center).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(i / tubularSegments);\n\t\t\t\t\tuvs.push(j / radialSegments);\n\t\t\t\t}\n\t\t\t} // generate indices\n\n\n\t\t\tfor (let j = 1; j <= radialSegments; j++) {\n\t\t\t\tfor (let i = 1; i <= tubularSegments; i++) {\n\t\t\t\t\t// indices\n\t\t\t\t\tconst a = (tubularSegments + 1) * j + i - 1;\n\t\t\t\t\tconst b = (tubularSegments + 1) * (j - 1) + i - 1;\n\t\t\t\t\tconst c = (tubularSegments + 1) * (j - 1) + i;\n\t\t\t\t\tconst d = (tubularSegments + 1) * j + i; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new TorusGeometry(data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n\t\t}\n\n\t}\n\n\tclass TorusKnotGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3) {\n\t\t\tsuper();\n\t\t\tthis.type = 'TorusKnotGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tp: p,\n\t\t\t\tq: q\n\t\t\t};\n\t\t\ttubularSegments = Math.floor(tubularSegments);\n\t\t\tradialSegments = Math.floor(radialSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3();\n\t\t\tconst P1 = new Vector3();\n\t\t\tconst P2 = new Vector3();\n\t\t\tconst B = new Vector3();\n\t\t\tconst T = new Vector3();\n\t\t\tconst N = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\tfor (let i = 0; i <= tubularSegments; ++i) {\n\t\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\t\t\t\tconst u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\t\tcalculatePositionOnCurve(u, p, q, radius, P1);\n\t\t\t\tcalculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\n\n\t\t\t\tT.subVectors(P2, P1);\n\t\t\t\tN.addVectors(P2, P1);\n\t\t\t\tB.crossVectors(T, N);\n\t\t\t\tN.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\n\n\t\t\t\tB.normalize();\n\t\t\t\tN.normalize();\n\n\t\t\t\tfor (let j = 0; j <= radialSegments; ++j) {\n\t\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\t\tconst cx = -tube * Math.cos(v);\n\t\t\t\t\tconst cy = tube * Math.sin(v); // now calculate the final vertex position.\n\t\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\t\tvertex.x = P1.x + (cx * N.x + cy * B.x);\n\t\t\t\t\tvertex.y = P1.y + (cx * N.y + cy * B.y);\n\t\t\t\t\tvertex.z = P1.z + (cx * N.z + cy * B.z);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\t\tnormal.subVectors(vertex, P1).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(i / tubularSegments);\n\t\t\t\t\tuvs.push(j / radialSegments);\n\t\t\t\t}\n\t\t\t} // generate indices\n\n\n\t\t\tfor (let j = 1; j <= tubularSegments; j++) {\n\t\t\t\tfor (let i = 1; i <= radialSegments; i++) {\n\t\t\t\t\t// indices\n\t\t\t\t\tconst a = (radialSegments + 1) * (j - 1) + (i - 1);\n\t\t\t\t\tconst b = (radialSegments + 1) * j + (i - 1);\n\t\t\t\t\tconst c = (radialSegments + 1) * j + i;\n\t\t\t\t\tconst d = (radialSegments + 1) * (j - 1) + i; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // this function calculates the current position on the torus curve\n\n\t\t\tfunction calculatePositionOnCurve(u, p, q, radius, position) {\n\t\t\t\tconst cu = Math.cos(u);\n\t\t\t\tconst su = Math.sin(u);\n\t\t\t\tconst quOverP = q / p * u;\n\t\t\t\tconst cs = Math.cos(quOverP);\n\t\t\t\tposition.x = radius * (2 + cs) * 0.5 * cu;\n\t\t\t\tposition.y = radius * (2 + cs) * su * 0.5;\n\t\t\t\tposition.z = radius * Math.sin(quOverP) * 0.5;\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new TorusKnotGeometry(data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n\t\t}\n\n\t}\n\n\tclass TubeGeometry extends BufferGeometry {\n\t\tconstructor(path, tubularSegments = 64, radius = 1, radialSegments = 8, closed = false) {\n\t\t\tsuper();\n\t\t\tthis.type = 'TubeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tpath: path,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradius: radius,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tclosed: closed\n\t\t\t};\n\t\t\tconst frames = path.computeFrenetFrames(tubularSegments, closed); // expose internals\n\n\t\t\tthis.tangents = frames.tangents;\n\t\t\tthis.normals = frames.normals;\n\t\t\tthis.binormals = frames.binormals; // helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3();\n\t\t\tconst uv = new Vector2();\n\t\t\tlet P = new Vector3(); // buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\t\t\tconst indices = []; // create buffer data\n\n\t\t\tgenerateBufferData(); // build geometry\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // functions\n\n\t\t\tfunction generateBufferData() {\n\t\t\t\tfor (let i = 0; i < tubularSegments; i++) {\n\t\t\t\t\tgenerateSegment(i);\n\t\t\t\t} // if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t\t// at the regular position on the given path\n\t\t\t\t//\n\t\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\n\t\t\t\tgenerateSegment(closed === false ? tubularSegments : 0); // uvs are generated in a separate function.\n\t\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\t\tgenerateUVs(); // finally create faces\n\n\t\t\t\tgenerateIndices();\n\t\t\t}\n\n\t\t\tfunction generateSegment(i) {\n\t\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\t\t\t\tP = path.getPointAt(i / tubularSegments, P); // retrieve corresponding normal and binormal\n\n\t\t\t\tconst N = frames.normals[i];\n\t\t\t\tconst B = frames.binormals[i]; // generate normals and vertices for the current segment\n\n\t\t\t\tfor (let j = 0; j <= radialSegments; j++) {\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\t\tconst sin = Math.sin(v);\n\t\t\t\t\tconst cos = -Math.cos(v); // normal\n\n\t\t\t\t\tnormal.x = cos * N.x + sin * B.x;\n\t\t\t\t\tnormal.y = cos * N.y + sin * B.y;\n\t\t\t\t\tnormal.z = cos * N.z + sin * B.z;\n\t\t\t\t\tnormal.normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // vertex\n\n\t\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\t\tvertex.z = P.z + radius * normal.z;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateIndices() {\n\t\t\t\tfor (let j = 1; j <= tubularSegments; j++) {\n\t\t\t\t\tfor (let i = 1; i <= radialSegments; i++) {\n\t\t\t\t\t\tconst a = (radialSegments + 1) * (j - 1) + (i - 1);\n\t\t\t\t\t\tconst b = (radialSegments + 1) * j + (i - 1);\n\t\t\t\t\t\tconst c = (radialSegments + 1) * j + i;\n\t\t\t\t\t\tconst d = (radialSegments + 1) * (j - 1) + i; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateUVs() {\n\t\t\t\tfor (let i = 0; i <= tubularSegments; i++) {\n\t\t\t\t\tfor (let j = 0; j <= radialSegments; j++) {\n\t\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\t\tuv.y = j / radialSegments;\n\t\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.path = this.parameters.path.toJSON();\n\t\t\treturn data;\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\treturn new TubeGeometry(new Curves[data.path.type]().fromJSON(data.path), data.tubularSegments, data.radius, data.radialSegments, data.closed);\n\t\t}\n\n\t}\n\n\tclass WireframeGeometry extends BufferGeometry {\n\t\tconstructor(geometry) {\n\t\t\tsuper();\n\t\t\tthis.type = 'WireframeGeometry';\n\n\t\t\tif (geometry.isGeometry === true) {\n\t\t\t\tconsole.error('THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\treturn;\n\t\t\t} // buffer\n\n\n\t\t\tconst vertices = []; // helper variables\n\n\t\t\tconst edge = [0, 0],\n\t\t\t\t\t\tedges = {};\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tif (geometry.index !== null) {\n\t\t\t\t// indexed BufferGeometry\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif (groups.length === 0) {\n\t\t\t\t\tgroups = [{\n\t\t\t\t\t\tstart: 0,\n\t\t\t\t\t\tcount: indices.count,\n\t\t\t\t\t\tmaterialIndex: 0\n\t\t\t\t\t}];\n\t\t\t\t} // create a data structure that contains all eges without duplicates\n\n\n\t\t\t\tfor (let o = 0, ol = groups.length; o < ol; ++o) {\n\t\t\t\t\tconst group = groups[o];\n\t\t\t\t\tconst start = group.start;\n\t\t\t\t\tconst count = group.count;\n\n\t\t\t\t\tfor (let i = start, l = start + count; i < l; i += 3) {\n\t\t\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t\t\tconst edge1 = indices.getX(i + j);\n\t\t\t\t\t\t\tconst edge2 = indices.getX(i + (j + 1) % 3);\n\t\t\t\t\t\t\tedge[0] = Math.min(edge1, edge2); // sorting prevents duplicates\n\n\t\t\t\t\t\t\tedge[1] = Math.max(edge1, edge2);\n\t\t\t\t\t\t\tconst key = edge[0] + ',' + edge[1];\n\n\t\t\t\t\t\t\tif (edges[key] === undefined) {\n\t\t\t\t\t\t\t\tedges[key] = {\n\t\t\t\t\t\t\t\t\tindex1: edge[0],\n\t\t\t\t\t\t\t\t\tindex2: edge[1]\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // generate vertices\n\n\n\t\t\t\tfor (const key in edges) {\n\t\t\t\t\tconst e = edges[key];\n\t\t\t\t\tvertex.fromBufferAttribute(position, e.index1);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t\tvertex.fromBufferAttribute(position, e.index2);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// non-indexed BufferGeometry\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor (let i = 0, l = position.count / 3; i < l; i++) {\n\t\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tvertex.fromBufferAttribute(position, index1);\n\t\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t\t\tconst index2 = 3 * i + (j + 1) % 3;\n\t\t\t\t\t\tvertex.fromBufferAttribute(position, index2);\n\t\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t}\n\n\t}\n\n\tvar Geometries = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tBoxGeometry: BoxGeometry,\n\t\tBoxBufferGeometry: BoxGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tCircleBufferGeometry: CircleGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tExtrudeBufferGeometry: ExtrudeGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronGeometry,\n\t\tParametricGeometry: ParametricGeometry,\n\t\tParametricBufferGeometry: ParametricGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tPlaneBufferGeometry: PlaneGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tShapeBufferGeometry: ShapeGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tSphereBufferGeometry: SphereGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronGeometry,\n\t\tTextGeometry: TextGeometry,\n\t\tTextBufferGeometry: TextGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeGeometry,\n\t\tWireframeGeometry: WireframeGeometry\n\t});\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <THREE.Color>\n\t * }\n\t */\n\n\tclass ShadowMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ShadowMaterial';\n\t\t\tthis.color = new Color(0x000000);\n\t\t\tthis.transparent = true;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\tclass RawShaderMaterial extends ShaderMaterial {\n\t\tconstructor(parameters) {\n\t\t\tsuper(parameters);\n\t\t\tthis.type = 'RawShaderMaterial';\n\t\t}\n\n\t}\n\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\troughness: <float>,\n\t *\tmetalness: <float>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\troughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tmetalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tenvMapIntensity: <float>\n\t *\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>,\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshStandardMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshStandardMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.roughness = 1.0;\n\t\t\tthis.metalness = 0.0;\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.roughnessMap = null;\n\t\t\tthis.metalnessMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.envMapIntensity = 1.0;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\t\tthis.flatShading = false;\n\t\t\tthis.vertexTangents = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': ''\n\t\t\t};\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.roughness = source.roughness;\n\t\t\tthis.metalness = source.metalness;\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.roughnessMap = source.roughnessMap;\n\t\t\tthis.metalnessMap = source.metalnessMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.envMapIntensity = source.envMapIntensity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\tthis.vertexTangents = source.vertexTangents;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tclearcoat: <float>,\n\t *\tclearcoatMap: new THREE.Texture( <Image> ),\n\t *\tclearcoatRoughness: <float>,\n\t *\tclearcoatRoughnessMap: new THREE.Texture( <Image> ),\n\t *\tclearcoatNormalScale: <Vector2>,\n\t *\tclearcoatNormalMap: new THREE.Texture( <Image> ),\n\t *\n\t *\treflectivity: <float>,\n\t *\tior: <float>,\n\t *\n\t *\tsheen: <Color>,\n\t *\n\t *\ttransmission: <float>,\n\t *\ttransmissionMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tthickness: <float>,\n\t *\tthicknessMap: new THREE.Texture( <Image> ),\n\t *\tattenuationDistance: <float>,\n\t *\tattenuationColor: <Color>\n\t * }\n\t */\n\n\tclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': '',\n\t\t\t\t'PHYSICAL': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshPhysicalMaterial';\n\t\t\tthis.clearcoat = 0.0;\n\t\t\tthis.clearcoatMap = null;\n\t\t\tthis.clearcoatRoughness = 0.0;\n\t\t\tthis.clearcoatRoughnessMap = null;\n\t\t\tthis.clearcoatNormalScale = new Vector2(1, 1);\n\t\t\tthis.clearcoatNormalMap = null;\n\t\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\t\tObject.defineProperty(this, 'ior', {\n\t\t\t\tget: function () {\n\t\t\t\t\treturn (1 + 0.4 * this.reflectivity) / (1 - 0.4 * this.reflectivity);\n\t\t\t\t},\n\t\t\t\tset: function (ior) {\n\t\t\t\t\tthis.reflectivity = clamp(2.5 * (ior - 1) / (ior + 1), 0, 1);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.sheen = null; // null will disable sheen bsdf\n\n\t\t\tthis.transmission = 0.0;\n\t\t\tthis.transmissionMap = null;\n\t\t\tthis.thickness = 0.01;\n\t\t\tthis.thicknessMap = null;\n\t\t\tthis.attenuationDistance = 0.0;\n\t\t\tthis.attenuationColor = new Color(1, 1, 1);\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': '',\n\t\t\t\t'PHYSICAL': ''\n\t\t\t};\n\t\t\tthis.clearcoat = source.clearcoat;\n\t\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\t\tthis.clearcoatNormalScale.copy(source.clearcoatNormalScale);\n\t\t\tthis.reflectivity = source.reflectivity;\n\n\t\t\tif (source.sheen) {\n\t\t\t\tthis.sheen = (this.sheen || new Color()).copy(source.sheen);\n\t\t\t} else {\n\t\t\t\tthis.sheen = null;\n\t\t\t}\n\n\t\t\tthis.transmission = source.transmission;\n\t\t\tthis.transmissionMap = source.transmissionMap;\n\t\t\tthis.thickness = source.thickness;\n\t\t\tthis.thicknessMap = source.thicknessMap;\n\t\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\t\tthis.attenuationColor.copy(source.attenuationColor);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\tspecular: <hex>,\n\t *\tshininess: <float>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.MultiplyOperation,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>,\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshPhongMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshPhongMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.specular = new Color(0x111111);\n\t\t\tthis.shininess = 30;\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.specularMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.specular.copy(source.specular);\n\t\t\tthis.shininess = source.shininess;\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.specularMap = source.specularMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\tgradientMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>\n\t * }\n\t */\n\n\tclass MeshToonMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'TOON': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshToonMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.map = null;\n\t\t\tthis.gradientMap = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.gradientMap = source.gradientMap;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\topacity: <float>,\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>,\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshNormalMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshNormalMaterial';\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.fog = false;\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.Multiply,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>\n\t * }\n\t */\n\n\tclass MeshLambertMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshLambertMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.specularMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.specularMap = source.specularMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tmatcap: new THREE.Texture( <Image> ),\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshMatcapMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'MATCAP': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshMatcapMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.matcap = null;\n\t\t\tthis.map = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.defines = {\n\t\t\t\t'MATCAP': ''\n\t\t\t};\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.matcap = source.matcap;\n\t\t\tthis.map = source.map;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tlinewidth: <float>,\n\t *\n\t *\tscale: <float>,\n\t *\tdashSize: <float>,\n\t *\tgapSize: <float>\n\t * }\n\t */\n\n\tclass LineDashedMaterial extends LineBasicMaterial {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineDashedMaterial';\n\t\t\tthis.scale = 1;\n\t\t\tthis.dashSize = 3;\n\t\t\tthis.gapSize = 1;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.scale = source.scale;\n\t\t\tthis.dashSize = source.dashSize;\n\t\t\tthis.gapSize = source.gapSize;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tvar Materials = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshToonMaterial: MeshToonMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tMeshMatcapMaterial: MeshMatcapMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\tconst AnimationUtils = {\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function (array, from, to) {\n\t\t\tif (AnimationUtils.isTypedArray(array)) {\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\t\treturn new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\n\t\t\t}\n\n\t\t\treturn array.slice(from, to);\n\t\t},\n\t\t// converts an array to a specific type\n\t\tconvertArray: function (array, type, forceClone) {\n\t\t\tif (!array || // let 'undefined' and 'null' pass\n\t\t\t!forceClone && array.constructor === type) return array;\n\n\t\t\tif (typeof type.BYTES_PER_ELEMENT === 'number') {\n\t\t\t\treturn new type(array); // create typed array\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call(array); // create Array\n\t\t},\n\t\tisTypedArray: function (object) {\n\t\t\treturn ArrayBuffer.isView(object) && !(object instanceof DataView);\n\t\t},\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function (times) {\n\t\t\tfunction compareTime(i, j) {\n\t\t\t\treturn times[i] - times[j];\n\t\t\t}\n\n\t\t\tconst n = times.length;\n\t\t\tconst result = new Array(n);\n\n\t\t\tfor (let i = 0; i !== n; ++i) result[i] = i;\n\n\t\t\tresult.sort(compareTime);\n\t\t\treturn result;\n\t\t},\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function (values, stride, order) {\n\t\t\tconst nValues = values.length;\n\t\t\tconst result = new values.constructor(nValues);\n\n\t\t\tfor (let i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n\t\t\t\tconst srcOffset = order[i] * stride;\n\n\t\t\t\tfor (let j = 0; j !== stride; ++j) {\n\t\t\t\t\tresult[dstOffset++] = values[srcOffset + j];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function (jsonKeys, times, values, valuePropertyName) {\n\t\t\tlet i = 1,\n\t\t\t\t\tkey = jsonKeys[0];\n\n\t\t\twhile (key !== undefined && key[valuePropertyName] === undefined) {\n\t\t\t\tkey = jsonKeys[i++];\n\t\t\t}\n\n\t\t\tif (key === undefined) return; // no data\n\n\t\t\tlet value = key[valuePropertyName];\n\t\t\tif (value === undefined) return; // no data\n\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalues.push.apply(values, value); // push all elements\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t} else if (value.toArray !== undefined) {\n\t\t\t\t// ...assume THREE.Math-ish\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalue.toArray(values, values.length);\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t} else {\n\t\t\t\t// otherwise push as-is\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalues.push(value);\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t}\n\t\t},\n\t\tsubclip: function (sourceClip, name, startFrame, endFrame, fps = 30) {\n\t\t\tconst clip = sourceClip.clone();\n\t\t\tclip.name = name;\n\t\t\tconst tracks = [];\n\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\n\t\t\t\tconst track = clip.tracks[i];\n\t\t\t\tconst valueSize = track.getValueSize();\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor (let j = 0; j < track.times.length; ++j) {\n\t\t\t\t\tconst frame = track.times[j] * fps;\n\t\t\t\t\tif (frame < startFrame || frame >= endFrame) continue;\n\t\t\t\t\ttimes.push(track.times[j]);\n\n\t\t\t\t\tfor (let k = 0; k < valueSize; ++k) {\n\t\t\t\t\t\tvalues.push(track.values[j * valueSize + k]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (times.length === 0) continue;\n\t\t\t\ttrack.times = AnimationUtils.convertArray(times, track.times.constructor);\n\t\t\t\ttrack.values = AnimationUtils.convertArray(values, track.values.constructor);\n\t\t\t\ttracks.push(track);\n\t\t\t}\n\n\t\t\tclip.tracks = tracks; // find minimum .times value across all tracks in the trimmed clip\n\n\t\t\tlet minStartTime = Infinity;\n\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\n\t\t\t\tif (minStartTime > clip.tracks[i].times[0]) {\n\t\t\t\t\tminStartTime = clip.tracks[i].times[0];\n\t\t\t\t}\n\t\t\t} // shift all tracks such that clip begins at t=0\n\n\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\n\t\t\t\tclip.tracks[i].shift(-1 * minStartTime);\n\t\t\t}\n\n\t\t\tclip.resetDuration();\n\t\t\treturn clip;\n\t\t},\n\t\tmakeClipAdditive: function (targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30) {\n\t\t\tif (fps <= 0) fps = 30;\n\t\t\tconst numTracks = referenceClip.tracks.length;\n\t\t\tconst referenceTime = referenceFrame / fps; // Make each track's values relative to the values at the reference frame\n\n\t\t\tfor (let i = 0; i < numTracks; ++i) {\n\t\t\t\tconst referenceTrack = referenceClip.tracks[i];\n\t\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName; // Skip this track if it's non-numeric\n\n\t\t\t\tif (referenceTrackType === 'bool' || referenceTrackType === 'string') continue; // Find the track in the target clip whose name and type matches the reference track\n\n\t\t\t\tconst targetTrack = targetClip.tracks.find(function (track) {\n\t\t\t\t\treturn track.name === referenceTrack.name && track.ValueTypeName === referenceTrackType;\n\t\t\t\t});\n\t\t\t\tif (targetTrack === undefined) continue;\n\t\t\t\tlet referenceOffset = 0;\n\t\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\t\tif (referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n\t\t\t\t\treferenceOffset = referenceValueSize / 3;\n\t\t\t\t}\n\n\t\t\t\tlet targetOffset = 0;\n\t\t\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\t\t\tif (targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n\t\t\t\t\ttargetOffset = targetValueSize / 3;\n\t\t\t\t}\n\n\t\t\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\t\t\tlet referenceValue; // Find the value to subtract out of the track\n\n\t\t\t\tif (referenceTime <= referenceTrack.times[0]) {\n\t\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\n\t\t\t\t} else if (referenceTime >= referenceTrack.times[lastIndex]) {\n\t\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\n\t\t\t\t} else {\n\t\t\t\t\t// Interpolate to the reference value\n\t\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\t\tinterpolant.evaluate(referenceTime);\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(interpolant.resultBuffer, startIndex, endIndex);\n\t\t\t\t} // Conjugate the quaternion\n\n\n\t\t\t\tif (referenceTrackType === 'quaternion') {\n\t\t\t\t\tconst referenceQuat = new Quaternion().fromArray(referenceValue).normalize().conjugate();\n\t\t\t\t\treferenceQuat.toArray(referenceValue);\n\t\t\t\t} // Subtract the reference value from all of the track values\n\n\n\t\t\t\tconst numTimes = targetTrack.times.length;\n\n\t\t\t\tfor (let j = 0; j < numTimes; ++j) {\n\t\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\t\tif (referenceTrackType === 'quaternion') {\n\t\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(targetTrack.values, valueStart, referenceValue, 0, targetTrack.values, valueStart);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2; // Subtract each value for all other numeric track types\n\n\t\t\t\t\t\tfor (let k = 0; k < valueEnd; ++k) {\n\t\t\t\t\t\t\ttargetTrack.values[valueStart + k] -= referenceValue[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\t\t\treturn targetClip;\n\t\t}\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t */\n\tclass Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tthis.parameterPositions = parameterPositions;\n\t\t\tthis._cachedIndex = 0;\n\t\t\tthis.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n\t\t\tthis.sampleValues = sampleValues;\n\t\t\tthis.valueSize = sampleSize;\n\t\t\tthis.settings = null;\n\t\t\tthis.DefaultSettings_ = {};\n\t\t}\n\n\t\tevaluate(t) {\n\t\t\tconst pp = this.parameterPositions;\n\t\t\tlet i1 = this._cachedIndex,\n\t\t\t\t\tt1 = pp[i1],\n\t\t\t\t\tt0 = pp[i1 - 1];\n\n\t\t\tvalidate_interval: {\n\t\t\t\tseek: {\n\t\t\t\t\tlet right;\n\n\t\t\t\t\tlinear_scan: {\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if (!(t < t1)) {\n\t\t\t\t\t\t\tfor (let giveUpAt = i1 + 2;;) {\n\t\t\t\t\t\t\t\tif (t1 === undefined) {\n\t\t\t\t\t\t\t\t\tif (t < t0) break forward_scan; // after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_(i1 - 1, t, t0);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (i1 === giveUpAt) break; // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[++i1];\n\n\t\t\t\t\t\t\t\tif (t < t1) {\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} // prepare binary search on the right side of the index\n\n\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\t\t\t\t\t\t} //- slower code:\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\n\n\t\t\t\t\t\tif (!(t >= t0)) {\n\t\t\t\t\t\t\t// looping?\n\t\t\t\t\t\t\tconst t1global = pp[1];\n\n\t\t\t\t\t\t\tif (t < t1global) {\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\n\t\t\t\t\t\t\t\tt0 = t1global;\n\t\t\t\t\t\t\t} // linear reverse scan\n\n\n\t\t\t\t\t\t\tfor (let giveUpAt = i1 - 2;;) {\n\t\t\t\t\t\t\t\tif (t0 === undefined) {\n\t\t\t\t\t\t\t\t\t// before start\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_(0, t, t1);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (i1 === giveUpAt) break; // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[--i1 - 1];\n\n\t\t\t\t\t\t\t\tif (t >= t0) {\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} // prepare binary search on the left side of the index\n\n\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\t\t\t\t\t\t} // the interval is valid\n\n\n\t\t\t\t\t\tbreak validate_interval;\n\t\t\t\t\t} // linear scan\n\t\t\t\t\t// binary search\n\n\n\t\t\t\t\twhile (i1 < right) {\n\t\t\t\t\t\tconst mid = i1 + right >>> 1;\n\n\t\t\t\t\t\tif (t < pp[mid]) {\n\t\t\t\t\t\t\tright = mid;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ti1 = mid + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[i1];\n\t\t\t\t\tt0 = pp[i1 - 1]; // check boundary cases, again\n\n\t\t\t\t\tif (t0 === undefined) {\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_(0, t, t1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (t1 === undefined) {\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_(i1 - 1, t0, t);\n\t\t\t\t\t}\n\t\t\t\t} // seek\n\n\n\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\tthis.intervalChanged_(i1, t0, t1);\n\t\t\t} // validate_interval\n\n\n\t\t\treturn this.interpolate_(i1, t0, t, t1);\n\t\t}\n\n\t\tgetSettings_() {\n\t\t\treturn this.settings || this.DefaultSettings_;\n\t\t}\n\n\t\tcopySampleValue_(index) {\n\t\t\t// copies a sample value to the result buffer\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset = index * stride;\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = values[offset + i];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} // Template methods for derived classes:\n\n\n\t\tinterpolate_()\n\t\t/* i1, t0, t, t1 */\n\t\t{\n\t\t\tthrow new Error('call to abstract method'); // implementations shall return this.resultBuffer\n\t\t}\n\n\t\tintervalChanged_()\n\t\t/* i1, t0, t1 */\n\t\t{// empty\n\t\t}\n\n\t} // ALIAS DEFINITIONS\n\n\n\tInterpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\n\tInterpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t */\n\n\tclass CubicInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t\tthis._weightPrev = -0;\n\t\t\tthis._offsetPrev = -0;\n\t\t\tthis._weightNext = -0;\n\t\t\tthis._offsetNext = -0;\n\t\t\tthis.DefaultSettings_ = {\n\t\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t\t};\n\t\t}\n\n\t\tintervalChanged_(i1, t0, t1) {\n\t\t\tconst pp = this.parameterPositions;\n\t\t\tlet iPrev = i1 - 2,\n\t\t\t\t\tiNext = i1 + 1,\n\t\t\t\t\ttPrev = pp[iPrev],\n\t\t\t\t\ttNext = pp[iNext];\n\n\t\t\tif (tPrev === undefined) {\n\t\t\t\tswitch (this.getSettings_().endingStart) {\n\t\t\t\t\tcase ZeroSlopeEnding:\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// ZeroCurvatureEnding\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tNext === undefined) {\n\t\t\t\tswitch (this.getSettings_().endingEnd) {\n\t\t\t\t\tcase ZeroSlopeEnding:\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[1] - pp[0];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// ZeroCurvatureEnding\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst halfDt = (t1 - t0) * 0.5,\n\t\t\t\t\t\tstride = this.valueSize;\n\t\t\tthis._weightPrev = halfDt / (t0 - tPrev);\n\t\t\tthis._weightNext = halfDt / (tNext - t1);\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\t\t}\n\n\t\tinterpolate_(i1, t0, t, t1) {\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\to1 = i1 * stride,\n\t\t\t\t\t\to0 = o1 - stride,\n\t\t\t\t\t\toP = this._offsetPrev,\n\t\t\t\t\t\toN = this._offsetNext,\n\t\t\t\t\t\twP = this._weightPrev,\n\t\t\t\t\t\twN = this._weightNext,\n\t\t\t\t\t\tp = (t - t0) / (t1 - t0),\n\t\t\t\t\t\tpp = p * p,\n\t\t\t\t\t\tppp = pp * p; // evaluate polynomials\n\n\t\t\tconst sP = -wP * ppp + 2 * wP * pp - wP * p;\n\t\t\tconst s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n\t\t\tconst s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n\t\t\tconst sN = wN * ppp - wN * pp; // combine data linearly\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t}\n\n\tclass LinearInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t}\n\n\t\tinterpolate_(i1, t0, t, t1) {\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset1 = i1 * stride,\n\t\t\t\t\t\toffset0 = offset1 - stride,\n\t\t\t\t\t\tweight1 = (t - t0) / (t1 - t0),\n\t\t\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t */\n\n\tclass DiscreteInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t}\n\n\t\tinterpolate_(i1\n\t\t/*, t0, t, t1 */\n\t\t) {\n\t\t\treturn this.copySampleValue_(i1 - 1);\n\t\t}\n\n\t}\n\n\tclass KeyframeTrack {\n\t\tconstructor(name, times, values, interpolation) {\n\t\t\tif (name === undefined) throw new Error('THREE.KeyframeTrack: track name is undefined');\n\t\t\tif (times === undefined || times.length === 0) throw new Error('THREE.KeyframeTrack: no keyframes in track named ' + name);\n\t\t\tthis.name = name;\n\t\t\tthis.times = AnimationUtils.convertArray(times, this.TimeBufferType);\n\t\t\tthis.values = AnimationUtils.convertArray(values, this.ValueBufferType);\n\t\t\tthis.setInterpolation(interpolation || this.DefaultInterpolation);\n\t\t} // Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\n\t\tstatic toJSON(track) {\n\t\t\tconst trackType = track.constructor;\n\t\t\tlet json; // derived classes can define a static toJSON method\n\n\t\t\tif (trackType.toJSON !== this.toJSON) {\n\t\t\t\tjson = trackType.toJSON(track);\n\t\t\t} else {\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray(track.times, Array),\n\t\t\t\t\t'values': AnimationUtils.convertArray(track.values, Array)\n\t\t\t\t};\n\t\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\t\tif (interpolation !== track.DefaultInterpolation) {\n\t\t\t\t\tjson.interpolation = interpolation;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\t\t}\n\n\t\tInterpolantFactoryMethodDiscrete(result) {\n\t\t\treturn new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t\tInterpolantFactoryMethodLinear(result) {\n\t\t\treturn new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t\tInterpolantFactoryMethodSmooth(result) {\n\t\t\treturn new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t\tsetInterpolation(interpolation) {\n\t\t\tlet factoryMethod;\n\n\t\t\tswitch (interpolation) {\n\t\t\t\tcase InterpolateDiscrete:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (factoryMethod === undefined) {\n\t\t\t\tconst message = 'unsupported interpolation for ' + this.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\t\tif (this.createInterpolant === undefined) {\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif (interpolation !== this.DefaultInterpolation) {\n\t\t\t\t\t\tthis.setInterpolation(this.DefaultInterpolation);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(message); // fatal, in this case\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconsole.warn('THREE.KeyframeTrack:', message);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetInterpolation() {\n\t\t\tswitch (this.createInterpolant) {\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\t\t\t\t\treturn InterpolateSmooth;\n\t\t\t}\n\t\t}\n\n\t\tgetValueSize() {\n\t\t\treturn this.values.length / this.times.length;\n\t\t} // move all keyframes either forwards or backwards in time\n\n\n\t\tshift(timeOffset) {\n\t\t\tif (timeOffset !== 0.0) {\n\t\t\t\tconst times = this.times;\n\n\t\t\t\tfor (let i = 0, n = times.length; i !== n; ++i) {\n\t\t\t\t\ttimes[i] += timeOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\n\n\t\tscale(timeScale) {\n\t\t\tif (timeScale !== 1.0) {\n\t\t\t\tconst times = this.times;\n\n\t\t\t\tfor (let i = 0, n = times.length; i !== n; ++i) {\n\t\t\t\t\ttimes[i] *= timeScale;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\n\n\t\ttrim(startTime, endTime) {\n\t\t\tconst times = this.times,\n\t\t\t\t\t\tnKeys = times.length;\n\t\t\tlet from = 0,\n\t\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile (from !== nKeys && times[from] < startTime) {\n\t\t\t\t++from;\n\t\t\t}\n\n\t\t\twhile (to !== -1 && times[to] > endTime) {\n\t\t\t\t--to;\n\t\t\t}\n\n\t\t\t++to; // inclusive -> exclusive bound\n\n\t\t\tif (from !== 0 || to !== nKeys) {\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif (from >= to) {\n\t\t\t\t\tto = Math.max(to, 1);\n\t\t\t\t\tfrom = to - 1;\n\t\t\t\t}\n\n\t\t\t\tconst stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice(times, from, to);\n\t\t\t\tthis.values = AnimationUtils.arraySlice(this.values, from * stride, to * stride);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\n\n\t\tvalidate() {\n\t\t\tlet valid = true;\n\t\t\tconst valueSize = this.getValueSize();\n\n\t\t\tif (valueSize - Math.floor(valueSize) !== 0) {\n\t\t\t\tconsole.error('THREE.KeyframeTrack: Invalid value size in track.', this);\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tconst times = this.times,\n\t\t\t\t\t\tvalues = this.values,\n\t\t\t\t\t\tnKeys = times.length;\n\n\t\t\tif (nKeys === 0) {\n\t\t\t\tconsole.error('THREE.KeyframeTrack: Track is empty.', this);\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tlet prevTime = null;\n\n\t\t\tfor (let i = 0; i !== nKeys; i++) {\n\t\t\t\tconst currTime = times[i];\n\n\t\t\t\tif (typeof currTime === 'number' && isNaN(currTime)) {\n\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime);\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (prevTime !== null && prevTime > currTime) {\n\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime);\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\t\t\t}\n\n\t\t\tif (values !== undefined) {\n\t\t\t\tif (AnimationUtils.isTypedArray(values)) {\n\t\t\t\t\tfor (let i = 0, n = values.length; i !== n; ++i) {\n\t\t\t\t\t\tconst value = values[i];\n\n\t\t\t\t\t\tif (isNaN(value)) {\n\t\t\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Value is not a valid number.', this, i, value);\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn valid;\n\t\t} // removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\n\n\t\toptimize() {\n\t\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\t\tconst times = AnimationUtils.arraySlice(this.times),\n\t\t\t\t\t\tvalues = AnimationUtils.arraySlice(this.values),\n\t\t\t\t\t\tstride = this.getValueSize(),\n\t\t\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\t\t\t\t\t\tlastIndex = times.length - 1;\n\t\t\tlet writeIndex = 1;\n\n\t\t\tfor (let i = 1; i < lastIndex; ++i) {\n\t\t\t\tlet keep = false;\n\t\t\t\tconst time = times[i];\n\t\t\t\tconst timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif (time !== timeNext && (i !== 1 || time !== times[0])) {\n\t\t\t\t\tif (!smoothInterpolation) {\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\t\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor (let j = 0; j !== stride; ++j) {\n\t\t\t\t\t\t\tconst value = values[offset + j];\n\n\t\t\t\t\t\t\tif (value !== values[offsetP + j] || value !== values[offsetN + j]) {\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t}\n\t\t\t\t} // in-place compaction\n\n\n\t\t\t\tif (keep) {\n\t\t\t\t\tif (i !== writeIndex) {\n\t\t\t\t\t\ttimes[writeIndex] = times[i];\n\t\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor (let j = 0; j !== stride; ++j) {\n\t\t\t\t\t\t\tvalues[writeOffset + j] = values[readOffset + j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t++writeIndex;\n\t\t\t\t}\n\t\t\t} // flush last keyframe (compaction looks ahead)\n\n\n\t\t\tif (lastIndex > 0) {\n\t\t\t\ttimes[writeIndex] = times[lastIndex];\n\n\t\t\t\tfor (let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++j) {\n\t\t\t\t\tvalues[writeOffset + j] = values[readOffset + j];\n\t\t\t\t}\n\n\t\t\t\t++writeIndex;\n\t\t\t}\n\n\t\t\tif (writeIndex !== times.length) {\n\t\t\t\tthis.times = AnimationUtils.arraySlice(times, 0, writeIndex);\n\t\t\t\tthis.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n\t\t\t} else {\n\t\t\t\tthis.times = times;\n\t\t\t\tthis.values = values;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\tconst times = AnimationUtils.arraySlice(this.times, 0);\n\t\t\tconst values = AnimationUtils.arraySlice(this.values, 0);\n\t\t\tconst TypedKeyframeTrack = this.constructor;\n\t\t\tconst track = new TypedKeyframeTrack(this.name, times, values); // Interpolant argument to constructor is not saved, so copy the factory method directly.\n\n\t\t\ttrack.createInterpolant = this.createInterpolant;\n\t\t\treturn track;\n\t\t}\n\n\t}\n\n\tKeyframeTrack.prototype.TimeBufferType = Float32Array;\n\tKeyframeTrack.prototype.ValueBufferType = Float32Array;\n\tKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n\t/**\n\t * A Track of Boolean keyframe values.\n\t */\n\n\tclass BooleanKeyframeTrack extends KeyframeTrack {}\n\n\tBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\n\tBooleanKeyframeTrack.prototype.ValueBufferType = Array;\n\tBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n\tBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n\tBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined; // Note: Actually this track could have a optimized / compressed\n\n\t/**\n\t * A Track of keyframe values that represent color.\n\t */\n\n\tclass ColorKeyframeTrack extends KeyframeTrack {}\n\n\tColorKeyframeTrack.prototype.ValueTypeName = 'color'; // ValueBufferType is inherited\n\n\t/**\n\t * A Track of numeric keyframe values.\n\t */\n\n\tclass NumberKeyframeTrack extends KeyframeTrack {}\n\n\tNumberKeyframeTrack.prototype.ValueTypeName = 'number'; // ValueBufferType is inherited\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t */\n\n\tclass QuaternionLinearInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t}\n\n\t\tinterpolate_(i1, t0, t, t1) {\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\talpha = (t - t0) / (t1 - t0);\n\t\t\tlet offset = i1 * stride;\n\n\t\t\tfor (let end = offset + stride; offset !== end; offset += 4) {\n\t\t\t\tQuaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t}\n\n\t/**\n\t * A Track of quaternion keyframe values.\n\t */\n\n\tclass QuaternionKeyframeTrack extends KeyframeTrack {\n\t\tInterpolantFactoryMethodLinear(result) {\n\t\t\treturn new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion'; // ValueBufferType is inherited\n\n\tQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\tQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n\t/**\n\t * A Track that interpolates Strings\n\t */\n\n\tclass StringKeyframeTrack extends KeyframeTrack {}\n\n\tStringKeyframeTrack.prototype.ValueTypeName = 'string';\n\tStringKeyframeTrack.prototype.ValueBufferType = Array;\n\tStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n\tStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n\tStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n\t/**\n\t * A Track of vectored keyframe values.\n\t */\n\n\tclass VectorKeyframeTrack extends KeyframeTrack {}\n\n\tVectorKeyframeTrack.prototype.ValueTypeName = 'vector'; // ValueBufferType is inherited\n\n\tclass AnimationClip {\n\t\tconstructor(name, duration = -1, tracks, blendMode = NormalAnimationBlendMode) {\n\t\t\tthis.name = name;\n\t\t\tthis.tracks = tracks;\n\t\t\tthis.duration = duration;\n\t\t\tthis.blendMode = blendMode;\n\t\t\tthis.uuid = generateUUID(); // this means it should figure out its duration by scanning the tracks\n\n\t\t\tif (this.duration < 0) {\n\t\t\t\tthis.resetDuration();\n\t\t\t}\n\t\t}\n\n\t\tstatic parse(json) {\n\t\t\tconst tracks = [],\n\t\t\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\t\t\tframeTime = 1.0 / (json.fps || 1.0);\n\n\t\t\tfor (let i = 0, n = jsonTracks.length; i !== n; ++i) {\n\t\t\t\ttracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));\n\t\t\t}\n\n\t\t\tconst clip = new this(json.name, json.duration, tracks, json.blendMode);\n\t\t\tclip.uuid = json.uuid;\n\t\t\treturn clip;\n\t\t}\n\n\t\tstatic toJSON(clip) {\n\t\t\tconst tracks = [],\n\t\t\t\t\t\tclipTracks = clip.tracks;\n\t\t\tconst json = {\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks,\n\t\t\t\t'uuid': clip.uuid,\n\t\t\t\t'blendMode': clip.blendMode\n\t\t\t};\n\n\t\t\tfor (let i = 0, n = clipTracks.length; i !== n; ++i) {\n\t\t\t\ttracks.push(KeyframeTrack.toJSON(clipTracks[i]));\n\t\t\t}\n\n\t\t\treturn json;\n\t\t}\n\n\t\tstatic CreateFromMorphTargetSequence(name, morphTargetSequence, fps, noLoop) {\n\t\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\t\tconst tracks = [];\n\n\t\t\tfor (let i = 0; i < numMorphTargets; i++) {\n\t\t\t\tlet times = [];\n\t\t\t\tlet values = [];\n\t\t\t\ttimes.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\n\t\t\t\tvalues.push(0, 1, 0);\n\t\t\t\tconst order = AnimationUtils.getKeyframeOrder(times);\n\t\t\t\ttimes = AnimationUtils.sortedArray(times, 1, order);\n\t\t\t\tvalues = AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\n\t\t\t\tif (!noLoop && times[0] === 0) {\n\t\t\t\t\ttimes.push(numMorphTargets);\n\t\t\t\t\tvalues.push(values[0]);\n\t\t\t\t}\n\n\t\t\t\ttracks.push(new NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\n\t\t\t}\n\n\t\t\treturn new this(name, -1, tracks);\n\t\t}\n\n\t\tstatic findByName(objectOrClipArray, name) {\n\t\t\tlet clipArray = objectOrClipArray;\n\n\t\t\tif (!Array.isArray(objectOrClipArray)) {\n\t\t\t\tconst o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < clipArray.length; i++) {\n\t\t\t\tif (clipArray[i].name === name) {\n\t\t\t\t\treturn clipArray[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\tstatic CreateClipsFromMorphTargetSequences(morphTargets, fps, noLoop) {\n\t\t\tconst animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\n\t\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\n\t\t\tfor (let i = 0, il = morphTargets.length; i < il; i++) {\n\t\t\t\tconst morphTarget = morphTargets[i];\n\t\t\t\tconst parts = morphTarget.name.match(pattern);\n\n\t\t\t\tif (parts && parts.length > 1) {\n\t\t\t\t\tconst name = parts[1];\n\t\t\t\t\tlet animationMorphTargets = animationToMorphTargets[name];\n\n\t\t\t\t\tif (!animationMorphTargets) {\n\t\t\t\t\t\tanimationToMorphTargets[name] = animationMorphTargets = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push(morphTarget);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst clips = [];\n\n\t\t\tfor (const name in animationToMorphTargets) {\n\t\t\t\tclips.push(this.CreateFromMorphTargetSequence(name, animationToMorphTargets[name], fps, noLoop));\n\t\t\t}\n\n\t\t\treturn clips;\n\t\t} // parse the animation.hierarchy format\n\n\n\t\tstatic parseAnimation(animation, bones) {\n\t\t\tif (!animation) {\n\t\t\t\tconsole.error('THREE.AnimationClip: No animation in JSONLoader data.');\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst addNonemptyTrack = function (trackType, trackName, animationKeys, propertyName, destTracks) {\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif (animationKeys.length !== 0) {\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\t\t\t\t\tAnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\n\n\t\t\t\t\tif (times.length !== 0) {\n\t\t\t\t\t\tdestTracks.push(new trackType(trackName, times, values));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst tracks = [];\n\t\t\tconst clipName = animation.name || 'default';\n\t\t\tconst fps = animation.fps || 30;\n\t\t\tconst blendMode = animation.blendMode; // automatic length determination in AnimationClip.\n\n\t\t\tlet duration = animation.length || -1;\n\t\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor (let h = 0; h < hierarchyTracks.length; h++) {\n\t\t\t\tconst animationKeys = hierarchyTracks[h].keys; // skip empty tracks\n\n\t\t\t\tif (!animationKeys || animationKeys.length === 0) continue; // process morph targets\n\n\t\t\t\tif (animationKeys[0].morphTargets) {\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tconst morphTargetNames = {};\n\t\t\t\t\tlet k;\n\n\t\t\t\t\tfor (k = 0; k < animationKeys.length; k++) {\n\t\t\t\t\t\tif (animationKeys[k].morphTargets) {\n\t\t\t\t\t\t\tfor (let m = 0; m < animationKeys[k].morphTargets.length; m++) {\n\t\t\t\t\t\t\t\tmorphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} // create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\n\n\t\t\t\t\tfor (const morphTargetName in morphTargetNames) {\n\t\t\t\t\t\tconst times = [];\n\t\t\t\t\t\tconst values = [];\n\n\t\t\t\t\t\tfor (let m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\n\t\t\t\t\t\t\tconst animationKey = animationKeys[k];\n\t\t\t\t\t\t\ttimes.push(animationKey.time);\n\t\t\t\t\t\t\tvalues.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push(new NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * (fps || 1.0);\n\t\t\t\t} else {\n\t\t\t\t\t// ...assume skeletal animation\n\t\t\t\t\tconst boneName = '.bones[' + bones[h].name + ']';\n\t\t\t\t\taddNonemptyTrack(VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n\t\t\t\t\taddNonemptyTrack(QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n\t\t\t\t\taddNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tracks.length === 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst clip = new this(clipName, duration, tracks, blendMode);\n\t\t\treturn clip;\n\t\t}\n\n\t\tresetDuration() {\n\t\t\tconst tracks = this.tracks;\n\t\t\tlet duration = 0;\n\n\t\t\tfor (let i = 0, n = tracks.length; i !== n; ++i) {\n\t\t\t\tconst track = this.tracks[i];\n\t\t\t\tduration = Math.max(duration, track.times[track.times.length - 1]);\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\t\t\treturn this;\n\t\t}\n\n\t\ttrim() {\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\tthis.tracks[i].trim(0, this.duration);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tvalidate() {\n\t\t\tlet valid = true;\n\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\tvalid = valid && this.tracks[i].validate();\n\t\t\t}\n\n\t\t\treturn valid;\n\t\t}\n\n\t\toptimize() {\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\tthis.tracks[i].optimize();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\tconst tracks = [];\n\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\ttracks.push(this.tracks[i].clone());\n\t\t\t}\n\n\t\t\treturn new this.constructor(this.name, this.duration, tracks, this.blendMode);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn this.constructor.toJSON(this);\n\t\t}\n\n\t}\n\n\tfunction getTrackTypeForValueTypeName(typeName) {\n\t\tswitch (typeName.toLowerCase()) {\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\t\t\t\treturn StringKeyframeTrack;\n\t\t}\n\n\t\tthrow new Error('THREE.KeyframeTrack: Unsupported typeName: ' + typeName);\n\t}\n\n\tfunction parseKeyframeTrack(json) {\n\t\tif (json.type === undefined) {\n\t\t\tthrow new Error('THREE.KeyframeTrack: track type undefined, can not parse');\n\t\t}\n\n\t\tconst trackType = getTrackTypeForValueTypeName(json.type);\n\n\t\tif (json.times === undefined) {\n\t\t\tconst times = [],\n\t\t\t\t\t\tvalues = [];\n\t\t\tAnimationUtils.flattenJSON(json.keys, times, values, 'value');\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\t\t} // derived classes can define a static parse method\n\n\n\t\tif (trackType.parse !== undefined) {\n\t\t\treturn trackType.parse(json);\n\t\t} else {\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType(json.name, json.times, json.values, json.interpolation);\n\t\t}\n\t}\n\n\tconst Cache = {\n\t\tenabled: false,\n\t\tfiles: {},\n\t\tadd: function (key, file) {\n\t\t\tif (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[key] = file;\n\t\t},\n\t\tget: function (key) {\n\t\t\tif (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[key];\n\t\t},\n\t\tremove: function (key) {\n\t\t\tdelete this.files[key];\n\t\t},\n\t\tclear: function () {\n\t\t\tthis.files = {};\n\t\t}\n\t};\n\n\tclass LoadingManager {\n\t\tconstructor(onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tlet isLoading = false;\n\t\t\tlet itemsLoaded = 0;\n\t\t\tlet itemsTotal = 0;\n\t\t\tlet urlModifier = undefined;\n\t\t\tconst handlers = []; // Refer to #5689 for the reason why we don't set .onStart\n\t\t\t// in the constructor\n\n\t\t\tthis.onStart = undefined;\n\t\t\tthis.onLoad = onLoad;\n\t\t\tthis.onProgress = onProgress;\n\t\t\tthis.onError = onError;\n\n\t\t\tthis.itemStart = function (url) {\n\t\t\t\titemsTotal++;\n\n\t\t\t\tif (isLoading === false) {\n\t\t\t\t\tif (scope.onStart !== undefined) {\n\t\t\t\t\t\tscope.onStart(url, itemsLoaded, itemsTotal);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tisLoading = true;\n\t\t\t};\n\n\t\t\tthis.itemEnd = function (url) {\n\t\t\t\titemsLoaded++;\n\n\t\t\t\tif (scope.onProgress !== undefined) {\n\t\t\t\t\tscope.onProgress(url, itemsLoaded, itemsTotal);\n\t\t\t\t}\n\n\t\t\t\tif (itemsLoaded === itemsTotal) {\n\t\t\t\t\tisLoading = false;\n\n\t\t\t\t\tif (scope.onLoad !== undefined) {\n\t\t\t\t\t\tscope.onLoad();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.itemError = function (url) {\n\t\t\t\tif (scope.onError !== undefined) {\n\t\t\t\t\tscope.onError(url);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.resolveURL = function (url) {\n\t\t\t\tif (urlModifier) {\n\t\t\t\t\treturn urlModifier(url);\n\t\t\t\t}\n\n\t\t\t\treturn url;\n\t\t\t};\n\n\t\t\tthis.setURLModifier = function (transform) {\n\t\t\t\turlModifier = transform;\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\tthis.addHandler = function (regex, loader) {\n\t\t\t\thandlers.push(regex, loader);\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\tthis.removeHandler = function (regex) {\n\t\t\t\tconst index = handlers.indexOf(regex);\n\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\thandlers.splice(index, 2);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\tthis.getHandler = function (file) {\n\t\t\t\tfor (let i = 0, l = handlers.length; i < l; i += 2) {\n\t\t\t\t\tconst regex = handlers[i];\n\t\t\t\t\tconst loader = handlers[i + 1];\n\t\t\t\t\tif (regex.global) regex.lastIndex = 0; // see #17920\n\n\t\t\t\t\tif (regex.test(file)) {\n\t\t\t\t\t\treturn loader;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t};\n\t\t}\n\n\t}\n\n\tconst DefaultLoadingManager = new LoadingManager();\n\n\tclass Loader {\n\t\tconstructor(manager) {\n\t\t\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\t\t\tthis.crossOrigin = 'anonymous';\n\t\t\tthis.withCredentials = false;\n\t\t\tthis.path = '';\n\t\t\tthis.resourcePath = '';\n\t\t\tthis.requestHeader = {};\n\t\t}\n\n\t\tload()\n\t\t/* url, onLoad, onProgress, onError */\n\t\t{}\n\n\t\tloadAsync(url, onProgress) {\n\t\t\tconst scope = this;\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tscope.load(url, resolve, onProgress, reject);\n\t\t\t});\n\t\t}\n\n\t\tparse()\n\t\t/* data */\n\t\t{}\n\n\t\tsetCrossOrigin(crossOrigin) {\n\t\t\tthis.crossOrigin = crossOrigin;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetWithCredentials(value) {\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetPath(path) {\n\t\t\tthis.path = path;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetResourcePath(resourcePath) {\n\t\t\tthis.resourcePath = resourcePath;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetRequestHeader(requestHeader) {\n\t\t\tthis.requestHeader = requestHeader;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tconst loading = {};\n\n\tclass FileLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tif (url === undefined) url = '';\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tconst scope = this;\n\t\t\tconst cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t} // Check if request is duplicate\n\n\n\t\t\tif (loading[url] !== undefined) {\n\t\t\t\tloading[url].push({\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t} // Check for data: URI\n\n\n\t\t\tconst dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\t\tconst dataUriRegexResult = url.match(dataUriRegex);\n\t\t\tlet request; // Safari can not handle Data URIs through XMLHttpRequest so process manually\n\n\t\t\tif (dataUriRegexResult) {\n\t\t\t\tconst mimeType = dataUriRegexResult[1];\n\t\t\t\tconst isBase64 = !!dataUriRegexResult[2];\n\t\t\t\tlet data = dataUriRegexResult[3];\n\t\t\t\tdata = decodeURIComponent(data);\n\t\t\t\tif (isBase64) data = atob(data);\n\n\t\t\t\ttry {\n\t\t\t\t\tlet response;\n\t\t\t\t\tconst responseType = (this.responseType || '').toLowerCase();\n\n\t\t\t\t\tswitch (responseType) {\n\t\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\tcase 'blob':\n\t\t\t\t\t\t\tconst view = new Uint8Array(data.length);\n\n\t\t\t\t\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\t\t\t\t\tview[i] = data.charCodeAt(i);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (responseType === 'blob') {\n\t\t\t\t\t\t\t\tresponse = new Blob([view.buffer], {\n\t\t\t\t\t\t\t\t\ttype: mimeType\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresponse = view.buffer;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'document':\n\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\tresponse = parser.parseFromString(data, mimeType);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'json':\n\t\t\t\t\t\t\tresponse = JSON.parse(data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// 'text' or other\n\t\t\t\t\t\t\tresponse = data;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t} // Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\n\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tif (onLoad) onLoad(response);\n\t\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t\t}, 0);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tif (onError) onError(error);\n\t\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Initialise array for duplicate requests\n\t\t\t\tloading[url] = [];\n\t\t\t\tloading[url].push({\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\t\t\t\t});\n\t\t\t\trequest = new XMLHttpRequest();\n\t\t\t\trequest.open('GET', url, true);\n\t\t\t\trequest.addEventListener('load', function (event) {\n\t\t\t\t\tconst response = this.response;\n\t\t\t\t\tconst callbacks = loading[url];\n\t\t\t\t\tdelete loading[url];\n\n\t\t\t\t\tif (this.status === 200 || this.status === 0) {\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\t\t\t\t\t\tif (this.status === 0) console.warn('THREE.FileLoader: HTTP Status 0 received.'); // Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t\t// error response bodies as proper responses to requests.\n\n\t\t\t\t\t\tCache.add(url, response);\n\n\t\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\t\t\tif (callback.onLoad) callback.onLoad(response);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\t\t\tif (callback.onError) callback.onError(event);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t\trequest.addEventListener('progress', function (event) {\n\t\t\t\t\tconst callbacks = loading[url];\n\n\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\t\tif (callback.onProgress) callback.onProgress(event);\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t\trequest.addEventListener('error', function (event) {\n\t\t\t\t\tconst callbacks = loading[url];\n\t\t\t\t\tdelete loading[url];\n\n\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\t\tif (callback.onError) callback.onError(event);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, false);\n\t\t\t\trequest.addEventListener('abort', function (event) {\n\t\t\t\t\tconst callbacks = loading[url];\n\t\t\t\t\tdelete loading[url];\n\n\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\t\tif (callback.onError) callback.onError(event);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, false);\n\t\t\t\tif (this.responseType !== undefined) request.responseType = this.responseType;\n\t\t\t\tif (this.withCredentials !== undefined) request.withCredentials = this.withCredentials;\n\t\t\t\tif (request.overrideMimeType) request.overrideMimeType(this.mimeType !== undefined ? this.mimeType : 'text/plain');\n\n\t\t\t\tfor (const header in this.requestHeader) {\n\t\t\t\t\trequest.setRequestHeader(header, this.requestHeader[header]);\n\t\t\t\t}\n\n\t\t\t\trequest.send(null);\n\t\t\t}\n\n\t\t\tscope.manager.itemStart(url);\n\t\t\treturn request;\n\t\t}\n\n\t\tsetResponseType(value) {\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetMimeType(value) {\n\t\t\tthis.mimeType = value;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass AnimationLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\tconst animations = [];\n\n\t\t\tfor (let i = 0; i < json.length; i++) {\n\t\t\t\tconst clip = AnimationClip.parse(json[i]);\n\t\t\t\tanimations.push(clip);\n\t\t\t}\n\n\t\t\treturn animations;\n\t\t}\n\n\t}\n\n\t/**\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tclass CompressedTextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst images = [];\n\t\t\tconst texture = new CompressedTexture();\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tlet loaded = 0;\n\n\t\t\tfunction loadTexture(i) {\n\t\t\t\tloader.load(url[i], function (buffer) {\n\t\t\t\t\tconst texDatas = scope.parse(buffer, true);\n\t\t\t\t\timages[i] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif (loaded === 6) {\n\t\t\t\t\t\tif (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.image = images;\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t\t}\n\t\t\t\t}, onProgress, onError);\n\t\t\t}\n\n\t\t\tif (Array.isArray(url)) {\n\t\t\t\tfor (let i = 0, il = url.length; i < il; ++i) {\n\t\t\t\t\tloadTexture(i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\t\t\t\tloader.load(url, function (buffer) {\n\t\t\t\t\tconst texDatas = scope.parse(buffer, true);\n\n\t\t\t\t\tif (texDatas.isCubemap) {\n\t\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor (let f = 0; f < faces; f++) {\n\t\t\t\t\t\t\timages[f] = {\n\t\t\t\t\t\t\t\tmipmaps: []\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tfor (let i = 0; i < texDatas.mipmapCount; i++) {\n\t\t\t\t\t\t\t\timages[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\n\t\t\t\t\t\t\t\timages[f].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[f].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[f].height = texDatas.height;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttexture.image = images;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (texDatas.mipmapCount === 1) {\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t}, onProgress, onError);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\tclass ImageLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tconst scope = this;\n\t\t\tconst cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t}\n\n\t\t\tconst image = document.createElementNS('http://www.w3.org/1999/xhtml', 'img');\n\n\t\t\tfunction onImageLoad() {\n\t\t\t\timage.removeEventListener('load', onImageLoad, false);\n\t\t\t\timage.removeEventListener('error', onImageError, false);\n\t\t\t\tCache.add(url, this);\n\t\t\t\tif (onLoad) onLoad(this);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}\n\n\t\t\tfunction onImageError(event) {\n\t\t\t\timage.removeEventListener('load', onImageLoad, false);\n\t\t\t\timage.removeEventListener('error', onImageError, false);\n\t\t\t\tif (onError) onError(event);\n\t\t\t\tscope.manager.itemError(url);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}\n\n\t\t\timage.addEventListener('load', onImageLoad, false);\n\t\t\timage.addEventListener('error', onImageError, false);\n\n\t\t\tif (url.substr(0, 5) !== 'data:') {\n\t\t\t\tif (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n\t\t\t}\n\n\t\t\tscope.manager.itemStart(url);\n\t\t\timage.src = url;\n\t\t\treturn image;\n\t\t}\n\n\t}\n\n\tclass CubeTextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(urls, onLoad, onProgress, onError) {\n\t\t\tconst texture = new CubeTexture();\n\t\t\tconst loader = new ImageLoader(this.manager);\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\t\tloader.setPath(this.path);\n\t\t\tlet loaded = 0;\n\n\t\t\tfunction loadTexture(i) {\n\t\t\t\tloader.load(urls[i], function (image) {\n\t\t\t\t\ttexture.images[i] = image;\n\t\t\t\t\tloaded++;\n\n\t\t\t\t\tif (loaded === 6) {\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t\t}\n\t\t\t\t}, undefined, onError);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < urls.length; ++i) {\n\t\t\t\tloadTexture(i);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\t/**\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tclass DataTextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst texture = new DataTexture();\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (buffer) {\n\t\t\t\tconst texData = scope.parse(buffer);\n\t\t\t\tif (!texData) return;\n\n\t\t\t\tif (texData.image !== undefined) {\n\t\t\t\t\ttexture.image = texData.image;\n\t\t\t\t} else if (texData.data !== undefined) {\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\t\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\t\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\t\tif (texData.encoding !== undefined) {\n\t\t\t\t\ttexture.encoding = texData.encoding;\n\t\t\t\t}\n\n\t\t\t\tif (texData.flipY !== undefined) {\n\t\t\t\t\ttexture.flipY = texData.flipY;\n\t\t\t\t}\n\n\t\t\t\tif (texData.format !== undefined) {\n\t\t\t\t\ttexture.format = texData.format;\n\t\t\t\t}\n\n\t\t\t\tif (texData.type !== undefined) {\n\t\t\t\t\ttexture.type = texData.type;\n\t\t\t\t}\n\n\t\t\t\tif (texData.mipmaps !== undefined) {\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\t\t\t\t}\n\n\t\t\t\tif (texData.mipmapCount === 1) {\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t}\n\n\t\t\t\tif (texData.generateMipmaps !== undefined) {\n\t\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\tif (onLoad) onLoad(texture, texData);\n\t\t\t}, onProgress, onError);\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\tclass TextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst texture = new Texture();\n\t\t\tconst loader = new ImageLoader(this.manager);\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.load(url, function (image) {\n\t\t\t\ttexture.image = image; // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\n\t\t\t\tconst isJPEG = url.search(/\\.jpe?g($|\\?)/i) > 0 || url.search(/^data\\:image\\/jpeg/) === 0;\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif (onLoad !== undefined) {\n\t\t\t\t\tonLoad(texture);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *\tcurves, but retains the api of a curve\n\t **************************************************************/\n\n\tclass CurvePath extends Curve {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'CurvePath';\n\t\t\tthis.curves = [];\n\t\t\tthis.autoClose = false; // Automatically closes the path\n\t\t}\n\n\t\tadd(curve) {\n\t\t\tthis.curves.push(curve);\n\t\t}\n\n\t\tclosePath() {\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tconst startPoint = this.curves[0].getPoint(0);\n\t\t\tconst endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n\t\t\tif (!startPoint.equals(endPoint)) {\n\t\t\t\tthis.curves.push(new LineCurve(endPoint, startPoint));\n\t\t\t}\n\t\t} // To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\n\t\tgetPoint(t) {\n\t\t\tconst d = t * this.getLength();\n\t\t\tconst curveLengths = this.getCurveLengths();\n\t\t\tlet i = 0; // To think about boundaries points.\n\n\t\t\twhile (i < curveLengths.length) {\n\t\t\t\tif (curveLengths[i] >= d) {\n\t\t\t\t\tconst diff = curveLengths[i] - d;\n\t\t\t\t\tconst curve = this.curves[i];\n\t\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\t\t\t\t\treturn curve.getPointAt(u);\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\treturn null; // loop where sum != 0, sum > d , sum+1 <d\n\t\t} // We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\n\t\tgetLength() {\n\t\t\tconst lens = this.getCurveLengths();\n\t\t\treturn lens[lens.length - 1];\n\t\t} // cacheLengths must be recalculated.\n\n\n\t\tupdateArcLengths() {\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getCurveLengths();\n\t\t} // Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\n\t\tgetCurveLengths() {\n\t\t\t// We use cache values if curves and cache array are same length\n\t\t\tif (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n\t\t\t\treturn this.cacheLengths;\n\t\t\t} // Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\n\t\t\tconst lengths = [];\n\t\t\tlet sums = 0;\n\n\t\t\tfor (let i = 0, l = this.curves.length; i < l; i++) {\n\t\t\t\tsums += this.curves[i].getLength();\n\t\t\t\tlengths.push(sums);\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\t\t\treturn lengths;\n\t\t}\n\n\t\tgetSpacedPoints(divisions = 40) {\n\t\t\tconst points = [];\n\n\t\t\tfor (let i = 0; i <= divisions; i++) {\n\t\t\t\tpoints.push(this.getPoint(i / divisions));\n\t\t\t}\n\n\t\t\tif (this.autoClose) {\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\n\t\t\treturn points;\n\t\t}\n\n\t\tgetPoints(divisions = 12) {\n\t\t\tconst points = [];\n\t\t\tlet last;\n\n\t\t\tfor (let i = 0, curves = this.curves; i < curves.length; i++) {\n\t\t\t\tconst curve = curves[i];\n\t\t\t\tconst resolution = curve && curve.isEllipseCurve ? divisions * 2 : curve && (curve.isLineCurve || curve.isLineCurve3) ? 1 : curve && curve.isSplineCurve ? divisions * curve.points.length : divisions;\n\t\t\t\tconst pts = curve.getPoints(resolution);\n\n\t\t\t\tfor (let j = 0; j < pts.length; j++) {\n\t\t\t\t\tconst point = pts[j];\n\t\t\t\t\tif (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tlast = point;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\n\t\t\treturn points;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.curves = [];\n\n\t\t\tfor (let i = 0, l = source.curves.length; i < l; i++) {\n\t\t\t\tconst curve = source.curves[i];\n\t\t\t\tthis.curves.push(curve.clone());\n\t\t\t}\n\n\t\t\tthis.autoClose = source.autoClose;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.autoClose = this.autoClose;\n\t\t\tdata.curves = [];\n\n\t\t\tfor (let i = 0, l = this.curves.length; i < l; i++) {\n\t\t\t\tconst curve = this.curves[i];\n\t\t\t\tdata.curves.push(curve.toJSON());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.autoClose = json.autoClose;\n\t\t\tthis.curves = [];\n\n\t\t\tfor (let i = 0, l = json.curves.length; i < l; i++) {\n\t\t\t\tconst curve = json.curves[i];\n\t\t\t\tthis.curves.push(new Curves[curve.type]().fromJSON(curve));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Path extends CurvePath {\n\t\tconstructor(points) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Path';\n\t\t\tthis.currentPoint = new Vector2();\n\n\t\t\tif (points) {\n\t\t\t\tthis.setFromPoints(points);\n\t\t\t}\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tthis.moveTo(points[0].x, points[0].y);\n\n\t\t\tfor (let i = 1, l = points.length; i < l; i++) {\n\t\t\t\tthis.lineTo(points[i].x, points[i].y);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tmoveTo(x, y) {\n\t\t\tthis.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n\n\t\t\treturn this;\n\t\t}\n\n\t\tlineTo(x, y) {\n\t\t\tconst curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(x, y);\n\t\t\treturn this;\n\t\t}\n\n\t\tquadraticCurveTo(aCPx, aCPy, aX, aY) {\n\t\t\tconst curve = new QuadraticBezierCurve(this.currentPoint.clone(), new Vector2(aCPx, aCPy), new Vector2(aX, aY));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tbezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n\t\t\tconst curve = new CubicBezierCurve(this.currentPoint.clone(), new Vector2(aCP1x, aCP1y), new Vector2(aCP2x, aCP2y), new Vector2(aX, aY));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tsplineThru(pts\n\t\t/*Array of Vector*/\n\t\t) {\n\t\t\tconst npts = [this.currentPoint.clone()].concat(pts);\n\t\t\tconst curve = new SplineCurve(npts);\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.copy(pts[pts.length - 1]);\n\t\t\treturn this;\n\t\t}\n\n\t\tarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tconst x0 = this.currentPoint.x;\n\t\t\tconst y0 = this.currentPoint.y;\n\t\t\tthis.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\treturn this;\n\t\t}\n\n\t\tabsarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tthis.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\treturn this;\n\t\t}\n\n\t\tellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n\t\t\tconst x0 = this.currentPoint.x;\n\t\t\tconst y0 = this.currentPoint.y;\n\t\t\tthis.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\t\t\treturn this;\n\t\t}\n\n\t\tabsellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n\t\t\tconst curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\n\t\t\tif (this.curves.length > 0) {\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tconst firstPoint = curve.getPoint(0);\n\n\t\t\t\tif (!firstPoint.equals(this.currentPoint)) {\n\t\t\t\t\tthis.lineTo(firstPoint.x, firstPoint.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.curves.push(curve);\n\t\t\tconst lastPoint = curve.getPoint(1);\n\t\t\tthis.currentPoint.copy(lastPoint);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.currentPoint.copy(source.currentPoint);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.currentPoint = this.currentPoint.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.currentPoint.fromArray(json.currentPoint);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Shape extends Path {\n\t\tconstructor(points) {\n\t\t\tsuper(points);\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.type = 'Shape';\n\t\t\tthis.holes = [];\n\t\t}\n\n\t\tgetPointsHoles(divisions) {\n\t\t\tconst holesPts = [];\n\n\t\t\tfor (let i = 0, l = this.holes.length; i < l; i++) {\n\t\t\t\tholesPts[i] = this.holes[i].getPoints(divisions);\n\t\t\t}\n\n\t\t\treturn holesPts;\n\t\t} // get points of shape and holes (keypoints based on segments parameter)\n\n\n\t\textractPoints(divisions) {\n\t\t\treturn {\n\t\t\t\tshape: this.getPoints(divisions),\n\t\t\t\tholes: this.getPointsHoles(divisions)\n\t\t\t};\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.holes = [];\n\n\t\t\tfor (let i = 0, l = source.holes.length; i < l; i++) {\n\t\t\t\tconst hole = source.holes[i];\n\t\t\t\tthis.holes.push(hole.clone());\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.holes = [];\n\n\t\t\tfor (let i = 0, l = this.holes.length; i < l; i++) {\n\t\t\t\tconst hole = this.holes[i];\n\t\t\t\tdata.holes.push(hole.toJSON());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.uuid = json.uuid;\n\t\t\tthis.holes = [];\n\n\t\t\tfor (let i = 0, l = json.holes.length; i < l; i++) {\n\t\t\t\tconst hole = json.holes[i];\n\t\t\t\tthis.holes.push(new Path().fromJSON(hole));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Light extends Object3D {\n\t\tconstructor(color, intensity = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Light';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.intensity = intensity;\n\t\t}\n\n\t\tdispose() {// Empty here in base class; some subclasses override.\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.intensity = source.intensity;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\t\t\tif (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n\t\t\tif (this.distance !== undefined) data.object.distance = this.distance;\n\t\t\tif (this.angle !== undefined) data.object.angle = this.angle;\n\t\t\tif (this.decay !== undefined) data.object.decay = this.decay;\n\t\t\tif (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n\t\t\tif (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tLight.prototype.isLight = true;\n\n\tclass HemisphereLight extends Light {\n\t\tconstructor(skyColor, groundColor, intensity) {\n\t\t\tsuper(skyColor, intensity);\n\t\t\tthis.type = 'HemisphereLight';\n\t\t\tthis.position.copy(Object3D.DefaultUp);\n\t\t\tthis.updateMatrix();\n\t\t\tthis.groundColor = new Color(groundColor);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tLight.prototype.copy.call(this, source);\n\t\t\tthis.groundColor.copy(source.groundColor);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tHemisphereLight.prototype.isHemisphereLight = true;\n\n\tconst _projScreenMatrix$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _lightPositionWorld$1 = /*@__PURE__*/new Vector3();\n\n\tconst _lookTarget$1 = /*@__PURE__*/new Vector3();\n\n\tclass LightShadow {\n\t\tconstructor(camera) {\n\t\t\tthis.camera = camera;\n\t\t\tthis.bias = 0;\n\t\t\tthis.normalBias = 0;\n\t\t\tthis.radius = 1;\n\t\t\tthis.mapSize = new Vector2(512, 512);\n\t\t\tthis.map = null;\n\t\t\tthis.mapPass = null;\n\t\t\tthis.matrix = new Matrix4();\n\t\t\tthis.autoUpdate = true;\n\t\t\tthis.needsUpdate = false;\n\t\t\tthis._frustum = new Frustum();\n\t\t\tthis._frameExtents = new Vector2(1, 1);\n\t\t\tthis._viewportCount = 1;\n\t\t\tthis._viewports = [new Vector4(0, 0, 1, 1)];\n\t\t}\n\n\t\tgetViewportCount() {\n\t\t\treturn this._viewportCount;\n\t\t}\n\n\t\tgetFrustum() {\n\t\t\treturn this._frustum;\n\t\t}\n\n\t\tupdateMatrices(light) {\n\t\t\tconst shadowCamera = this.camera;\n\t\t\tconst shadowMatrix = this.matrix;\n\n\t\t\t_lightPositionWorld$1.setFromMatrixPosition(light.matrixWorld);\n\n\t\t\tshadowCamera.position.copy(_lightPositionWorld$1);\n\n\t\t\t_lookTarget$1.setFromMatrixPosition(light.target.matrixWorld);\n\n\t\t\tshadowCamera.lookAt(_lookTarget$1);\n\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t_projScreenMatrix$1.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n\t\t\tthis._frustum.setFromProjectionMatrix(_projScreenMatrix$1);\n\n\t\t\tshadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n\t\t\tshadowMatrix.multiply(shadowCamera.projectionMatrix);\n\t\t\tshadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n\t\t}\n\n\t\tgetViewport(viewportIndex) {\n\t\t\treturn this._viewports[viewportIndex];\n\t\t}\n\n\t\tgetFrameExtents() {\n\t\t\treturn this._frameExtents;\n\t\t}\n\n\t\tdispose() {\n\t\t\tif (this.map) {\n\t\t\t\tthis.map.dispose();\n\t\t\t}\n\n\t\t\tif (this.mapPass) {\n\t\t\t\tthis.mapPass.dispose();\n\t\t\t}\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.camera = source.camera.clone();\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\t\t\tthis.mapSize.copy(source.mapSize);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst object = {};\n\t\t\tif (this.bias !== 0) object.bias = this.bias;\n\t\t\tif (this.normalBias !== 0) object.normalBias = this.normalBias;\n\t\t\tif (this.radius !== 1) object.radius = this.radius;\n\t\t\tif (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n\t\t\tobject.camera = this.camera.toJSON(false).object;\n\t\t\tdelete object.camera.matrix;\n\t\t\treturn object;\n\t\t}\n\n\t}\n\n\tclass SpotLightShadow extends LightShadow {\n\t\tconstructor() {\n\t\t\tsuper(new PerspectiveCamera(50, 1, 0.5, 500));\n\t\t\tthis.focus = 1;\n\t\t}\n\n\t\tupdateMatrices(light) {\n\t\t\tconst camera = this.camera;\n\t\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tconst far = light.distance || camera.far;\n\n\t\t\tif (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\t\t\t}\n\n\t\t\tsuper.updateMatrices(light);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.focus = source.focus;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSpotLightShadow.prototype.isSpotLightShadow = true;\n\n\tclass SpotLight extends Light {\n\t\tconstructor(color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'SpotLight';\n\t\t\tthis.position.copy(Object3D.DefaultUp);\n\t\t\tthis.updateMatrix();\n\t\t\tthis.target = new Object3D();\n\t\t\tthis.distance = distance;\n\t\t\tthis.angle = angle;\n\t\t\tthis.penumbra = penumbra;\n\t\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\t\tthis.shadow = new SpotLightShadow();\n\t\t}\n\n\t\tget power() {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\t\t}\n\n\t\tset power(power) {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.shadow.dispose();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\t\t\tthis.target = source.target.clone();\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSpotLight.prototype.isSpotLight = true;\n\n\tconst _projScreenMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _lightPositionWorld = /*@__PURE__*/new Vector3();\n\n\tconst _lookTarget = /*@__PURE__*/new Vector3();\n\n\tclass PointLightShadow extends LightShadow {\n\t\tconstructor() {\n\t\t\tsuper(new PerspectiveCamera(90, 1, 0.5, 500));\n\t\t\tthis._frameExtents = new Vector2(4, 2);\n\t\t\tthis._viewportCount = 6;\n\t\t\tthis._viewports = [// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//\txzXZ\n\t\t\t//\t y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\t\t\t// positive X\n\t\t\tnew Vector4(2, 1, 1, 1), // negative X\n\t\t\tnew Vector4(0, 1, 1, 1), // positive Z\n\t\t\tnew Vector4(3, 1, 1, 1), // negative Z\n\t\t\tnew Vector4(1, 1, 1, 1), // positive Y\n\t\t\tnew Vector4(3, 0, 1, 1), // negative Y\n\t\t\tnew Vector4(1, 0, 1, 1)];\n\t\t\tthis._cubeDirections = [new Vector3(1, 0, 0), new Vector3(-1, 0, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1), new Vector3(0, 1, 0), new Vector3(0, -1, 0)];\n\t\t\tthis._cubeUps = [new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1)];\n\t\t}\n\n\t\tupdateMatrices(light, viewportIndex = 0) {\n\t\t\tconst camera = this.camera;\n\t\t\tconst shadowMatrix = this.matrix;\n\t\t\tconst far = light.distance || camera.far;\n\n\t\t\tif (far !== camera.far) {\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\t\t\t}\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\n\t\t\tcamera.position.copy(_lightPositionWorld);\n\n\t\t\t_lookTarget.copy(camera.position);\n\n\t\t\t_lookTarget.add(this._cubeDirections[viewportIndex]);\n\n\t\t\tcamera.up.copy(this._cubeUps[viewportIndex]);\n\t\t\tcamera.lookAt(_lookTarget);\n\t\t\tcamera.updateMatrixWorld();\n\t\t\tshadowMatrix.makeTranslation(-_lightPositionWorld.x, -_lightPositionWorld.y, -_lightPositionWorld.z);\n\n\t\t\t_projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n\t\t\tthis._frustum.setFromProjectionMatrix(_projScreenMatrix);\n\t\t}\n\n\t}\n\n\tPointLightShadow.prototype.isPointLightShadow = true;\n\n\tclass PointLight extends Light {\n\t\tconstructor(color, intensity, distance = 0, decay = 1) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'PointLight';\n\t\t\tthis.distance = distance;\n\t\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\t\tthis.shadow = new PointLightShadow();\n\t\t}\n\n\t\tget power() {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\t\t}\n\n\t\tset power(power) {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / (4 * Math.PI);\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.shadow.dispose();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tPointLight.prototype.isPointLight = true;\n\n\tclass OrthographicCamera extends Camera {\n\t\tconstructor(left = -1, right = 1, top = 1, bottom = -1, near = 0.1, far = 2000) {\n\t\t\tsuper();\n\t\t\tthis.type = 'OrthographicCamera';\n\t\t\tthis.zoom = 1;\n\t\t\tthis.view = null;\n\t\t\tthis.left = left;\n\t\t\tthis.right = right;\n\t\t\tthis.top = top;\n\t\t\tthis.bottom = bottom;\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign({}, source.view);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetViewOffset(fullWidth, fullHeight, x, y, width, height) {\n\t\t\tif (this.view === null) {\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tclearViewOffset() {\n\t\t\tif (this.view !== null) {\n\t\t\t\tthis.view.enabled = false;\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tupdateProjectionMatrix() {\n\t\t\tconst dx = (this.right - this.left) / (2 * this.zoom);\n\t\t\tconst dy = (this.top - this.bottom) / (2 * this.zoom);\n\t\t\tconst cx = (this.right + this.left) / 2;\n\t\t\tconst cy = (this.top + this.bottom) / 2;\n\t\t\tlet left = cx - dx;\n\t\t\tlet right = cx + dx;\n\t\t\tlet top = cy + dy;\n\t\t\tlet bottom = cy - dy;\n\n\t\t\tif (this.view !== null && this.view.enabled) {\n\t\t\t\tconst scaleW = (this.right - this.left) / this.view.fullWidth / this.zoom;\n\t\t\t\tconst scaleH = (this.top - this.bottom) / this.view.fullHeight / this.zoom;\n\t\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\t\tright = left + scaleW * this.view.width;\n\t\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\t\tbottom = top - scaleH * this.view.height;\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n\t\t\tthis.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tif (this.view !== null) data.object.view = Object.assign({}, this.view);\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tOrthographicCamera.prototype.isOrthographicCamera = true;\n\n\tclass DirectionalLightShadow extends LightShadow {\n\t\tconstructor() {\n\t\t\tsuper(new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n\t\t}\n\n\t}\n\n\tDirectionalLightShadow.prototype.isDirectionalLightShadow = true;\n\n\tclass DirectionalLight extends Light {\n\t\tconstructor(color, intensity) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'DirectionalLight';\n\t\t\tthis.position.copy(Object3D.DefaultUp);\n\t\t\tthis.updateMatrix();\n\t\t\tthis.target = new Object3D();\n\t\t\tthis.shadow = new DirectionalLightShadow();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.shadow.dispose();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.target = source.target.clone();\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tDirectionalLight.prototype.isDirectionalLight = true;\n\n\tclass AmbientLight extends Light {\n\t\tconstructor(color, intensity) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'AmbientLight';\n\t\t}\n\n\t}\n\n\tAmbientLight.prototype.isAmbientLight = true;\n\n\tclass RectAreaLight extends Light {\n\t\tconstructor(color, intensity, width = 10, height = 10) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'RectAreaLight';\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.width = this.width;\n\t\t\tdata.object.height = this.height;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tRectAreaLight.prototype.isRectAreaLight = true;\n\n\t/**\n\t * Primary reference:\n\t *\t https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t *\n\t * Secondary reference:\n\t *\t https://www.ppsloan.org/publications/StupidSH36.pdf\n\t */\n\t// 3-band SH defined by 9 coefficients\n\n\tclass SphericalHarmonics3 {\n\t\tconstructor() {\n\t\t\tthis.coefficients = [];\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients.push(new Vector3());\n\t\t\t}\n\t\t}\n\n\t\tset(coefficients) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].copy(coefficients[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tzero() {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].set(0, 0, 0);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // get the radiance in the direction of the normal\n\t\t// target is a Vector3\n\n\n\t\tgetAt(normal, target) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tconst x = normal.x,\n\t\t\t\t\t\ty = normal.y,\n\t\t\t\t\t\tz = normal.z;\n\t\t\tconst coeff = this.coefficients; // band 0\n\n\t\t\ttarget.copy(coeff[0]).multiplyScalar(0.282095); // band 1\n\n\t\t\ttarget.addScaledVector(coeff[1], 0.488603 * y);\n\t\t\ttarget.addScaledVector(coeff[2], 0.488603 * z);\n\t\t\ttarget.addScaledVector(coeff[3], 0.488603 * x); // band 2\n\n\t\t\ttarget.addScaledVector(coeff[4], 1.092548 * (x * y));\n\t\t\ttarget.addScaledVector(coeff[5], 1.092548 * (y * z));\n\t\t\ttarget.addScaledVector(coeff[6], 0.315392 * (3.0 * z * z - 1.0));\n\t\t\ttarget.addScaledVector(coeff[7], 1.092548 * (x * z));\n\t\t\ttarget.addScaledVector(coeff[8], 0.546274 * (x * x - y * y));\n\t\t\treturn target;\n\t\t} // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t\t// target is a Vector3\n\t\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\n\n\t\tgetIrradianceAt(normal, target) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tconst x = normal.x,\n\t\t\t\t\t\ty = normal.y,\n\t\t\t\t\t\tz = normal.z;\n\t\t\tconst coeff = this.coefficients; // band 0\n\n\t\t\ttarget.copy(coeff[0]).multiplyScalar(0.886227); // π * 0.282095\n\t\t\t// band 1\n\n\t\t\ttarget.addScaledVector(coeff[1], 2.0 * 0.511664 * y); // ( 2 * π / 3 ) * 0.488603\n\n\t\t\ttarget.addScaledVector(coeff[2], 2.0 * 0.511664 * z);\n\t\t\ttarget.addScaledVector(coeff[3], 2.0 * 0.511664 * x); // band 2\n\n\t\t\ttarget.addScaledVector(coeff[4], 2.0 * 0.429043 * x * y); // ( π / 4 ) * 1.092548\n\n\t\t\ttarget.addScaledVector(coeff[5], 2.0 * 0.429043 * y * z);\n\t\t\ttarget.addScaledVector(coeff[6], 0.743125 * z * z - 0.247708); // ( π / 4 ) * 0.315392 * 3\n\n\t\t\ttarget.addScaledVector(coeff[7], 2.0 * 0.429043 * x * z);\n\t\t\ttarget.addScaledVector(coeff[8], 0.429043 * (x * x - y * y)); // ( π / 4 ) * 0.546274\n\n\t\t\treturn target;\n\t\t}\n\n\t\tadd(sh) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].add(sh.coefficients[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledSH(sh, s) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].addScaledVector(sh.coefficients[i], s);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(s) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].multiplyScalar(s);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tlerp(sh, alpha) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].lerp(sh.coefficients[i], alpha);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(sh) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tif (!this.coefficients[i].equals(sh.coefficients[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tcopy(sh) {\n\t\t\treturn this.set(sh.coefficients);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tconst coefficients = this.coefficients;\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tcoefficients[i].fromArray(array, offset + i * 3);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tconst coefficients = this.coefficients;\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tcoefficients[i].toArray(array, offset + i * 3);\n\t\t\t}\n\n\t\t\treturn array;\n\t\t} // evaluate the basis functions\n\t\t// shBasis is an Array[ 9 ]\n\n\n\t\tstatic getBasisAt(normal, shBasis) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tconst x = normal.x,\n\t\t\t\t\t\ty = normal.y,\n\t\t\t\t\t\tz = normal.z; // band 0\n\n\t\t\tshBasis[0] = 0.282095; // band 1\n\n\t\t\tshBasis[1] = 0.488603 * y;\n\t\t\tshBasis[2] = 0.488603 * z;\n\t\t\tshBasis[3] = 0.488603 * x; // band 2\n\n\t\t\tshBasis[4] = 1.092548 * x * y;\n\t\t\tshBasis[5] = 1.092548 * y * z;\n\t\t\tshBasis[6] = 0.315392 * (3 * z * z - 1);\n\t\t\tshBasis[7] = 1.092548 * x * z;\n\t\t\tshBasis[8] = 0.546274 * (x * x - y * y);\n\t\t}\n\n\t}\n\n\tSphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\n\n\tclass LightProbe extends Light {\n\t\tconstructor(sh = new SphericalHarmonics3(), intensity = 1) {\n\t\t\tsuper(undefined, intensity);\n\t\t\tthis.sh = sh;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.sh.copy(source.sh);\n\t\t\treturn this;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\n\t\t\tthis.sh.fromArray(json.sh);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.sh = this.sh.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tLightProbe.prototype.isLightProbe = true;\n\n\tclass MaterialLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t\tthis.textures = {};\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(scope.manager);\n\t\t\tloader.setPath(scope.path);\n\t\t\tloader.setRequestHeader(scope.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\tconst textures = this.textures;\n\n\t\t\tfunction getTexture(name) {\n\t\t\t\tif (textures[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.MaterialLoader: Undefined texture', name);\n\t\t\t\t}\n\n\t\t\t\treturn textures[name];\n\t\t\t}\n\n\t\t\tconst material = new Materials[json.type]();\n\t\t\tif (json.uuid !== undefined) material.uuid = json.uuid;\n\t\t\tif (json.name !== undefined) material.name = json.name;\n\t\t\tif (json.color !== undefined && material.color !== undefined) material.color.setHex(json.color);\n\t\t\tif (json.roughness !== undefined) material.roughness = json.roughness;\n\t\t\tif (json.metalness !== undefined) material.metalness = json.metalness;\n\t\t\tif (json.sheen !== undefined) material.sheen = new Color().setHex(json.sheen);\n\t\t\tif (json.emissive !== undefined && material.emissive !== undefined) material.emissive.setHex(json.emissive);\n\t\t\tif (json.specular !== undefined && material.specular !== undefined) material.specular.setHex(json.specular);\n\t\t\tif (json.shininess !== undefined) material.shininess = json.shininess;\n\t\t\tif (json.clearcoat !== undefined) material.clearcoat = json.clearcoat;\n\t\t\tif (json.clearcoatRoughness !== undefined) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\t\tif (json.transmission !== undefined) material.transmission = json.transmission;\n\t\t\tif (json.thickness !== undefined) material.thickness = json.thickness;\n\t\t\tif (json.attenuationDistance !== undefined) material.attenuationDistance = json.attenuationDistance;\n\t\t\tif (json.attenuationColor !== undefined && material.attenuationColor !== undefined) material.attenuationColor.setHex(json.attenuationColor);\n\t\t\tif (json.fog !== undefined) material.fog = json.fog;\n\t\t\tif (json.flatShading !== undefined) material.flatShading = json.flatShading;\n\t\t\tif (json.blending !== undefined) material.blending = json.blending;\n\t\t\tif (json.combine !== undefined) material.combine = json.combine;\n\t\t\tif (json.side !== undefined) material.side = json.side;\n\t\t\tif (json.shadowSide !== undefined) material.shadowSide = json.shadowSide;\n\t\t\tif (json.opacity !== undefined) material.opacity = json.opacity;\n\t\t\tif (json.transparent !== undefined) material.transparent = json.transparent;\n\t\t\tif (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n\t\t\tif (json.depthTest !== undefined) material.depthTest = json.depthTest;\n\t\t\tif (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n\t\t\tif (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n\t\t\tif (json.stencilWrite !== undefined) material.stencilWrite = json.stencilWrite;\n\t\t\tif (json.stencilWriteMask !== undefined) material.stencilWriteMask = json.stencilWriteMask;\n\t\t\tif (json.stencilFunc !== undefined) material.stencilFunc = json.stencilFunc;\n\t\t\tif (json.stencilRef !== undefined) material.stencilRef = json.stencilRef;\n\t\t\tif (json.stencilFuncMask !== undefined) material.stencilFuncMask = json.stencilFuncMask;\n\t\t\tif (json.stencilFail !== undefined) material.stencilFail = json.stencilFail;\n\t\t\tif (json.stencilZFail !== undefined) material.stencilZFail = json.stencilZFail;\n\t\t\tif (json.stencilZPass !== undefined) material.stencilZPass = json.stencilZPass;\n\t\t\tif (json.wireframe !== undefined) material.wireframe = json.wireframe;\n\t\t\tif (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\t\tif (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\n\t\t\tif (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\n\t\t\tif (json.rotation !== undefined) material.rotation = json.rotation;\n\t\t\tif (json.linewidth !== 1) material.linewidth = json.linewidth;\n\t\t\tif (json.dashSize !== undefined) material.dashSize = json.dashSize;\n\t\t\tif (json.gapSize !== undefined) material.gapSize = json.gapSize;\n\t\t\tif (json.scale !== undefined) material.scale = json.scale;\n\t\t\tif (json.polygonOffset !== undefined) material.polygonOffset = json.polygonOffset;\n\t\t\tif (json.polygonOffsetFactor !== undefined) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\t\tif (json.polygonOffsetUnits !== undefined) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\t\t\tif (json.morphTargets !== undefined) material.morphTargets = json.morphTargets;\n\t\t\tif (json.morphNormals !== undefined) material.morphNormals = json.morphNormals;\n\t\t\tif (json.dithering !== undefined) material.dithering = json.dithering;\n\t\t\tif (json.alphaToCoverage !== undefined) material.alphaToCoverage = json.alphaToCoverage;\n\t\t\tif (json.premultipliedAlpha !== undefined) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\t\tif (json.vertexTangents !== undefined) material.vertexTangents = json.vertexTangents;\n\t\t\tif (json.visible !== undefined) material.visible = json.visible;\n\t\t\tif (json.toneMapped !== undefined) material.toneMapped = json.toneMapped;\n\t\t\tif (json.userData !== undefined) material.userData = json.userData;\n\n\t\t\tif (json.vertexColors !== undefined) {\n\t\t\t\tif (typeof json.vertexColors === 'number') {\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors > 0 ? true : false;\n\t\t\t\t} else {\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\t\t\t\t}\n\t\t\t} // Shader Material\n\n\n\t\t\tif (json.uniforms !== undefined) {\n\t\t\t\tfor (const name in json.uniforms) {\n\t\t\t\t\tconst uniform = json.uniforms[name];\n\t\t\t\t\tmaterial.uniforms[name] = {};\n\n\t\t\t\t\tswitch (uniform.type) {\n\t\t\t\t\t\tcase 't':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = getTexture(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Color().setHex(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector2().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector3().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector4().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Matrix3().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Matrix4().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = uniform.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (json.defines !== undefined) material.defines = json.defines;\n\t\t\tif (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n\t\t\tif (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n\n\t\t\tif (json.extensions !== undefined) {\n\t\t\t\tfor (const key in json.extensions) {\n\t\t\t\t\tmaterial.extensions[key] = json.extensions[key];\n\t\t\t\t}\n\t\t\t} // Deprecated\n\n\n\t\t\tif (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\n\t\t\t// for PointsMaterial\n\n\t\t\tif (json.size !== undefined) material.size = json.size;\n\t\t\tif (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n\t\t\tif (json.map !== undefined) material.map = getTexture(json.map);\n\t\t\tif (json.matcap !== undefined) material.matcap = getTexture(json.matcap);\n\t\t\tif (json.alphaMap !== undefined) material.alphaMap = getTexture(json.alphaMap);\n\t\t\tif (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n\t\t\tif (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n\t\t\tif (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\n\t\t\tif (json.normalMapType !== undefined) material.normalMapType = json.normalMapType;\n\n\t\t\tif (json.normalScale !== undefined) {\n\t\t\t\tlet normalScale = json.normalScale;\n\n\t\t\t\tif (Array.isArray(normalScale) === false) {\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\t\t\t\t\tnormalScale = [normalScale, normalScale];\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray(normalScale);\n\t\t\t}\n\n\t\t\tif (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\n\t\t\tif (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n\t\t\tif (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n\t\t\tif (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\n\t\t\tif (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\n\t\t\tif (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\n\t\t\tif (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n\t\t\tif (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\n\t\t\tif (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n\t\t\tif (json.envMapIntensity !== undefined) material.envMapIntensity = json.envMapIntensity;\n\t\t\tif (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n\t\t\tif (json.refractionRatio !== undefined) material.refractionRatio = json.refractionRatio;\n\t\t\tif (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\n\t\t\tif (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n\t\t\tif (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n\t\t\tif (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\n\t\t\tif (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\n\t\t\tif (json.clearcoatMap !== undefined) material.clearcoatMap = getTexture(json.clearcoatMap);\n\t\t\tif (json.clearcoatRoughnessMap !== undefined) material.clearcoatRoughnessMap = getTexture(json.clearcoatRoughnessMap);\n\t\t\tif (json.clearcoatNormalMap !== undefined) material.clearcoatNormalMap = getTexture(json.clearcoatNormalMap);\n\t\t\tif (json.clearcoatNormalScale !== undefined) material.clearcoatNormalScale = new Vector2().fromArray(json.clearcoatNormalScale);\n\t\t\tif (json.transmissionMap !== undefined) material.transmissionMap = getTexture(json.transmissionMap);\n\t\t\tif (json.thicknessMap !== undefined) material.thicknessMap = getTexture(json.thicknessMap);\n\t\t\treturn material;\n\t\t}\n\n\t\tsetTextures(value) {\n\t\t\tthis.textures = value;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass LoaderUtils {\n\t\tstatic decodeText(array) {\n\t\t\tif (typeof TextDecoder !== 'undefined') {\n\t\t\t\treturn new TextDecoder().decode(array);\n\t\t\t} // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\n\t\t\tlet s = '';\n\n\t\t\tfor (let i = 0, il = array.length; i < il; i++) {\n\t\t\t\t// Implicitly assumes little-endian.\n\t\t\t\ts += String.fromCharCode(array[i]);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// merges multi-byte utf-8 characters.\n\t\t\t\treturn decodeURIComponent(escape(s));\n\t\t\t} catch (e) {\n\t\t\t\t// see #16358\n\t\t\t\treturn s;\n\t\t\t}\n\t\t}\n\n\t\tstatic extractUrlBase(url) {\n\t\t\tconst index = url.lastIndexOf('/');\n\t\t\tif (index === -1) return './';\n\t\t\treturn url.substr(0, index + 1);\n\t\t}\n\n\t}\n\n\tclass InstancedBufferGeometry extends BufferGeometry {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'InstancedBufferGeometry';\n\t\t\tthis.instanceCount = Infinity;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.instanceCount = source.instanceCount;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON(this);\n\t\t\tdata.instanceCount = this.instanceCount;\n\t\t\tdata.isInstancedBufferGeometry = true;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tInstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n\n\tclass InstancedBufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized, meshPerAttribute = 1) {\n\t\t\tif (typeof normalized === 'number') {\n\t\t\t\tmeshPerAttribute = normalized;\n\t\t\t\tnormalized = false;\n\t\t\t\tconsole.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');\n\t\t\t}\n\n\t\t\tsuper(array, itemSize, normalized);\n\t\t\tthis.meshPerAttribute = meshPerAttribute;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\t\t\tdata.isInstancedBufferAttribute = true;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tInstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n\n\tclass BufferGeometryLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(scope.manager);\n\t\t\tloader.setPath(scope.path);\n\t\t\tloader.setRequestHeader(scope.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\tconst interleavedBufferMap = {};\n\t\t\tconst arrayBufferMap = {};\n\n\t\t\tfunction getInterleavedBuffer(json, uuid) {\n\t\t\t\tif (interleavedBufferMap[uuid] !== undefined) return interleavedBufferMap[uuid];\n\t\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\t\tconst interleavedBuffer = interleavedBuffers[uuid];\n\t\t\t\tconst buffer = getArrayBuffer(json, interleavedBuffer.buffer);\n\t\t\t\tconst array = getTypedArray(interleavedBuffer.type, buffer);\n\t\t\t\tconst ib = new InterleavedBuffer(array, interleavedBuffer.stride);\n\t\t\t\tib.uuid = interleavedBuffer.uuid;\n\t\t\t\tinterleavedBufferMap[uuid] = ib;\n\t\t\t\treturn ib;\n\t\t\t}\n\n\t\t\tfunction getArrayBuffer(json, uuid) {\n\t\t\t\tif (arrayBufferMap[uuid] !== undefined) return arrayBufferMap[uuid];\n\t\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\t\tconst arrayBuffer = arrayBuffers[uuid];\n\t\t\t\tconst ab = new Uint32Array(arrayBuffer).buffer;\n\t\t\t\tarrayBufferMap[uuid] = ab;\n\t\t\t\treturn ab;\n\t\t\t}\n\n\t\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\t\t\tconst index = json.data.index;\n\n\t\t\tif (index !== undefined) {\n\t\t\t\tconst typedArray = getTypedArray(index.type, index.array);\n\t\t\t\tgeometry.setIndex(new BufferAttribute(typedArray, 1));\n\t\t\t}\n\n\t\t\tconst attributes = json.data.attributes;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tconst attribute = attributes[key];\n\t\t\t\tlet bufferAttribute;\n\n\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\n\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\n\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\n\t\t\t\t} else {\n\t\t\t\t\tconst typedArray = getTypedArray(attribute.type, attribute.array);\n\t\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\t\tbufferAttribute = new bufferAttributeConstr(typedArray, attribute.itemSize, attribute.normalized);\n\t\t\t\t}\n\n\t\t\t\tif (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n\t\t\t\tif (attribute.usage !== undefined) bufferAttribute.setUsage(attribute.usage);\n\n\t\t\t\tif (attribute.updateRange !== undefined) {\n\t\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute(key, bufferAttribute);\n\t\t\t}\n\n\t\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\t\tif (morphAttributes) {\n\t\t\t\tfor (const key in morphAttributes) {\n\t\t\t\t\tconst attributeArray = morphAttributes[key];\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor (let i = 0, il = attributeArray.length; i < il; i++) {\n\t\t\t\t\t\tconst attribute = attributeArray[i];\n\t\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\n\t\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\n\t\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst typedArray = getTypedArray(attribute.type, attribute.array);\n\t\t\t\t\t\t\tbufferAttribute = new BufferAttribute(typedArray, attribute.itemSize, attribute.normalized);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n\t\t\t\t\t\tarray.push(bufferAttribute);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.morphAttributes[key] = array;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\t\tif (morphTargetsRelative) {\n\t\t\t\tgeometry.morphTargetsRelative = true;\n\t\t\t}\n\n\t\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif (groups !== undefined) {\n\t\t\t\tfor (let i = 0, n = groups.length; i !== n; ++i) {\n\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\tgeometry.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\t\tif (boundingSphere !== undefined) {\n\t\t\t\tconst center = new Vector3();\n\n\t\t\t\tif (boundingSphere.center !== undefined) {\n\t\t\t\t\tcenter.fromArray(boundingSphere.center);\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n\t\t\t}\n\n\t\t\tif (json.name) geometry.name = json.name;\n\t\t\tif (json.userData) geometry.userData = json.userData;\n\t\t\treturn geometry;\n\t\t}\n\n\t}\n\n\tclass ObjectLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n\t\t\tthis.resourcePath = this.resourcePath || path;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\tlet json = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tjson = JSON.parse(text);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (onError !== undefined) onError(error);\n\t\t\t\t\tconsole.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst metadata = json.metadata;\n\n\t\t\t\tif (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n\t\t\t\t\tconsole.error('THREE.ObjectLoader: Can\\'t load ' + url);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tscope.parse(json, onLoad);\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tasync loadAsync(url, onProgress) {\n\t\t\tconst scope = this;\n\t\t\tconst path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n\t\t\tthis.resourcePath = this.resourcePath || path;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tconst text = await loader.loadAsync(url, onProgress);\n\t\t\tconst json = JSON.parse(text);\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n\t\t\t\tthrow new Error('THREE.ObjectLoader: Can\\'t load ' + url);\n\t\t\t}\n\n\t\t\treturn await scope.parseAsync(json);\n\t\t}\n\n\t\tparse(json, onLoad) {\n\t\t\tconst animations = this.parseAnimations(json.animations);\n\t\t\tconst shapes = this.parseShapes(json.shapes);\n\t\t\tconst geometries = this.parseGeometries(json.geometries, shapes);\n\t\t\tconst images = this.parseImages(json.images, function () {\n\t\t\t\tif (onLoad !== undefined) onLoad(object);\n\t\t\t});\n\t\t\tconst textures = this.parseTextures(json.textures, images);\n\t\t\tconst materials = this.parseMaterials(json.materials, textures);\n\t\t\tconst object = this.parseObject(json.object, geometries, materials, textures, animations);\n\t\t\tconst skeletons = this.parseSkeletons(json.skeletons, object);\n\t\t\tthis.bindSkeletons(object, skeletons); //\n\n\t\t\tif (onLoad !== undefined) {\n\t\t\t\tlet hasImages = false;\n\n\t\t\t\tfor (const uuid in images) {\n\t\t\t\t\tif (images[uuid] instanceof HTMLImageElement) {\n\t\t\t\t\t\thasImages = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hasImages === false) onLoad(object);\n\t\t\t}\n\n\t\t\treturn object;\n\t\t}\n\n\t\tasync parseAsync(json) {\n\t\t\tconst animations = this.parseAnimations(json.animations);\n\t\t\tconst shapes = this.parseShapes(json.shapes);\n\t\t\tconst geometries = this.parseGeometries(json.geometries, shapes);\n\t\t\tconst images = await this.parseImagesAsync(json.images);\n\t\t\tconst textures = this.parseTextures(json.textures, images);\n\t\t\tconst materials = this.parseMaterials(json.materials, textures);\n\t\t\tconst object = this.parseObject(json.object, geometries, materials, textures, animations);\n\t\t\tconst skeletons = this.parseSkeletons(json.skeletons, object);\n\t\t\tthis.bindSkeletons(object, skeletons);\n\t\t\treturn object;\n\t\t}\n\n\t\tparseShapes(json) {\n\t\t\tconst shapes = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst shape = new Shape().fromJSON(json[i]);\n\t\t\t\t\tshapes[shape.uuid] = shape;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn shapes;\n\t\t}\n\n\t\tparseSkeletons(json, object) {\n\t\t\tconst skeletons = {};\n\t\t\tconst bones = {}; // generate bone lookup table\n\n\t\t\tobject.traverse(function (child) {\n\t\t\t\tif (child.isBone) bones[child.uuid] = child;\n\t\t\t}); // create skeletons\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst skeleton = new Skeleton().fromJSON(json[i], bones);\n\t\t\t\t\tskeletons[skeleton.uuid] = skeleton;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn skeletons;\n\t\t}\n\n\t\tparseGeometries(json, shapes) {\n\t\t\tconst geometries = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tlet geometry;\n\t\t\t\t\tconst data = json[i];\n\n\t\t\t\t\tswitch (data.type) {\n\t\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\t\tcase 'InstancedBufferGeometry':\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse(data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\t\t\t\t\t\t\tconsole.error('THREE.ObjectLoader: The legacy Geometry type is no longer supported.');\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif (data.type in Geometries) {\n\t\t\t\t\t\t\t\tgeometry = Geometries[data.type].fromJSON(data, shapes);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.warn(`THREE.ObjectLoader: Unsupported geometry type \"${data.type}\"`);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\t\t\t\t\tif (data.name !== undefined) geometry.name = data.name;\n\t\t\t\t\tif (geometry.isBufferGeometry === true && data.userData !== undefined) geometry.userData = data.userData;\n\t\t\t\t\tgeometries[data.uuid] = geometry;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn geometries;\n\t\t}\n\n\t\tparseMaterials(json, textures) {\n\t\t\tconst cache = {}; // MultiMaterial\n\n\t\t\tconst materials = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tconst loader = new MaterialLoader();\n\t\t\t\tloader.setTextures(textures);\n\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst data = json[i];\n\n\t\t\t\t\tif (data.type === 'MultiMaterial') {\n\t\t\t\t\t\t// Deprecated\n\t\t\t\t\t\tconst array = [];\n\n\t\t\t\t\t\tfor (let j = 0; j < data.materials.length; j++) {\n\t\t\t\t\t\t\tconst material = data.materials[j];\n\n\t\t\t\t\t\t\tif (cache[material.uuid] === undefined) {\n\t\t\t\t\t\t\t\tcache[material.uuid] = loader.parse(material);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tarray.push(cache[material.uuid]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[data.uuid] = array;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (cache[data.uuid] === undefined) {\n\t\t\t\t\t\t\tcache[data.uuid] = loader.parse(data);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[data.uuid] = cache[data.uuid];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn materials;\n\t\t}\n\n\t\tparseAnimations(json) {\n\t\t\tconst animations = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0; i < json.length; i++) {\n\t\t\t\t\tconst data = json[i];\n\t\t\t\t\tconst clip = AnimationClip.parse(data);\n\t\t\t\t\tanimations[clip.uuid] = clip;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn animations;\n\t\t}\n\n\t\tparseImages(json, onLoad) {\n\t\t\tconst scope = this;\n\t\t\tconst images = {};\n\t\t\tlet loader;\n\n\t\t\tfunction loadImage(url) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\treturn loader.load(url, function () {\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, undefined, function () {\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction deserializeImage(image) {\n\t\t\t\tif (typeof image === 'string') {\n\t\t\t\t\tconst url = image;\n\t\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\n\t\t\t\t\treturn loadImage(path);\n\t\t\t\t} else {\n\t\t\t\t\tif (image.data) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tdata: getTypedArray(image.type, image.data),\n\t\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\t\theight: image.height\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (json !== undefined && json.length > 0) {\n\t\t\t\tconst manager = new LoadingManager(onLoad);\n\t\t\t\tloader = new ImageLoader(manager);\n\t\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\n\t\t\t\tfor (let i = 0, il = json.length; i < il; i++) {\n\t\t\t\t\tconst image = json[i];\n\t\t\t\t\tconst url = image.url;\n\n\t\t\t\t\tif (Array.isArray(url)) {\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\t\t\t\t\t\timages[image.uuid] = [];\n\n\t\t\t\t\t\tfor (let j = 0, jl = url.length; j < jl; j++) {\n\t\t\t\t\t\t\tconst currentUrl = url[j];\n\t\t\t\t\t\t\tconst deserializedImage = deserializeImage(currentUrl);\n\n\t\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\t\tif (deserializedImage instanceof HTMLImageElement) {\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(deserializedImage);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// load single image\n\t\t\t\t\t\tconst deserializedImage = deserializeImage(image.url);\n\n\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\timages[image.uuid] = deserializedImage;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn images;\n\t\t}\n\n\t\tasync parseImagesAsync(json) {\n\t\t\tconst scope = this;\n\t\t\tconst images = {};\n\t\t\tlet loader;\n\n\t\t\tasync function deserializeImage(image) {\n\t\t\t\tif (typeof image === 'string') {\n\t\t\t\t\tconst url = image;\n\t\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\n\t\t\t\t\treturn await loader.loadAsync(path);\n\t\t\t\t} else {\n\t\t\t\t\tif (image.data) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tdata: getTypedArray(image.type, image.data),\n\t\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\t\theight: image.height\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (json !== undefined && json.length > 0) {\n\t\t\t\tloader = new ImageLoader(this.manager);\n\t\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\n\t\t\t\tfor (let i = 0, il = json.length; i < il; i++) {\n\t\t\t\t\tconst image = json[i];\n\t\t\t\t\tconst url = image.url;\n\n\t\t\t\t\tif (Array.isArray(url)) {\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\t\t\t\t\t\timages[image.uuid] = [];\n\n\t\t\t\t\t\tfor (let j = 0, jl = url.length; j < jl; j++) {\n\t\t\t\t\t\t\tconst currentUrl = url[j];\n\t\t\t\t\t\t\tconst deserializedImage = await deserializeImage(currentUrl);\n\n\t\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\t\tif (deserializedImage instanceof HTMLImageElement) {\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(deserializedImage);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// load single image\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage(image.url);\n\n\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\timages[image.uuid] = deserializedImage;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn images;\n\t\t}\n\n\t\tparseTextures(json, images) {\n\t\t\tfunction parseConstant(value, type) {\n\t\t\t\tif (typeof value === 'number') return value;\n\t\t\t\tconsole.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n\t\t\t\treturn type[value];\n\t\t\t}\n\n\t\t\tconst textures = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst data = json[i];\n\n\t\t\t\t\tif (data.image === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (images[data.image] === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined image', data.image);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet texture;\n\t\t\t\t\tconst image = images[data.image];\n\n\t\t\t\t\tif (Array.isArray(image)) {\n\t\t\t\t\t\ttexture = new CubeTexture(image);\n\t\t\t\t\t\tif (image.length === 6) texture.needsUpdate = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (image && image.data) {\n\t\t\t\t\t\t\ttexture = new DataTexture(image.data, image.width, image.height);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttexture = new Texture(image);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (image) texture.needsUpdate = true; // textures can have undefined image data\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\t\t\t\t\tif (data.name !== undefined) texture.name = data.name;\n\t\t\t\t\tif (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n\t\t\t\t\tif (data.offset !== undefined) texture.offset.fromArray(data.offset);\n\t\t\t\t\tif (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n\t\t\t\t\tif (data.center !== undefined) texture.center.fromArray(data.center);\n\t\t\t\t\tif (data.rotation !== undefined) texture.rotation = data.rotation;\n\n\t\t\t\t\tif (data.wrap !== undefined) {\n\t\t\t\t\t\ttexture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n\t\t\t\t\t\ttexture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.format !== undefined) texture.format = data.format;\n\t\t\t\t\tif (data.type !== undefined) texture.type = data.type;\n\t\t\t\t\tif (data.encoding !== undefined) texture.encoding = data.encoding;\n\t\t\t\t\tif (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n\t\t\t\t\tif (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n\t\t\t\t\tif (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n\t\t\t\t\tif (data.flipY !== undefined) texture.flipY = data.flipY;\n\t\t\t\t\tif (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\t\tif (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\t\ttextures[data.uuid] = texture;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn textures;\n\t\t}\n\n\t\tparseObject(data, geometries, materials, textures, animations) {\n\t\t\tlet object;\n\n\t\t\tfunction getGeometry(name) {\n\t\t\t\tif (geometries[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined geometry', name);\n\t\t\t\t}\n\n\t\t\t\treturn geometries[name];\n\t\t\t}\n\n\t\t\tfunction getMaterial(name) {\n\t\t\t\tif (name === undefined) return undefined;\n\n\t\t\t\tif (Array.isArray(name)) {\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor (let i = 0, l = name.length; i < l; i++) {\n\t\t\t\t\t\tconst uuid = name[i];\n\n\t\t\t\t\t\tif (materials[uuid] === undefined) {\n\t\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined material', uuid);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push(materials[uuid]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array;\n\t\t\t\t}\n\n\t\t\t\tif (materials[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined material', name);\n\t\t\t\t}\n\n\t\t\t\treturn materials[name];\n\t\t\t}\n\n\t\t\tfunction getTexture(uuid) {\n\t\t\t\tif (textures[uuid] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined texture', uuid);\n\t\t\t\t}\n\n\t\t\t\treturn textures[uuid];\n\t\t\t}\n\n\t\t\tlet geometry, material;\n\n\t\t\tswitch (data.type) {\n\t\t\t\tcase 'Scene':\n\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\tif (data.background !== undefined) {\n\t\t\t\t\t\tif (Number.isInteger(data.background)) {\n\t\t\t\t\t\t\tobject.background = new Color(data.background);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tobject.background = getTexture(data.background);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.environment !== undefined) object.environment = getTexture(data.environment);\n\n\t\t\t\t\tif (data.fog !== undefined) {\n\t\t\t\t\t\tif (data.fog.type === 'Fog') {\n\t\t\t\t\t\t\tobject.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n\t\t\t\t\t\t} else if (data.fog.type === 'FogExp2') {\n\t\t\t\t\t\t\tobject.fog = new FogExp2(data.fog.color, data.fog.density);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PerspectiveCamera':\n\t\t\t\t\tobject = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n\t\t\t\t\tif (data.focus !== undefined) object.focus = data.focus;\n\t\t\t\t\tif (data.zoom !== undefined) object.zoom = data.zoom;\n\t\t\t\t\tif (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n\t\t\t\t\tif (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n\t\t\t\t\tif (data.view !== undefined) object.view = Object.assign({}, data.view);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OrthographicCamera':\n\t\t\t\t\tobject = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n\t\t\t\t\tif (data.zoom !== undefined) object.zoom = data.zoom;\n\t\t\t\t\tif (data.view !== undefined) object.view = Object.assign({}, data.view);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientLight':\n\t\t\t\t\tobject = new AmbientLight(data.color, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tobject = new DirectionalLight(data.color, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tobject = new PointLight(data.color, data.intensity, data.distance, data.decay);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tobject = new RectAreaLight(data.color, data.intensity, data.width, data.height);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tobject = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tobject = new HemisphereLight(data.color, data.groundColor, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LightProbe':\n\t\t\t\t\tobject = new LightProbe().fromJSON(data);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SkinnedMesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tobject = new SkinnedMesh(geometry, material);\n\t\t\t\t\tif (data.bindMode !== undefined) object.bindMode = data.bindMode;\n\t\t\t\t\tif (data.bindMatrix !== undefined) object.bindMatrix.fromArray(data.bindMatrix);\n\t\t\t\t\tif (data.skeleton !== undefined) object.skeleton = data.skeleton;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Mesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tobject = new Mesh(geometry, material);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'InstancedMesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tconst count = data.count;\n\t\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\t\tconst instanceColor = data.instanceColor;\n\t\t\t\t\tobject = new InstancedMesh(geometry, material, count);\n\t\t\t\t\tobject.instanceMatrix = new BufferAttribute(new Float32Array(instanceMatrix.array), 16);\n\t\t\t\t\tif (instanceColor !== undefined) object.instanceColor = new BufferAttribute(new Float32Array(instanceColor.array), instanceColor.itemSize);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LOD':\n\t\t\t\t\tobject = new LOD();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Line':\n\t\t\t\t\tobject = new Line(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineLoop':\n\t\t\t\t\tobject = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineSegments':\n\t\t\t\t\tobject = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointCloud':\n\t\t\t\tcase 'Points':\n\t\t\t\t\tobject = new Points(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\t\t\t\t\tobject = new Sprite(getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Group':\n\t\t\t\t\tobject = new Group();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Bone':\n\t\t\t\t\tobject = new Bone();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tobject = new Object3D();\n\t\t\t}\n\n\t\t\tobject.uuid = data.uuid;\n\t\t\tif (data.name !== undefined) object.name = data.name;\n\n\t\t\tif (data.matrix !== undefined) {\n\t\t\t\tobject.matrix.fromArray(data.matrix);\n\t\t\t\tif (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\t\tif (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n\t\t\t} else {\n\t\t\t\tif (data.position !== undefined) object.position.fromArray(data.position);\n\t\t\t\tif (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n\t\t\t\tif (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n\t\t\t\tif (data.scale !== undefined) object.scale.fromArray(data.scale);\n\t\t\t}\n\n\t\t\tif (data.castShadow !== undefined) object.castShadow = data.castShadow;\n\t\t\tif (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n\n\t\t\tif (data.shadow) {\n\t\t\t\tif (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n\t\t\t\tif (data.shadow.normalBias !== undefined) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\t\tif (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\n\t\t\t\tif (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\n\t\t\t\tif (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\n\t\t\t}\n\n\t\t\tif (data.visible !== undefined) object.visible = data.visible;\n\t\t\tif (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n\t\t\tif (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n\t\t\tif (data.userData !== undefined) object.userData = data.userData;\n\t\t\tif (data.layers !== undefined) object.layers.mask = data.layers;\n\n\t\t\tif (data.children !== undefined) {\n\t\t\t\tconst children = data.children;\n\n\t\t\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\t\t\tobject.add(this.parseObject(children[i], geometries, materials, textures, animations));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.animations !== undefined) {\n\t\t\t\tconst objectAnimations = data.animations;\n\n\t\t\t\tfor (let i = 0; i < objectAnimations.length; i++) {\n\t\t\t\t\tconst uuid = objectAnimations[i];\n\t\t\t\t\tobject.animations.push(animations[uuid]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.type === 'LOD') {\n\t\t\t\tif (data.autoUpdate !== undefined) object.autoUpdate = data.autoUpdate;\n\t\t\t\tconst levels = data.levels;\n\n\t\t\t\tfor (let l = 0; l < levels.length; l++) {\n\t\t\t\t\tconst level = levels[l];\n\t\t\t\t\tconst child = object.getObjectByProperty('uuid', level.object);\n\n\t\t\t\t\tif (child !== undefined) {\n\t\t\t\t\t\tobject.addLevel(child, level.distance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn object;\n\t\t}\n\n\t\tbindSkeletons(object, skeletons) {\n\t\t\tif (Object.keys(skeletons).length === 0) return;\n\t\t\tobject.traverse(function (child) {\n\t\t\t\tif (child.isSkinnedMesh === true && child.skeleton !== undefined) {\n\t\t\t\t\tconst skeleton = skeletons[child.skeleton];\n\n\t\t\t\t\tif (skeleton === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchild.bind(skeleton, child.bindMatrix);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t/* DEPRECATED */\n\n\n\t\tsetTexturePath(value) {\n\t\t\tconsole.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');\n\t\t\treturn this.setResourcePath(value);\n\t\t}\n\n\t}\n\n\tconst TEXTURE_MAPPING = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\tconst TEXTURE_WRAPPING = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\tconst TEXTURE_FILTER = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\t\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\t\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n\t};\n\n\tclass ImageBitmapLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\n\t\t\tif (typeof createImageBitmap === 'undefined') {\n\t\t\t\tconsole.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\n\t\t\t}\n\n\t\t\tif (typeof fetch === 'undefined') {\n\t\t\t\tconsole.warn('THREE.ImageBitmapLoader: fetch() not supported.');\n\t\t\t}\n\n\t\t\tthis.options = {\n\t\t\t\tpremultiplyAlpha: 'none'\n\t\t\t};\n\t\t}\n\n\t\tsetOptions(options) {\n\t\t\tthis.options = options;\n\t\t\treturn this;\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tif (url === undefined) url = '';\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tconst scope = this;\n\t\t\tconst cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t}\n\n\t\t\tconst fetchOptions = {};\n\t\t\tfetchOptions.credentials = this.crossOrigin === 'anonymous' ? 'same-origin' : 'include';\n\t\t\tfetchOptions.headers = this.requestHeader;\n\t\t\tfetch(url, fetchOptions).then(function (res) {\n\t\t\t\treturn res.blob();\n\t\t\t}).then(function (blob) {\n\t\t\t\treturn createImageBitmap(blob, Object.assign(scope.options, {\n\t\t\t\t\tcolorSpaceConversion: 'none'\n\t\t\t\t}));\n\t\t\t}).then(function (imageBitmap) {\n\t\t\t\tCache.add(url, imageBitmap);\n\t\t\t\tif (onLoad) onLoad(imageBitmap);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}).catch(function (e) {\n\t\t\t\tif (onError) onError(e);\n\t\t\t\tscope.manager.itemError(url);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t});\n\t\t\tscope.manager.itemStart(url);\n\t\t}\n\n\t}\n\n\tImageBitmapLoader.prototype.isImageBitmapLoader = true;\n\n\tclass ShapePath {\n\t\tconstructor() {\n\t\t\tthis.type = 'ShapePath';\n\t\t\tthis.color = new Color();\n\t\t\tthis.subPaths = [];\n\t\t\tthis.currentPath = null;\n\t\t}\n\n\t\tmoveTo(x, y) {\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push(this.currentPath);\n\t\t\tthis.currentPath.moveTo(x, y);\n\t\t\treturn this;\n\t\t}\n\n\t\tlineTo(x, y) {\n\t\t\tthis.currentPath.lineTo(x, y);\n\t\t\treturn this;\n\t\t}\n\n\t\tquadraticCurveTo(aCPx, aCPy, aX, aY) {\n\t\t\tthis.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tbezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n\t\t\tthis.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tsplineThru(pts) {\n\t\t\tthis.currentPath.splineThru(pts);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoShapes(isCCW, noHoles) {\n\t\t\tfunction toShapesNoHoles(inSubpaths) {\n\t\t\t\tconst shapes = [];\n\n\t\t\t\tfor (let i = 0, l = inSubpaths.length; i < l; i++) {\n\t\t\t\t\tconst tmpPath = inSubpaths[i];\n\t\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\t\tshapes.push(tmpShape);\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon(inPt, inPolygon) {\n\t\t\t\tconst polyLen = inPolygon.length; // inPt on polygon contour => immediate success\t\tor\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//\twith the horizontal line through inPt, left of inPt\n\t\t\t\t//\tnot counting lowerY endpoints of edges and whole edges on that line\n\n\t\t\t\tlet inside = false;\n\n\t\t\t\tfor (let p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n\t\t\t\t\tlet edgeLowPt = inPolygon[p];\n\t\t\t\t\tlet edgeHighPt = inPolygon[q];\n\t\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif (Math.abs(edgeDy) > Number.EPSILON) {\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif (edgeDy < 0) {\n\t\t\t\t\t\t\tedgeLowPt = inPolygon[q];\n\t\t\t\t\t\t\tedgeDx = -edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[p];\n\t\t\t\t\t\t\tedgeDy = -edgeDy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n\t\t\t\t\t\tif (inPt.y === edgeLowPt.y) {\n\t\t\t\t\t\t\tif (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n\t\t\t\t\t\t\tif (perpEdge === 0) return true; // inPt is on contour ?\n\n\t\t\t\t\t\t\tif (perpEdge < 0) continue;\n\t\t\t\t\t\t\tinside = !inside; // true intersection left of inPt\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif (inPt.y !== edgeLowPt.y) continue; // parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\n\t\t\t\t\t\tif (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn inside;\n\t\t\t}\n\n\t\t\tconst isClockWise = ShapeUtils.isClockWise;\n\t\t\tconst subPaths = this.subPaths;\n\t\t\tif (subPaths.length === 0) return [];\n\t\t\tif (noHoles === true) return toShapesNoHoles(subPaths);\n\t\t\tlet solid, tmpPath, tmpShape;\n\t\t\tconst shapes = [];\n\n\t\t\tif (subPaths.length === 1) {\n\t\t\t\ttmpPath = subPaths[0];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push(tmpShape);\n\t\t\t\treturn shapes;\n\t\t\t}\n\n\t\t\tlet holesFirst = !isClockWise(subPaths[0].getPoints());\n\t\t\tholesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n\t\t\tconst betterShapeHoles = [];\n\t\t\tconst newShapes = [];\n\t\t\tlet newShapeHoles = [];\n\t\t\tlet mainIdx = 0;\n\t\t\tlet tmpPoints;\n\t\t\tnewShapes[mainIdx] = undefined;\n\t\t\tnewShapeHoles[mainIdx] = [];\n\n\t\t\tfor (let i = 0, l = subPaths.length; i < l; i++) {\n\t\t\t\ttmpPath = subPaths[i];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise(tmpPoints);\n\t\t\t\tsolid = isCCW ? !solid : solid;\n\n\t\t\t\tif (solid) {\n\t\t\t\t\tif (!holesFirst && newShapes[mainIdx]) mainIdx++;\n\t\t\t\t\tnewShapes[mainIdx] = {\n\t\t\t\t\t\ts: new Shape(),\n\t\t\t\t\t\tp: tmpPoints\n\t\t\t\t\t};\n\t\t\t\t\tnewShapes[mainIdx].s.curves = tmpPath.curves;\n\t\t\t\t\tif (holesFirst) mainIdx++;\n\t\t\t\t\tnewShapeHoles[mainIdx] = []; //console.log('cw', i);\n\t\t\t\t} else {\n\t\t\t\t\tnewShapeHoles[mainIdx].push({\n\t\t\t\t\t\th: tmpPath,\n\t\t\t\t\t\tp: tmpPoints[0]\n\t\t\t\t\t}); //console.log('ccw', i);\n\t\t\t\t}\n\t\t\t} // only Holes? -> probably all Shapes with wrong orientation\n\n\n\t\t\tif (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n\t\t\tif (newShapes.length > 1) {\n\t\t\t\tlet ambiguous = false;\n\t\t\t\tconst toChange = [];\n\n\t\t\t\tfor (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n\t\t\t\t\tbetterShapeHoles[sIdx] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n\t\t\t\t\tconst sho = newShapeHoles[sIdx];\n\n\t\t\t\t\tfor (let hIdx = 0; hIdx < sho.length; hIdx++) {\n\t\t\t\t\t\tconst ho = sho[hIdx];\n\t\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\t\tfor (let s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n\t\t\t\t\t\t\tif (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n\t\t\t\t\t\t\t\tif (sIdx !== s2Idx) toChange.push({\n\t\t\t\t\t\t\t\t\tfroms: sIdx,\n\t\t\t\t\t\t\t\t\ttos: s2Idx,\n\t\t\t\t\t\t\t\t\thole: hIdx\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif (hole_unassigned) {\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[s2Idx].push(ho);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (hole_unassigned) {\n\t\t\t\t\t\t\tbetterShapeHoles[sIdx].push(ho);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // console.log(\"ambiguous: \", ambiguous);\n\n\n\t\t\t\tif (toChange.length > 0) {\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif (!ambiguous) newShapeHoles = betterShapeHoles;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet tmpHoles;\n\n\t\t\tfor (let i = 0, il = newShapes.length; i < il; i++) {\n\t\t\t\ttmpShape = newShapes[i].s;\n\t\t\t\tshapes.push(tmpShape);\n\t\t\t\ttmpHoles = newShapeHoles[i];\n\n\t\t\t\tfor (let j = 0, jl = tmpHoles.length; j < jl; j++) {\n\t\t\t\t\ttmpShape.holes.push(tmpHoles[j].h);\n\t\t\t\t}\n\t\t\t} //console.log(\"shape\", shapes);\n\n\n\t\t\treturn shapes;\n\t\t}\n\n\t}\n\n\tclass Font {\n\t\tconstructor(data) {\n\t\t\tthis.type = 'Font';\n\t\t\tthis.data = data;\n\t\t}\n\n\t\tgenerateShapes(text, size = 100) {\n\t\t\tconst shapes = [];\n\t\t\tconst paths = createPaths(text, size, this.data);\n\n\t\t\tfor (let p = 0, pl = paths.length; p < pl; p++) {\n\t\t\t\tArray.prototype.push.apply(shapes, paths[p].toShapes());\n\t\t\t}\n\n\t\t\treturn shapes;\n\t\t}\n\n\t}\n\n\tfunction createPaths(text, size, data) {\n\t\tconst chars = Array.from(text);\n\t\tconst scale = size / data.resolution;\n\t\tconst line_height = (data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness) * scale;\n\t\tconst paths = [];\n\t\tlet offsetX = 0,\n\t\t\t\toffsetY = 0;\n\n\t\tfor (let i = 0; i < chars.length; i++) {\n\t\t\tconst char = chars[i];\n\n\t\t\tif (char === '\\n') {\n\t\t\t\toffsetX = 0;\n\t\t\t\toffsetY -= line_height;\n\t\t\t} else {\n\t\t\t\tconst ret = createPath(char, scale, offsetX, offsetY, data);\n\t\t\t\toffsetX += ret.offsetX;\n\t\t\t\tpaths.push(ret.path);\n\t\t\t}\n\t\t}\n\n\t\treturn paths;\n\t}\n\n\tfunction createPath(char, scale, offsetX, offsetY, data) {\n\t\tconst glyph = data.glyphs[char] || data.glyphs['?'];\n\n\t\tif (!glyph) {\n\t\t\tconsole.error('THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.');\n\t\t\treturn;\n\t\t}\n\n\t\tconst path = new ShapePath();\n\t\tlet x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\t\tif (glyph.o) {\n\t\t\tconst outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\n\n\t\t\tfor (let i = 0, l = outline.length; i < l;) {\n\t\t\t\tconst action = outline[i++];\n\n\t\t\t\tswitch (action) {\n\t\t\t\t\tcase 'm':\n\t\t\t\t\t\t// moveTo\n\t\t\t\t\t\tx = outline[i++] * scale + offsetX;\n\t\t\t\t\t\ty = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tpath.moveTo(x, y);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t// lineTo\n\t\t\t\t\t\tx = outline[i++] * scale + offsetX;\n\t\t\t\t\t\ty = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tpath.lineTo(x, y);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'q':\n\t\t\t\t\t\t// quadraticCurveTo\n\t\t\t\t\t\tcpx = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tpath.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t// bezierCurveTo\n\t\t\t\t\t\tcpx = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tcpx2 = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy2 = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tpath.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\toffsetX: glyph.ha * scale,\n\t\t\tpath: path\n\t\t};\n\t}\n\n\tFont.prototype.isFont = true;\n\n\tclass FontLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\tlet json;\n\n\t\t\t\ttry {\n\t\t\t\t\tjson = JSON.parse(text);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');\n\t\t\t\t\tjson = JSON.parse(text.substring(65, text.length - 2));\n\t\t\t\t}\n\n\t\t\t\tconst font = scope.parse(json);\n\t\t\t\tif (onLoad) onLoad(font);\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\treturn new Font(json);\n\t\t}\n\n\t}\n\n\tlet _context;\n\n\tconst AudioContext = {\n\t\tgetContext: function () {\n\t\t\tif (_context === undefined) {\n\t\t\t\t_context = new (window.AudioContext || window.webkitAudioContext)();\n\t\t\t}\n\n\t\t\treturn _context;\n\t\t},\n\t\tsetContext: function (value) {\n\t\t\t_context = value;\n\t\t}\n\t};\n\n\tclass AudioLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tloader.load(url, function (buffer) {\n\t\t\t\ttry {\n\t\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\t\tconst bufferCopy = buffer.slice(0);\n\t\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\t\tcontext.decodeAudioData(bufferCopy, function (audioBuffer) {\n\t\t\t\t\t\tonLoad(audioBuffer);\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t}\n\n\tclass HemisphereLightProbe extends LightProbe {\n\t\tconstructor(skyColor, groundColor, intensity = 1) {\n\t\t\tsuper(undefined, intensity);\n\t\t\tconst color1 = new Color().set(skyColor);\n\t\t\tconst color2 = new Color().set(groundColor);\n\t\t\tconst sky = new Vector3(color1.r, color1.g, color1.b);\n\t\t\tconst ground = new Vector3(color2.r, color2.g, color2.b); // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\n\t\t\tconst c0 = Math.sqrt(Math.PI);\n\t\t\tconst c1 = c0 * Math.sqrt(0.75);\n\t\t\tthis.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);\n\t\t\tthis.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);\n\t\t}\n\n\t}\n\n\tHemisphereLightProbe.prototype.isHemisphereLightProbe = true;\n\n\tclass AmbientLightProbe extends LightProbe {\n\t\tconstructor(color, intensity = 1) {\n\t\t\tsuper(undefined, intensity);\n\t\t\tconst color1 = new Color().set(color); // without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\n\t\t\tthis.sh.coefficients[0].set(color1.r, color1.g, color1.b).multiplyScalar(2 * Math.sqrt(Math.PI));\n\t\t}\n\n\t}\n\n\tAmbientLightProbe.prototype.isAmbientLightProbe = true;\n\n\tconst _eyeRight = /*@__PURE__*/new Matrix4();\n\n\tconst _eyeLeft = /*@__PURE__*/new Matrix4();\n\n\tclass StereoCamera {\n\t\tconstructor() {\n\t\t\tthis.type = 'StereoCamera';\n\t\t\tthis.aspect = 1;\n\t\t\tthis.eyeSep = 0.064;\n\t\t\tthis.cameraL = new PerspectiveCamera();\n\t\t\tthis.cameraL.layers.enable(1);\n\t\t\tthis.cameraL.matrixAutoUpdate = false;\n\t\t\tthis.cameraR = new PerspectiveCamera();\n\t\t\tthis.cameraR.layers.enable(2);\n\t\t\tthis.cameraR.matrixAutoUpdate = false;\n\t\t\tthis._cache = {\n\t\t\t\tfocus: null,\n\t\t\t\tfov: null,\n\t\t\t\taspect: null,\n\t\t\t\tnear: null,\n\t\t\t\tfar: null,\n\t\t\t\tzoom: null,\n\t\t\t\teyeSep: null\n\t\t\t};\n\t\t}\n\n\t\tupdate(camera) {\n\t\t\tconst cache = this._cache;\n\t\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov || cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near || cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\t\tif (needsUpdate) {\n\t\t\t\tcache.focus = camera.focus;\n\t\t\t\tcache.fov = camera.fov;\n\t\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\t\tcache.near = camera.near;\n\t\t\t\tcache.far = camera.far;\n\t\t\t\tcache.zoom = camera.zoom;\n\t\t\t\tcache.eyeSep = this.eyeSep; // Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tconst projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\t\tconst ymax = cache.near * Math.tan(DEG2RAD * cache.fov * 0.5) / cache.zoom;\n\t\t\t\tlet xmin, xmax; // translate xOffset\n\n\t\t\t\t_eyeLeft.elements[12] = -eyeSepHalf;\n\t\t\t\t_eyeRight.elements[12] = eyeSepHalf; // for left eye\n\n\t\t\t\txmin = -ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\tprojectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n\t\t\t\tprojectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n\t\t\t\tthis.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\n\n\t\t\t\txmin = -ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\tprojectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n\t\t\t\tprojectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n\t\t\t\tthis.cameraR.projectionMatrix.copy(projectionMatrix);\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);\n\t\t\tthis.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);\n\t\t}\n\n\t}\n\n\tclass Clock {\n\t\tconstructor(autoStart = true) {\n\t\t\tthis.autoStart = autoStart;\n\t\t\tthis.startTime = 0;\n\t\t\tthis.oldTime = 0;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = false;\n\t\t}\n\n\t\tstart() {\n\t\t\tthis.startTime = now();\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\t\t}\n\n\t\tstop() {\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\t\t\tthis.autoStart = false;\n\t\t}\n\n\t\tgetElapsedTime() {\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\t\t}\n\n\t\tgetDelta() {\n\t\t\tlet diff = 0;\n\n\t\t\tif (this.autoStart && !this.running) {\n\t\t\t\tthis.start();\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (this.running) {\n\t\t\t\tconst newTime = now();\n\t\t\t\tdiff = (newTime - this.oldTime) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\t\t\t\tthis.elapsedTime += diff;\n\t\t\t}\n\n\t\t\treturn diff;\n\t\t}\n\n\t}\n\n\tfunction now() {\n\t\treturn (typeof performance === 'undefined' ? Date : performance).now(); // see #10732\n\t}\n\n\tconst _position$1 = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion$1 = /*@__PURE__*/new Quaternion();\n\n\tconst _scale$1 = /*@__PURE__*/new Vector3();\n\n\tconst _orientation$1 = /*@__PURE__*/new Vector3();\n\n\tclass AudioListener extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'AudioListener';\n\t\t\tthis.context = AudioContext.getContext();\n\t\t\tthis.gain = this.context.createGain();\n\t\t\tthis.gain.connect(this.context.destination);\n\t\t\tthis.filter = null;\n\t\t\tthis.timeDelta = 0; // private\n\n\t\t\tthis._clock = new Clock();\n\t\t}\n\n\t\tgetInput() {\n\t\t\treturn this.gain;\n\t\t}\n\n\t\tremoveFilter() {\n\t\t\tif (this.filter !== null) {\n\t\t\t\tthis.gain.disconnect(this.filter);\n\t\t\t\tthis.filter.disconnect(this.context.destination);\n\t\t\t\tthis.gain.connect(this.context.destination);\n\t\t\t\tthis.filter = null;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetFilter() {\n\t\t\treturn this.filter;\n\t\t}\n\n\t\tsetFilter(value) {\n\t\t\tif (this.filter !== null) {\n\t\t\t\tthis.gain.disconnect(this.filter);\n\t\t\t\tthis.filter.disconnect(this.context.destination);\n\t\t\t} else {\n\t\t\t\tthis.gain.disconnect(this.context.destination);\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect(this.filter);\n\t\t\tthis.filter.connect(this.context.destination);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetMasterVolume() {\n\t\t\treturn this.gain.gain.value;\n\t\t}\n\n\t\tsetMasterVolume(value) {\n\t\t\tthis.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n\t\t\treturn this;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t\tconst listener = this.context.listener;\n\t\t\tconst up = this.up;\n\t\t\tthis.timeDelta = this._clock.getDelta();\n\t\t\tthis.matrixWorld.decompose(_position$1, _quaternion$1, _scale$1);\n\n\t\t\t_orientation$1.set(0, 0, -1).applyQuaternion(_quaternion$1);\n\n\t\t\tif (listener.positionX) {\n\t\t\t\t// code path for Chrome (see #14393)\n\t\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\t\t\t\tlistener.positionX.linearRampToValueAtTime(_position$1.x, endTime);\n\t\t\t\tlistener.positionY.linearRampToValueAtTime(_position$1.y, endTime);\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime(_position$1.z, endTime);\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime(_orientation$1.x, endTime);\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime(_orientation$1.y, endTime);\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime(_orientation$1.z, endTime);\n\t\t\t\tlistener.upX.linearRampToValueAtTime(up.x, endTime);\n\t\t\t\tlistener.upY.linearRampToValueAtTime(up.y, endTime);\n\t\t\t\tlistener.upZ.linearRampToValueAtTime(up.z, endTime);\n\t\t\t} else {\n\t\t\t\tlistener.setPosition(_position$1.x, _position$1.y, _position$1.z);\n\t\t\t\tlistener.setOrientation(_orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tclass Audio extends Object3D {\n\t\tconstructor(listener) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Audio';\n\t\t\tthis.listener = listener;\n\t\t\tthis.context = listener.context;\n\t\t\tthis.gain = this.context.createGain();\n\t\t\tthis.gain.connect(listener.getInput());\n\t\t\tthis.autoplay = false;\n\t\t\tthis.buffer = null;\n\t\t\tthis.detune = 0;\n\t\t\tthis.loop = false;\n\t\t\tthis.loopStart = 0;\n\t\t\tthis.loopEnd = 0;\n\t\t\tthis.offset = 0;\n\t\t\tthis.duration = undefined;\n\t\t\tthis.playbackRate = 1;\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.hasPlaybackControl = true;\n\t\t\tthis.source = null;\n\t\t\tthis.sourceType = 'empty';\n\t\t\tthis._startedAt = 0;\n\t\t\tthis._progress = 0;\n\t\t\tthis._connected = false;\n\t\t\tthis.filters = [];\n\t\t}\n\n\t\tgetOutput() {\n\t\t\treturn this.gain;\n\t\t}\n\n\t\tsetNodeSource(audioNode) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetMediaElementSource(mediaElement) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaNode';\n\t\t\tthis.source = this.context.createMediaElementSource(mediaElement);\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetMediaStreamSource(mediaStream) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaStreamNode';\n\t\t\tthis.source = this.context.createMediaStreamSource(mediaStream);\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetBuffer(audioBuffer) {\n\t\t\tthis.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\t\t\tif (this.autoplay) this.play();\n\t\t\treturn this;\n\t\t}\n\n\t\tplay(delay = 0) {\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tconsole.warn('THREE.Audio: Audio is already playing.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._startedAt = this.context.currentTime + delay;\n\t\t\tconst source = this.context.createBufferSource();\n\t\t\tsource.buffer = this.buffer;\n\t\t\tsource.loop = this.loop;\n\t\t\tsource.loopStart = this.loopStart;\n\t\t\tsource.loopEnd = this.loopEnd;\n\t\t\tsource.onended = this.onEnded.bind(this);\n\t\t\tsource.start(this._startedAt, this._progress + this.offset, this.duration);\n\t\t\tthis.isPlaying = true;\n\t\t\tthis.source = source;\n\t\t\tthis.setDetune(this.detune);\n\t\t\tthis.setPlaybackRate(this.playbackRate);\n\t\t\treturn this.connect();\n\t\t}\n\n\t\tpause() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\t// update current progress\n\t\t\t\tthis._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate;\n\n\t\t\t\tif (this.loop === true) {\n\t\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\t\t\t\t\tthis._progress = this._progress % (this.duration || this.buffer.duration);\n\t\t\t\t}\n\n\t\t\t\tthis.source.stop();\n\t\t\t\tthis.source.onended = null;\n\t\t\t\tthis.isPlaying = false;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tstop() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._progress = 0;\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.isPlaying = false;\n\t\t\treturn this;\n\t\t}\n\n\t\tconnect() {\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\tthis.source.connect(this.filters[0]);\n\n\t\t\t\tfor (let i = 1, l = this.filters.length; i < l; i++) {\n\t\t\t\t\tthis.filters[i - 1].connect(this.filters[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.filters[this.filters.length - 1].connect(this.getOutput());\n\t\t\t} else {\n\t\t\t\tthis.source.connect(this.getOutput());\n\t\t\t}\n\n\t\t\tthis._connected = true;\n\t\t\treturn this;\n\t\t}\n\n\t\tdisconnect() {\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\tthis.source.disconnect(this.filters[0]);\n\n\t\t\t\tfor (let i = 1, l = this.filters.length; i < l; i++) {\n\t\t\t\t\tthis.filters[i - 1].disconnect(this.filters[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.filters[this.filters.length - 1].disconnect(this.getOutput());\n\t\t\t} else {\n\t\t\t\tthis.source.disconnect(this.getOutput());\n\t\t\t}\n\n\t\t\tthis._connected = false;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetFilters() {\n\t\t\treturn this.filters;\n\t\t}\n\n\t\tsetFilters(value) {\n\t\t\tif (!value) value = [];\n\n\t\t\tif (this._connected === true) {\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value.slice();\n\t\t\t\tthis.connect();\n\t\t\t} else {\n\t\t\t\tthis.filters = value.slice();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetDetune(value) {\n\t\t\tthis.detune = value;\n\t\t\tif (this.source.detune === undefined) return; // only set detune when available\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetDetune() {\n\t\t\treturn this.detune;\n\t\t}\n\n\t\tgetFilter() {\n\t\t\treturn this.getFilters()[0];\n\t\t}\n\n\t\tsetFilter(filter) {\n\t\t\treturn this.setFilters(filter ? [filter] : []);\n\t\t}\n\n\t\tsetPlaybackRate(value) {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetPlaybackRate() {\n\t\t\treturn this.playbackRate;\n\t\t}\n\n\t\tonEnded() {\n\t\t\tthis.isPlaying = false;\n\t\t}\n\n\t\tgetLoop() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this.loop;\n\t\t}\n\n\t\tsetLoop(value) {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.loop = value;\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.loop = this.loop;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetLoopStart(value) {\n\t\t\tthis.loopStart = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetLoopEnd(value) {\n\t\t\tthis.loopEnd = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetVolume() {\n\t\t\treturn this.gain.gain.value;\n\t\t}\n\n\t\tsetVolume(value) {\n\t\t\tthis.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tconst _position = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion = /*@__PURE__*/new Quaternion();\n\n\tconst _scale = /*@__PURE__*/new Vector3();\n\n\tconst _orientation = /*@__PURE__*/new Vector3();\n\n\tclass PositionalAudio extends Audio {\n\t\tconstructor(listener) {\n\t\t\tsuper(listener);\n\t\t\tthis.panner = this.context.createPanner();\n\t\t\tthis.panner.panningModel = 'HRTF';\n\t\t\tthis.panner.connect(this.gain);\n\t\t}\n\n\t\tgetOutput() {\n\t\t\treturn this.panner;\n\t\t}\n\n\t\tgetRefDistance() {\n\t\t\treturn this.panner.refDistance;\n\t\t}\n\n\t\tsetRefDistance(value) {\n\t\t\tthis.panner.refDistance = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetRolloffFactor() {\n\t\t\treturn this.panner.rolloffFactor;\n\t\t}\n\n\t\tsetRolloffFactor(value) {\n\t\t\tthis.panner.rolloffFactor = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetDistanceModel() {\n\t\t\treturn this.panner.distanceModel;\n\t\t}\n\n\t\tsetDistanceModel(value) {\n\t\t\tthis.panner.distanceModel = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetMaxDistance() {\n\t\t\treturn this.panner.maxDistance;\n\t\t}\n\n\t\tsetMaxDistance(value) {\n\t\t\tthis.panner.maxDistance = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetDirectionalCone(coneInnerAngle, coneOuterAngle, coneOuterGain) {\n\t\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\t\tthis.panner.coneOuterGain = coneOuterGain;\n\t\t\treturn this;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t\tif (this.hasPlaybackControl === true && this.isPlaying === false) return;\n\t\t\tthis.matrixWorld.decompose(_position, _quaternion, _scale);\n\n\t\t\t_orientation.set(0, 0, 1).applyQuaternion(_quaternion);\n\n\t\t\tconst panner = this.panner;\n\n\t\t\tif (panner.positionX) {\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\t\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\t\t\t\tpanner.positionX.linearRampToValueAtTime(_position.x, endTime);\n\t\t\t\tpanner.positionY.linearRampToValueAtTime(_position.y, endTime);\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime(_position.z, endTime);\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime(_orientation.x, endTime);\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime(_orientation.y, endTime);\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime(_orientation.z, endTime);\n\t\t\t} else {\n\t\t\t\tpanner.setPosition(_position.x, _position.y, _position.z);\n\t\t\t\tpanner.setOrientation(_orientation.x, _orientation.y, _orientation.z);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tclass AudioAnalyser {\n\t\tconstructor(audio, fftSize = 2048) {\n\t\t\tthis.analyser = audio.context.createAnalyser();\n\t\t\tthis.analyser.fftSize = fftSize;\n\t\t\tthis.data = new Uint8Array(this.analyser.frequencyBinCount);\n\t\t\taudio.getOutput().connect(this.analyser);\n\t\t}\n\n\t\tgetFrequencyData() {\n\t\t\tthis.analyser.getByteFrequencyData(this.data);\n\t\t\treturn this.data;\n\t\t}\n\n\t\tgetAverageFrequency() {\n\t\t\tlet value = 0;\n\t\t\tconst data = this.getFrequencyData();\n\n\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\tvalue += data[i];\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\t\t}\n\n\t}\n\n\tclass PropertyMixer {\n\t\tconstructor(binding, typeName, valueSize) {\n\t\t\tthis.binding = binding;\n\t\t\tthis.valueSize = valueSize;\n\t\t\tlet mixFunction, mixFunctionAdditive, setIdentity; // buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t\t//\n\t\t\t// interpolators can use .buffer as their .result\n\t\t\t// the data then goes to 'incoming'\n\t\t\t//\n\t\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t\t// the cumulative result and are compared to detect\n\t\t\t// changes\n\t\t\t//\n\t\t\t// 'orig' stores the original state of the property\n\t\t\t//\n\t\t\t// 'add' is used for additive cumulative results\n\t\t\t//\n\t\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t\t// to store intermediate quaternion multiplication results\n\n\t\t\tswitch (typeName) {\n\t\t\t\tcase 'quaternion':\n\t\t\t\t\tmixFunction = this._slerp;\n\t\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\t\t\t\t\tthis.buffer = new Float64Array(valueSize * 6);\n\t\t\t\t\tthis._workIndex = 5;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'string':\n\t\t\t\tcase 'bool':\n\t\t\t\t\tmixFunction = this._select; // Use the regular mix function and for additive on these types,\n\t\t\t\t\t// additive is not relevant for non-numeric types\n\n\t\t\t\t\tmixFunctionAdditive = this._select;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\t\t\t\t\tthis.buffer = new Array(valueSize * 5);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tmixFunction = this._lerp;\n\t\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\t\t\t\t\tthis.buffer = new Float64Array(valueSize * 5);\n\t\t\t}\n\n\t\t\tthis._mixBufferRegion = mixFunction;\n\t\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\t\tthis._setIdentity = setIdentity;\n\t\t\tthis._origIndex = 3;\n\t\t\tthis._addIndex = 4;\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\t\t\tthis.useCount = 0;\n\t\t\tthis.referenceCount = 0;\n\t\t} // accumulate data in the 'incoming' region into 'accu<i>'\n\n\n\t\taccumulate(accuIndex, weight) {\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\t\t\tconst buffer = this.buffer,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset = accuIndex * stride + stride;\n\t\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\t\tif (currentWeight === 0) {\n\t\t\t\t// accuN := incoming * weight\n\t\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\t\tbuffer[offset + i] = buffer[i];\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\t\t\t} else {\n\t\t\t\t// accuN := accuN + incoming * weight\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tconst mix = weight / currentWeight;\n\n\t\t\t\tthis._mixBufferRegion(buffer, offset, 0, mix, stride);\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\t\t} // accumulate data in the 'incoming' region into 'add'\n\n\n\t\taccumulateAdditive(weight) {\n\t\t\tconst buffer = this.buffer,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset = stride * this._addIndex;\n\n\t\t\tif (this.cumulativeWeightAdditive === 0) {\n\t\t\t\t// add = identity\n\t\t\t\tthis._setIdentity();\n\t\t\t} // add := add + incoming * weight\n\n\n\t\t\tthis._mixBufferRegionAdditive(buffer, offset, 0, weight, stride);\n\n\t\t\tthis.cumulativeWeightAdditive += weight;\n\t\t} // apply the state of 'accu<i>' to the binding when accus differ\n\n\n\t\tapply(accuIndex) {\n\t\t\tconst stride = this.valueSize,\n\t\t\t\t\t\tbuffer = this.buffer,\n\t\t\t\t\t\toffset = accuIndex * stride + stride,\n\t\t\t\t\t\tweight = this.cumulativeWeight,\n\t\t\t\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\t\t\t\t\t\tbinding = this.binding;\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\t\tif (weight < 1) {\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\t\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\t\tthis._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n\t\t\t}\n\n\t\t\tif (weightAdditive > 0) {\n\t\t\t\t// accuN := accuN + additive accuN\n\t\t\t\tthis._mixBufferRegionAdditive(buffer, offset, this._addIndex * stride, 1, stride);\n\t\t\t}\n\n\t\t\tfor (let i = stride, e = stride + stride; i !== e; ++i) {\n\t\t\t\tif (buffer[i] !== buffer[i + stride]) {\n\t\t\t\t\t// value has changed -> update scene graph\n\t\t\t\t\tbinding.setValue(buffer, offset);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} // remember the state of the bound property and copy it to both accus\n\n\n\t\tsaveOriginalState() {\n\t\t\tconst binding = this.binding;\n\t\t\tconst buffer = this.buffer,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toriginalValueOffset = stride * this._origIndex;\n\t\t\tbinding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\n\n\t\t\tfor (let i = stride, e = originalValueOffset; i !== e; ++i) {\n\t\t\t\tbuffer[i] = buffer[originalValueOffset + i % stride];\n\t\t\t} // Add to identity for additive\n\n\n\t\t\tthis._setIdentity();\n\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\t\t} // apply the state previously taken via 'saveOriginalState' to the binding\n\n\n\t\trestoreOriginalState() {\n\t\t\tconst originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue(this.buffer, originalValueOffset);\n\t\t}\n\n\t\t_setAdditiveIdentityNumeric() {\n\t\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tthis.buffer[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t_setAdditiveIdentityQuaternion() {\n\t\t\tthis._setAdditiveIdentityNumeric();\n\n\t\t\tthis.buffer[this._addIndex * this.valueSize + 3] = 1;\n\t\t}\n\n\t\t_setAdditiveIdentityOther() {\n\t\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\t\tfor (let i = 0; i < this.valueSize; i++) {\n\t\t\t\tthis.buffer[targetIndex + i] = this.buffer[startIndex + i];\n\t\t\t}\n\t\t} // mix functions\n\n\n\t\t_select(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tif (t >= 0.5) {\n\t\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\t\tbuffer[dstOffset + i] = buffer[srcOffset + i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_slerp(buffer, dstOffset, srcOffset, t) {\n\t\t\tQuaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n\t\t}\n\n\t\t_slerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tconst workOffset = this._workIndex * stride; // Store result in intermediate buffer offset\n\n\t\t\tQuaternion.multiplyQuaternionsFlat(buffer, workOffset, buffer, dstOffset, buffer, srcOffset); // Slerp to the intermediate result\n\n\t\t\tQuaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t);\n\t\t}\n\n\t\t_lerp(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tconst s = 1 - t;\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tconst j = dstOffset + i;\n\t\t\t\tbuffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n\t\t\t}\n\t\t}\n\n\t\t_lerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tconst j = dstOffset + i;\n\t\t\t\tbuffer[j] = buffer[j] + buffer[srcOffset + i] * t;\n\t\t\t}\n\t\t}\n\n\t}\n\n\t// Characters [].:/ are reserved for track binding syntax.\n\tconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\n\tconst _reservedRe = new RegExp('[' + _RESERVED_CHARS_RE + ']', 'g'); // Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t// instead, we exclude reserved characters and match everything else.\n\n\n\tconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\n\n\tconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace('\\\\.', '') + ']'; // Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t// be matched to parse the rest of the track name.\n\n\n\tconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace('WC', _wordChar); // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\n\n\tconst _nodeRe = /(WCOD+)?/.source.replace('WCOD', _wordCharOrDot); // Object on target node, and accessor. May not contain reserved\n\t// characters. Accessor may contain any character except closing bracket.\n\n\n\tconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC', _wordChar); // Property and accessor. May not contain reserved characters. Accessor may\n\t// contain any non-bracket characters.\n\n\n\tconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC', _wordChar);\n\n\tconst _trackRe = new RegExp('' + '^' + _directoryRe + _nodeRe + _objectRe + _propertyRe + '$');\n\n\tconst _supportedObjectNames = ['material', 'materials', 'bones'];\n\n\tclass Composite {\n\t\tconstructor(targetGroup, path, optionalParsedPath) {\n\t\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\n\t\t\tthis._targetGroup = targetGroup;\n\t\t\tthis._bindings = targetGroup.subscribe_(path, parsedPath);\n\t\t}\n\n\t\tgetValue(array, offset) {\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t\tbinding = this._bindings[firstValidIndex]; // and only call .getValue on the first\n\n\t\t\tif (binding !== undefined) binding.getValue(array, offset);\n\t\t}\n\n\t\tsetValue(array, offset) {\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].setValue(array, offset);\n\t\t\t}\n\t\t}\n\n\t\tbind() {\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].bind();\n\t\t\t}\n\t\t}\n\n\t\tunbind() {\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].unbind();\n\t\t\t}\n\t\t}\n\n\t} // Note: This class uses a State pattern on a per-method basis:\n\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t// prototype version of these methods with one that represents\n\t// the bound state. When the property is not found, the methods\n\t// become no-ops.\n\n\n\tclass PropertyBinding {\n\t\tconstructor(rootNode, path, parsedPath) {\n\t\t\tthis.path = path;\n\t\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\n\t\t\tthis.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n\t\t\tthis.rootNode = rootNode; // initial state of these methods that calls 'bind'\n\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\t\t}\n\n\t\tstatic create(root, path, parsedPath) {\n\t\t\tif (!(root && root.isAnimationObjectGroup)) {\n\t\t\t\treturn new PropertyBinding(root, path, parsedPath);\n\t\t\t} else {\n\t\t\t\treturn new PropertyBinding.Composite(root, path, parsedPath);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t *\n\t\t * @param {string} name Node name to be sanitized.\n\t\t * @return {string}\n\t\t */\n\n\n\t\tstatic sanitizeNodeName(name) {\n\t\t\treturn name.replace(/\\s/g, '_').replace(_reservedRe, '');\n\t\t}\n\n\t\tstatic parseTrackName(trackName) {\n\t\t\tconst matches = _trackRe.exec(trackName);\n\n\t\t\tif (!matches) {\n\t\t\t\tthrow new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\n\t\t\t}\n\n\t\t\tconst results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[2],\n\t\t\t\tobjectName: matches[3],\n\t\t\t\tobjectIndex: matches[4],\n\t\t\t\tpropertyName: matches[5],\n\t\t\t\t// required\n\t\t\t\tpropertyIndex: matches[6]\n\t\t\t};\n\t\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\n\n\t\t\tif (lastDot !== undefined && lastDot !== -1) {\n\t\t\t\tconst objectName = results.nodeName.substring(lastDot + 1); // Object names must be checked against an allowlist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\n\t\t\t\tif (_supportedObjectNames.indexOf(objectName) !== -1) {\n\t\t\t\t\tresults.nodeName = results.nodeName.substring(0, lastDot);\n\t\t\t\t\tresults.objectName = objectName;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (results.propertyName === null || results.propertyName.length === 0) {\n\t\t\t\tthrow new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\n\t\t\t}\n\n\t\t\treturn results;\n\t\t}\n\n\t\tstatic findNode(root, nodeName) {\n\t\t\tif (!nodeName || nodeName === '' || nodeName === '.' || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n\t\t\t\treturn root;\n\t\t\t} // search into skeleton bones.\n\n\n\t\t\tif (root.skeleton) {\n\t\t\t\tconst bone = root.skeleton.getBoneByName(nodeName);\n\n\t\t\t\tif (bone !== undefined) {\n\t\t\t\t\treturn bone;\n\t\t\t\t}\n\t\t\t} // search into node subtree.\n\n\n\t\t\tif (root.children) {\n\t\t\t\tconst searchNodeSubtree = function (children) {\n\t\t\t\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\t\t\t\tconst childNode = children[i];\n\n\t\t\t\t\t\tif (childNode.name === nodeName || childNode.uuid === nodeName) {\n\t\t\t\t\t\t\treturn childNode;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst result = searchNodeSubtree(childNode.children);\n\t\t\t\t\t\tif (result) return result;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t};\n\n\t\t\t\tconst subTreeNode = searchNodeSubtree(root.children);\n\n\t\t\t\tif (subTreeNode) {\n\t\t\t\t\treturn subTreeNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t} // these are used to \"bind\" a nonexistent property\n\n\n\t\t_getValue_unavailable() {}\n\n\t\t_setValue_unavailable() {} // Getters\n\n\n\t\t_getValue_direct(buffer, offset) {\n\t\t\tbuffer[offset] = this.node[this.propertyName];\n\t\t}\n\n\t\t_getValue_array(buffer, offset) {\n\t\t\tconst source = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = source.length; i !== n; ++i) {\n\t\t\t\tbuffer[offset++] = source[i];\n\t\t\t}\n\t\t}\n\n\t\t_getValue_arrayElement(buffer, offset) {\n\t\t\tbuffer[offset] = this.resolvedProperty[this.propertyIndex];\n\t\t}\n\n\t\t_getValue_toArray(buffer, offset) {\n\t\t\tthis.resolvedProperty.toArray(buffer, offset);\n\t\t} // Direct\n\n\n\t\t_setValue_direct(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t}\n\n\t\t_setValue_direct_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t} // EntireArray\n\n\n\t\t_setValue_array(buffer, offset) {\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\t\t}\n\n\t\t_setValue_array_setNeedsUpdate(buffer, offset) {\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t} // ArrayElement\n\n\n\t\t_setValue_arrayElement(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t}\n\n\t\t_setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t} // HasToFromArray\n\n\n\t\t_setValue_fromArray(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t}\n\n\t\t_setValue_fromArray_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t}\n\n\t\t_getValue_unbound(targetArray, offset) {\n\t\t\tthis.bind();\n\t\t\tthis.getValue(targetArray, offset);\n\t\t}\n\n\t\t_setValue_unbound(sourceArray, offset) {\n\t\t\tthis.bind();\n\t\t\tthis.setValue(sourceArray, offset);\n\t\t} // create getter / setter pair for a property in the scene graph\n\n\n\t\tbind() {\n\t\t\tlet targetObject = this.node;\n\t\t\tconst parsedPath = this.parsedPath;\n\t\t\tconst objectName = parsedPath.objectName;\n\t\t\tconst propertyName = parsedPath.propertyName;\n\t\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif (!targetObject) {\n\t\t\t\ttargetObject = PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\n\t\t\t\tthis.node = targetObject;\n\t\t\t} // set fail state so we can just 'return' on error\n\n\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable; // ensure there is a value node\n\n\t\t\tif (!targetObject) {\n\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (objectName) {\n\t\t\t\tlet objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\n\t\t\t\tswitch (objectName) {\n\t\t\t\t\tcase 'materials':\n\t\t\t\t\t\tif (!targetObject.material) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!targetObject.material.materials) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\t\t\t\t\t\tif (!targetObject.skeleton) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} // potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\n\n\t\t\t\t\t\tfor (let i = 0; i < targetObject.length; i++) {\n\t\t\t\t\t\t\tif (targetObject[i].name === objectIndex) {\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (targetObject[objectName] === undefined) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[objectName];\n\t\t\t\t}\n\n\t\t\t\tif (objectIndex !== undefined) {\n\t\t\t\t\tif (targetObject[objectIndex] === undefined) {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[objectIndex];\n\t\t\t\t}\n\t\t\t} // resolve property\n\n\n\t\t\tconst nodeProperty = targetObject[propertyName];\n\n\t\t\tif (nodeProperty === undefined) {\n\t\t\t\tconst nodeName = parsedPath.nodeName;\n\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\\'t found.', targetObject);\n\t\t\t\treturn;\n\t\t\t} // determine versioning scheme\n\n\n\t\t\tlet versioning = this.Versioning.None;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t\tif (targetObject.needsUpdate !== undefined) {\n\t\t\t\t// material\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\t} else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n\t\t\t\t// node transform\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\t} // determine how the property gets bound\n\n\n\t\t\tlet bindingType = this.BindingType.Direct;\n\n\t\t\tif (propertyIndex !== undefined) {\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\t\t\t\tif (propertyName === 'morphTargetInfluences') {\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif (!targetObject.geometry) {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (targetObject.geometry.isBufferGeometry) {\n\t\t\t\t\t\tif (!targetObject.geometry.morphAttributes) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (targetObject.morphTargetDictionary[propertyIndex] !== undefined) {\n\t\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[propertyIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\t\t\t} else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t} else if (Array.isArray(nodeProperty)) {\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t} else {\n\t\t\t\tthis.propertyName = propertyName;\n\t\t\t} // select getter / setter\n\n\n\t\t\tthis.getValue = this.GetterByBindingType[bindingType];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n\t\t}\n\n\t\tunbind() {\n\t\t\tthis.node = null; // back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\t\t}\n\n\t}\n\n\tPropertyBinding.Composite = Composite;\n\tPropertyBinding.prototype.BindingType = {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t};\n\tPropertyBinding.prototype.Versioning = {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t};\n\tPropertyBinding.prototype.GetterByBindingType = [PropertyBinding.prototype._getValue_direct, PropertyBinding.prototype._getValue_array, PropertyBinding.prototype._getValue_arrayElement, PropertyBinding.prototype._getValue_toArray];\n\tPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [[// Direct\n\tPropertyBinding.prototype._setValue_direct, PropertyBinding.prototype._setValue_direct_setNeedsUpdate, PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate], [// EntireArray\n\tPropertyBinding.prototype._setValue_array, PropertyBinding.prototype._setValue_array_setNeedsUpdate, PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate], [// ArrayElement\n\tPropertyBinding.prototype._setValue_arrayElement, PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate, PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate], [// HasToFromArray\n\tPropertyBinding.prototype._setValue_fromArray, PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate, PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t *\t- Add objects you would otherwise pass as 'root' to the\n\t *\t\tconstructor or the .clipAction method of AnimationMixer.\n\t *\n\t *\t- Instead pass this object as 'root'.\n\t *\n\t *\t- You can also add and remove objects later when the mixer\n\t *\t\tis running.\n\t *\n\t * Note:\n\t *\n\t *\t\tObjects of this class appear as one object to the mixer,\n\t *\t\tso cache control of the individual objects must be done\n\t *\t\ton the group.\n\t *\n\t * Limitation:\n\t *\n\t *\t- The animated properties must be compatible among the\n\t *\t\tall objects in the group.\n\t *\n\t *\t- A single property can either be controlled through a\n\t *\t\ttarget group or directly, but not both.\n\t */\n\n\tclass AnimationObjectGroup {\n\t\tconstructor() {\n\t\t\tthis.uuid = generateUUID(); // cached objects followed by the active ones\n\n\t\t\tthis._objects = Array.prototype.slice.call(arguments);\n\t\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t\t// note: read by PropertyBinding.Composite\n\n\t\t\tconst indices = {};\n\t\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tindices[arguments[i].uuid] = i;\n\t\t\t}\n\n\t\t\tthis._paths = []; // inside: string\n\n\t\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\n\t\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\n\t\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\t\tconst scope = this;\n\t\t\tthis.stats = {\n\t\t\t\tobjects: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._objects.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tget bindingsPerObject() {\n\t\t\t\t\treturn scope._bindings.length;\n\t\t\t\t}\n\n\t\t\t};\n\t\t}\n\n\t\tadd() {\n\t\t\tconst objects = this._objects,\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\t\tpaths = this._paths,\n\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tnBindings = bindings.length;\n\t\t\tlet knownObject = undefined,\n\t\t\t\t\tnObjects = objects.length,\n\t\t\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tconst object = arguments[i],\n\t\t\t\t\t\t\tuuid = object.uuid;\n\t\t\t\tlet index = indicesByUUID[uuid];\n\n\t\t\t\tif (index === undefined) {\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\t\t\t\t\tindex = nObjects++;\n\t\t\t\t\tindicesByUUID[uuid] = index;\n\t\t\t\t\tobjects.push(object); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tbindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\n\t\t\t\t\t}\n\t\t\t\t} else if (index < nCachedObjects) {\n\t\t\t\t\tknownObject = objects[index]; // move existing object to the ACTIVE region\n\n\t\t\t\t\tconst firstActiveIndex = --nCachedObjects,\n\t\t\t\t\t\t\t\tlastCachedObject = objects[firstActiveIndex];\n\t\t\t\t\tindicesByUUID[lastCachedObject.uuid] = index;\n\t\t\t\t\tobjects[index] = lastCachedObject;\n\t\t\t\t\tindicesByUUID[uuid] = firstActiveIndex;\n\t\t\t\t\tobjects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tconst bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\t\tlastCached = bindingsForPath[firstActiveIndex];\n\t\t\t\t\t\tlet binding = bindingsForPath[index];\n\t\t\t\t\t\tbindingsForPath[index] = lastCached;\n\n\t\t\t\t\t\tif (binding === undefined) {\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\t\t\t\t\t\t\tbinding = new PropertyBinding(object, paths[j], parsedPaths[j]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[firstActiveIndex] = binding;\n\t\t\t\t\t}\n\t\t\t\t} else if (objects[index] !== knownObject) {\n\t\t\t\t\tconsole.error('THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.');\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t}\n\n\t\tremove() {\n\t\t\tconst objects = this._objects,\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tnBindings = bindings.length;\n\t\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tconst object = arguments[i],\n\t\t\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\t\t\tindex = indicesByUUID[uuid];\n\n\t\t\t\tif (index !== undefined && index >= nCachedObjects) {\n\t\t\t\t\t// move existing object into the CACHED region\n\t\t\t\t\tconst lastCachedIndex = nCachedObjects++,\n\t\t\t\t\t\t\t\tfirstActiveObject = objects[lastCachedIndex];\n\t\t\t\t\tindicesByUUID[firstActiveObject.uuid] = index;\n\t\t\t\t\tobjects[index] = firstActiveObject;\n\t\t\t\t\tindicesByUUID[uuid] = lastCachedIndex;\n\t\t\t\t\tobjects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tconst bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\t\tfirstActive = bindingsForPath[lastCachedIndex],\n\t\t\t\t\t\t\t\t\tbinding = bindingsForPath[index];\n\t\t\t\t\t\tbindingsForPath[index] = firstActive;\n\t\t\t\t\t\tbindingsForPath[lastCachedIndex] = binding;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t} // remove & forget\n\n\n\t\tuncache() {\n\t\t\tconst objects = this._objects,\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tnBindings = bindings.length;\n\t\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\t\t\tnObjects = objects.length;\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tconst object = arguments[i],\n\t\t\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\t\t\tindex = indicesByUUID[uuid];\n\n\t\t\t\tif (index !== undefined) {\n\t\t\t\t\tdelete indicesByUUID[uuid];\n\n\t\t\t\t\tif (index < nCachedObjects) {\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\t\t\t\t\t\tconst firstActiveIndex = --nCachedObjects,\n\t\t\t\t\t\t\t\t\tlastCachedObject = objects[firstActiveIndex],\n\t\t\t\t\t\t\t\t\tlastIndex = --nObjects,\n\t\t\t\t\t\t\t\t\tlastObject = objects[lastIndex]; // last cached object takes this object's place\n\n\t\t\t\t\t\tindicesByUUID[lastCachedObject.uuid] = index;\n\t\t\t\t\t\tobjects[index] = lastCachedObject; // last object goes to the activated slot and pop\n\n\t\t\t\t\t\tindicesByUUID[lastObject.uuid] = firstActiveIndex;\n\t\t\t\t\t\tobjects[firstActiveIndex] = lastObject;\n\t\t\t\t\t\tobjects.pop(); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\t\tconst bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\t\t\tlastCached = bindingsForPath[firstActiveIndex],\n\t\t\t\t\t\t\t\t\t\tlast = bindingsForPath[lastIndex];\n\t\t\t\t\t\t\tbindingsForPath[index] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[firstActiveIndex] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\t\t\t\t\t\tconst lastIndex = --nObjects,\n\t\t\t\t\t\t\t\t\tlastObject = objects[lastIndex];\n\n\t\t\t\t\t\tif (lastIndex > 0) {\n\t\t\t\t\t\t\tindicesByUUID[lastObject.uuid] = index;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tobjects[index] = lastObject;\n\t\t\t\t\t\tobjects.pop(); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\t\tconst bindingsForPath = bindings[j];\n\t\t\t\t\t\t\tbindingsForPath[index] = bindingsForPath[lastIndex];\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t} // Internal interface used by befriended PropertyBinding.Composite:\n\n\n\t\tsubscribe_(path, parsedPath) {\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\t\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\t\tlet index = indicesByPath[path];\n\t\t\tconst bindings = this._bindings;\n\t\t\tif (index !== undefined) return bindings[index];\n\t\t\tconst paths = this._paths,\n\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\tobjects = this._objects,\n\t\t\t\t\t\tnObjects = objects.length,\n\t\t\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\t\t\tbindingsForPath = new Array(nObjects);\n\t\t\tindex = bindings.length;\n\t\t\tindicesByPath[path] = index;\n\t\t\tpaths.push(path);\n\t\t\tparsedPaths.push(parsedPath);\n\t\t\tbindings.push(bindingsForPath);\n\n\t\t\tfor (let i = nCachedObjects, n = objects.length; i !== n; ++i) {\n\t\t\t\tconst object = objects[i];\n\t\t\t\tbindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\t\t}\n\n\t\tunsubscribe_(path) {\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\t\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\t\t\tindex = indicesByPath[path];\n\n\t\t\tif (index !== undefined) {\n\t\t\t\tconst paths = this._paths,\n\t\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\t\t\tlastBindings = bindings[lastBindingsIndex],\n\t\t\t\t\t\t\tlastBindingsPath = path[lastBindingsIndex];\n\t\t\t\tindicesByPath[lastBindingsPath] = index;\n\t\t\t\tbindings[index] = lastBindings;\n\t\t\t\tbindings.pop();\n\t\t\t\tparsedPaths[index] = parsedPaths[lastBindingsIndex];\n\t\t\t\tparsedPaths.pop();\n\t\t\t\tpaths[index] = paths[lastBindingsIndex];\n\t\t\t\tpaths.pop();\n\t\t\t}\n\t\t}\n\n\t}\n\n\tAnimationObjectGroup.prototype.isAnimationObjectGroup = true;\n\n\tclass AnimationAction {\n\t\tconstructor(mixer, clip, localRoot = null, blendMode = clip.blendMode) {\n\t\t\tthis._mixer = mixer;\n\t\t\tthis._clip = clip;\n\t\t\tthis._localRoot = localRoot;\n\t\t\tthis.blendMode = blendMode;\n\t\t\tconst tracks = clip.tracks,\n\t\t\t\t\t\tnTracks = tracks.length,\n\t\t\t\t\t\tinterpolants = new Array(nTracks);\n\t\t\tconst interpolantSettings = {\n\t\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t\t};\n\n\t\t\tfor (let i = 0; i !== nTracks; ++i) {\n\t\t\t\tconst interpolant = tracks[i].createInterpolant(null);\n\t\t\t\tinterpolants[i] = interpolant;\n\t\t\t\tinterpolant.settings = interpolantSettings;\n\t\t\t}\n\n\t\t\tthis._interpolantSettings = interpolantSettings;\n\t\t\tthis._interpolants = interpolants; // bound by the mixer\n\t\t\t// inside: PropertyMixer (managed by the mixer)\n\n\t\t\tthis._propertyBindings = new Array(nTracks);\n\t\t\tthis._cacheIndex = null; // for the memory manager\n\n\t\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis.loop = LoopRepeat;\n\t\t\tthis._loopCount = -1; // global mixer time when the action is to be started\n\t\t\t// it's set back to 'null' upon start of the action\n\n\t\t\tthis._startTime = null; // scaled local time of the action\n\t\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\n\t\t\tthis.time = 0;\n\t\t\tthis.timeScale = 1;\n\t\t\tthis._effectiveTimeScale = 1;\n\t\t\tthis.weight = 1;\n\t\t\tthis._effectiveWeight = 1;\n\t\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\t\tthis.paused = false; // true -> zero effective time scale\n\n\t\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\t\tthis.clampWhenFinished = false; // keep feeding the last frame?\n\n\t\t\tthis.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n\n\t\t\tthis.zeroSlopeAtEnd = true; // clips for start, loop and end\n\t\t} // State & Scheduling\n\n\n\t\tplay() {\n\t\t\tthis._mixer._activateAction(this);\n\n\t\t\treturn this;\n\t\t}\n\n\t\tstop() {\n\t\t\tthis._mixer._deactivateAction(this);\n\n\t\t\treturn this.reset();\n\t\t}\n\n\t\treset() {\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\t\t\tthis.time = 0; // restart clip\n\n\t\t\tthis._loopCount = -1; // forget previous loops\n\n\t\t\tthis._startTime = null; // forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\t\t}\n\n\t\tisRunning() {\n\t\t\treturn this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n\t\t} // return true when play has been called\n\n\n\t\tisScheduled() {\n\t\t\treturn this._mixer._isActiveAction(this);\n\t\t}\n\n\t\tstartAt(time) {\n\t\t\tthis._startTime = time;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetLoop(mode, repetitions) {\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\t\t\treturn this;\n\t\t} // Weight\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\n\n\t\tsetEffectiveWeight(weight) {\n\t\t\tthis.weight = weight; // note: same logic as when updated at runtime\n\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\t\t\treturn this.stopFading();\n\t\t} // return the weight considering fading and .enabled\n\n\n\t\tgetEffectiveWeight() {\n\t\t\treturn this._effectiveWeight;\n\t\t}\n\n\t\tfadeIn(duration) {\n\t\t\treturn this._scheduleFading(duration, 0, 1);\n\t\t}\n\n\t\tfadeOut(duration) {\n\t\t\treturn this._scheduleFading(duration, 1, 0);\n\t\t}\n\n\t\tcrossFadeFrom(fadeOutAction, duration, warp) {\n\t\t\tfadeOutAction.fadeOut(duration);\n\t\t\tthis.fadeIn(duration);\n\n\t\t\tif (warp) {\n\t\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\t\t\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\t\t\t\tfadeOutAction.warp(1.0, startEndRatio, duration);\n\t\t\t\tthis.warp(endStartRatio, 1.0, duration);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcrossFadeTo(fadeInAction, duration, warp) {\n\t\t\treturn fadeInAction.crossFadeFrom(this, duration, warp);\n\t\t}\n\n\t\tstopFading() {\n\t\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\t\tif (weightInterpolant !== null) {\n\t\t\t\tthis._weightInterpolant = null;\n\n\t\t\t\tthis._mixer._takeBackControlInterpolant(weightInterpolant);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Time Scale Control\n\t\t// set the time scale stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\n\n\t\tsetEffectiveTimeScale(timeScale) {\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\t\t\treturn this.stopWarping();\n\t\t} // return the time scale considering warping and .paused\n\n\n\t\tgetEffectiveTimeScale() {\n\t\t\treturn this._effectiveTimeScale;\n\t\t}\n\n\t\tsetDuration(duration) {\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\t\t\treturn this.stopWarping();\n\t\t}\n\n\t\tsyncWith(action) {\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\t\t\treturn this.stopWarping();\n\t\t}\n\n\t\thalt(duration) {\n\t\t\treturn this.warp(this._effectiveTimeScale, 0, duration);\n\t\t}\n\n\t\twarp(startTimeScale, endTimeScale, duration) {\n\t\t\tconst mixer = this._mixer,\n\t\t\t\t\t\tnow = mixer.time,\n\t\t\t\t\t\ttimeScale = this.timeScale;\n\t\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\t\tif (interpolant === null) {\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\t\t\t}\n\n\t\t\tconst times = interpolant.parameterPositions,\n\t\t\t\t\t\tvalues = interpolant.sampleValues;\n\t\t\ttimes[0] = now;\n\t\t\ttimes[1] = now + duration;\n\t\t\tvalues[0] = startTimeScale / timeScale;\n\t\t\tvalues[1] = endTimeScale / timeScale;\n\t\t\treturn this;\n\t\t}\n\n\t\tstopWarping() {\n\t\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif (timeScaleInterpolant !== null) {\n\t\t\t\tthis._timeScaleInterpolant = null;\n\n\t\t\t\tthis._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Object Accessors\n\n\n\t\tgetMixer() {\n\t\t\treturn this._mixer;\n\t\t}\n\n\t\tgetClip() {\n\t\t\treturn this._clip;\n\t\t}\n\n\t\tgetRoot() {\n\t\t\treturn this._localRoot || this._mixer._root;\n\t\t} // Interna\n\n\n\t\t_update(time, deltaTime, timeDirection, accuIndex) {\n\t\t\t// called by the mixer\n\t\t\tif (!this.enabled) {\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\t\t\t\tthis._updateWeight(time);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst startTime = this._startTime;\n\n\t\t\tif (startTime !== null) {\n\t\t\t\t// check for scheduled start of action\n\t\t\t\tconst timeRunning = (time - startTime) * timeDirection;\n\n\t\t\t\tif (timeRunning < 0 || timeDirection === 0) {\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\t\t\t\t} // start\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\t\t\t} // apply time scale and advance time\n\n\n\t\t\tdeltaTime *= this._updateTimeScale(time);\n\n\t\t\tconst clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\n\t\t\tconst weight = this._updateWeight(time);\n\n\t\t\tif (weight > 0) {\n\t\t\t\tconst interpolants = this._interpolants;\n\t\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\t\tswitch (this.blendMode) {\n\t\t\t\t\tcase AdditiveAnimationBlendMode:\n\t\t\t\t\t\tfor (let j = 0, m = interpolants.length; j !== m; ++j) {\n\t\t\t\t\t\t\tinterpolants[j].evaluate(clipTime);\n\t\t\t\t\t\t\tpropertyMixers[j].accumulateAdditive(weight);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tfor (let j = 0, m = interpolants.length; j !== m; ++j) {\n\t\t\t\t\t\t\tinterpolants[j].evaluate(clipTime);\n\t\t\t\t\t\t\tpropertyMixers[j].accumulate(accuIndex, weight);\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_updateWeight(time) {\n\t\t\tlet weight = 0;\n\n\t\t\tif (this.enabled) {\n\t\t\t\tweight = this.weight;\n\t\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\t\tif (interpolant !== null) {\n\t\t\t\t\tconst interpolantValue = interpolant.evaluate(time)[0];\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif (time > interpolant.parameterPositions[1]) {\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif (interpolantValue === 0) {\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\t\t}\n\n\t\t_updateTimeScale(time) {\n\t\t\tlet timeScale = 0;\n\n\t\t\tif (!this.paused) {\n\t\t\t\ttimeScale = this.timeScale;\n\t\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif (interpolant !== null) {\n\t\t\t\t\tconst interpolantValue = interpolant.evaluate(time)[0];\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif (time > interpolant.parameterPositions[1]) {\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif (timeScale === 0) {\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\t\t}\n\n\t\t_updateTime(deltaTime) {\n\t\t\tconst duration = this._clip.duration;\n\t\t\tconst loop = this.loop;\n\t\t\tlet time = this.time + deltaTime;\n\t\t\tlet loopCount = this._loopCount;\n\t\t\tconst pingPong = loop === LoopPingPong;\n\n\t\t\tif (deltaTime === 0) {\n\t\t\t\tif (loopCount === -1) return time;\n\t\t\t\treturn pingPong && (loopCount & 1) === 1 ? duration - time : time;\n\t\t\t}\n\n\t\t\tif (loop === LoopOnce) {\n\t\t\t\tif (loopCount === -1) {\n\t\t\t\t\t// just started\n\t\t\t\t\tthis._loopCount = 0;\n\n\t\t\t\t\tthis._setEndings(true, true, false);\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\t\t\t\t\tif (time >= duration) {\n\t\t\t\t\t\ttime = duration;\n\t\t\t\t\t} else if (time < 0) {\n\t\t\t\t\t\ttime = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.time = time;\n\t\t\t\t\t\tbreak handle_stop;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\ttype: 'finished',\n\t\t\t\t\t\taction: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// repetitive Repeat or PingPong\n\t\t\t\tif (loopCount === -1) {\n\t\t\t\t\t// just started\n\t\t\t\t\tif (deltaTime >= 0) {\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings(true, this.repetitions === 0, pingPong);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\t\t\t\t\t\tthis._setEndings(this.repetitions === 0, true, pingPong);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (time >= duration || time < 0) {\n\t\t\t\t\t// wrap around\n\t\t\t\t\tconst loopDelta = Math.floor(time / duration); // signed\n\n\t\t\t\t\ttime -= duration * loopDelta;\n\t\t\t\t\tloopCount += Math.abs(loopDelta);\n\t\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif (pending <= 0) {\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\t\t\t\t\t\tif (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'finished',\n\t\t\t\t\t\t\taction: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep running\n\t\t\t\t\t\tif (pending === 1) {\n\t\t\t\t\t\t\t// entering the last round\n\t\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\n\t\t\t\t\t\t\tthis._setEndings(atStart, !atStart, pingPong);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._setEndings(false, false, pingPong);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'loop',\n\t\t\t\t\t\t\taction: this,\n\t\t\t\t\t\t\tloopDelta: loopDelta\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.time = time;\n\t\t\t\t}\n\n\t\t\t\tif (pingPong && (loopCount & 1) === 1) {\n\t\t\t\t\t// invert time for the \"pong round\"\n\t\t\t\t\treturn duration - time;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn time;\n\t\t}\n\n\t\t_setEndings(atStart, atEnd, pingPong) {\n\t\t\tconst settings = this._interpolantSettings;\n\n\t\t\tif (pingPong) {\n\t\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\t\t\t} else {\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\t\t\t\tif (atStart) {\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\t\t\t\t} else {\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\t\t\t\t}\n\n\t\t\t\tif (atEnd) {\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\t\t\t\t} else {\n\t\t\t\t\tsettings.endingEnd = WrapAroundEnding;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_scheduleFading(duration, weightNow, weightThen) {\n\t\t\tconst mixer = this._mixer,\n\t\t\t\t\t\tnow = mixer.time;\n\t\t\tlet interpolant = this._weightInterpolant;\n\n\t\t\tif (interpolant === null) {\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._weightInterpolant = interpolant;\n\t\t\t}\n\n\t\t\tconst times = interpolant.parameterPositions,\n\t\t\t\t\t\tvalues = interpolant.sampleValues;\n\t\t\ttimes[0] = now;\n\t\t\tvalues[0] = weightNow;\n\t\t\ttimes[1] = now + duration;\n\t\t\tvalues[1] = weightThen;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass AnimationMixer extends EventDispatcher {\n\t\tconstructor(root) {\n\t\t\tsuper();\n\t\t\tthis._root = root;\n\n\t\t\tthis._initMemoryManager();\n\n\t\t\tthis._accuIndex = 0;\n\t\t\tthis.time = 0;\n\t\t\tthis.timeScale = 1.0;\n\t\t}\n\n\t\t_bindAction(action, prototypeAction) {\n\t\t\tconst root = action._localRoot || this._root,\n\t\t\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\t\t\tnTracks = tracks.length,\n\t\t\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\t\t\trootUuid = root.uuid,\n\t\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\t\t\tlet bindingsByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingsByName === undefined) {\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[rootUuid] = bindingsByName;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i !== nTracks; ++i) {\n\t\t\t\tconst track = tracks[i],\n\t\t\t\t\t\t\ttrackName = track.name;\n\t\t\t\tlet binding = bindingsByName[trackName];\n\n\t\t\t\tif (binding !== undefined) {\n\t\t\t\t\tbindings[i] = binding;\n\t\t\t\t} else {\n\t\t\t\t\tbinding = bindings[i];\n\n\t\t\t\t\tif (binding !== undefined) {\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\t\t\t\t\t\tif (binding._cacheIndex === null) {\n\t\t\t\t\t\t\t++binding.referenceCount;\n\n\t\t\t\t\t\t\tthis._addInactiveBinding(binding, rootUuid, trackName);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\n\t\t\t\t\tbinding = new PropertyMixer(PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n\t\t\t\t\t++binding.referenceCount;\n\n\t\t\t\t\tthis._addInactiveBinding(binding, rootUuid, trackName);\n\n\t\t\t\t\tbindings[i] = binding;\n\t\t\t\t}\n\n\t\t\t\tinterpolants[i].resultBuffer = binding.buffer;\n\t\t\t}\n\t\t}\n\n\t\t_activateAction(action) {\n\t\t\tif (!this._isActiveAction(action)) {\n\t\t\t\tif (action._cacheIndex === null) {\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\t\t\t\t\tconst rootUuid = (action._localRoot || this._root).uuid,\n\t\t\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\t\t\tactionsForClip = this._actionsByClip[clipUuid];\n\n\t\t\t\t\tthis._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n\n\t\t\t\t\tthis._addInactiveAction(action, clipUuid, rootUuid);\n\t\t\t\t}\n\n\t\t\t\tconst bindings = action._propertyBindings; // increment reference counts / sort out state\n\n\t\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\t\tconst binding = bindings[i];\n\n\t\t\t\t\tif (binding.useCount++ === 0) {\n\t\t\t\t\t\tthis._lendBinding(binding);\n\n\t\t\t\t\t\tbinding.saveOriginalState();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction(action);\n\t\t\t}\n\t\t}\n\n\t\t_deactivateAction(action) {\n\t\t\tif (this._isActiveAction(action)) {\n\t\t\t\tconst bindings = action._propertyBindings; // decrement reference counts / sort out state\n\n\t\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\t\tconst binding = bindings[i];\n\n\t\t\t\t\tif (--binding.useCount === 0) {\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\n\t\t\t\t\t\tthis._takeBackBinding(binding);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction(action);\n\t\t\t}\n\t\t} // Memory manager\n\n\n\t\t_initMemoryManager() {\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\n\t\t\tthis._nActiveActions = 0;\n\t\t\tthis._actionsByClip = {}; // inside:\n\t\t\t// {\n\t\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t\t// }\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\n\t\t\tthis._nActiveBindings = 0;\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\n\t\t\tthis._nActiveControlInterpolants = 0;\n\t\t\tconst scope = this;\n\t\t\tthis.stats = {\n\t\t\t\tactions: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._actions.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveActions;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._bindings.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveBindings;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._controlInterpolants.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t};\n\t\t} // Memory management for AnimationAction objects\n\n\n\t\t_isActiveAction(action) {\n\t\t\tconst index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\t\t}\n\n\t\t_addInactiveAction(action, clipUuid, rootUuid) {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip;\n\t\t\tlet actionsForClip = actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip === undefined) {\n\t\t\t\tactionsForClip = {\n\t\t\t\t\tknownActions: [action],\n\t\t\t\t\tactionByRoot: {}\n\t\t\t\t};\n\t\t\t\taction._byClipCacheIndex = 0;\n\t\t\t\tactionsByClip[clipUuid] = actionsForClip;\n\t\t\t} else {\n\t\t\t\tconst knownActions = actionsForClip.knownActions;\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push(action);\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push(action);\n\t\t\tactionsForClip.actionByRoot[rootUuid] = action;\n\t\t}\n\n\t\t_removeInactiveAction(action) {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tlastInactiveAction = actions[actions.length - 1],\n\t\t\t\t\t\tcacheIndex = action._cacheIndex;\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[cacheIndex] = lastInactiveAction;\n\t\t\tactions.pop();\n\t\t\taction._cacheIndex = null;\n\t\t\tconst clipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\t\t\tactionsForClip = actionsByClip[clipUuid],\n\t\t\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\t\t\t\t\t\tlastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n\t\t\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[byClipCacheIndex] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\t\t\taction._byClipCacheIndex = null;\n\t\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\t\t\trootUuid = (action._localRoot || this._root).uuid;\n\t\t\tdelete actionByRoot[rootUuid];\n\n\t\t\tif (knownActionsForClip.length === 0) {\n\t\t\t\tdelete actionsByClip[clipUuid];\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction(action);\n\t\t}\n\n\t\t_removeInactiveBindingsForAction(action) {\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\tconst binding = bindings[i];\n\n\t\t\t\tif (--binding.referenceCount === 0) {\n\t\t\t\t\tthis._removeInactiveBinding(binding);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_lendAction(action) {\n\t\t\t// [ active actions |\tinactive actions\t]\n\t\t\t// [\tactive actions >| inactive actions ]\n\t\t\t//\t\t\t\t\t\t\t\t s\t\t\t\ta\n\t\t\t//\t\t\t\t\t\t\t\t\t<-swap->\n\t\t\t//\t\t\t\t\t\t\t\t a\t\t\t\ts\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tprevIndex = action._cacheIndex,\n\t\t\t\t\t\tlastActiveIndex = this._nActiveActions++,\n\t\t\t\t\t\tfirstInactiveAction = actions[lastActiveIndex];\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[lastActiveIndex] = action;\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[prevIndex] = firstInactiveAction;\n\t\t}\n\n\t\t_takeBackAction(action) {\n\t\t\t// [\tactive actions\t| inactive actions ]\n\t\t\t// [ active actions |< inactive actions\t]\n\t\t\t//\t\t\t\ta\t\t\t\ts\n\t\t\t//\t\t\t\t <-swap->\n\t\t\t//\t\t\t\ts\t\t\t\ta\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tprevIndex = action._cacheIndex,\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveActions,\n\t\t\t\t\t\tlastActiveAction = actions[firstInactiveIndex];\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[firstInactiveIndex] = action;\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[prevIndex] = lastActiveAction;\n\t\t} // Memory management for PropertyMixer objects\n\n\n\t\t_addInactiveBinding(binding, rootUuid, trackName) {\n\t\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\t\tbindings = this._bindings;\n\t\t\tlet bindingByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingByName === undefined) {\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[rootUuid] = bindingByName;\n\t\t\t}\n\n\t\t\tbindingByName[trackName] = binding;\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push(binding);\n\t\t}\n\n\t\t_removeInactiveBinding(binding) {\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tpropBinding = binding.binding,\n\t\t\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\t\t\ttrackName = propBinding.path,\n\t\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\t\tbindingByName = bindingsByRoot[rootUuid],\n\t\t\t\t\t\tlastInactiveBinding = bindings[bindings.length - 1],\n\t\t\t\t\t\tcacheIndex = binding._cacheIndex;\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[cacheIndex] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\t\t\tdelete bindingByName[trackName];\n\n\t\t\tif (Object.keys(bindingByName).length === 0) {\n\t\t\t\tdelete bindingsByRoot[rootUuid];\n\t\t\t}\n\t\t}\n\n\t\t_lendBinding(binding) {\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tprevIndex = binding._cacheIndex,\n\t\t\t\t\t\tlastActiveIndex = this._nActiveBindings++,\n\t\t\t\t\t\tfirstInactiveBinding = bindings[lastActiveIndex];\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[lastActiveIndex] = binding;\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[prevIndex] = firstInactiveBinding;\n\t\t}\n\n\t\t_takeBackBinding(binding) {\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tprevIndex = binding._cacheIndex,\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveBindings,\n\t\t\t\t\t\tlastActiveBinding = bindings[firstInactiveIndex];\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[firstInactiveIndex] = binding;\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[prevIndex] = lastActiveBinding;\n\t\t} // Memory management of Interpolants for weight and time scale\n\n\n\t\t_lendControlInterpolant() {\n\t\t\tconst interpolants = this._controlInterpolants,\n\t\t\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants++;\n\t\t\tlet interpolant = interpolants[lastActiveIndex];\n\n\t\t\tif (interpolant === undefined) {\n\t\t\t\tinterpolant = new LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[lastActiveIndex] = interpolant;\n\t\t\t}\n\n\t\t\treturn interpolant;\n\t\t}\n\n\t\t_takeBackControlInterpolant(interpolant) {\n\t\t\tconst interpolants = this._controlInterpolants,\n\t\t\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveControlInterpolants,\n\t\t\t\t\t\tlastActiveInterpolant = interpolants[firstInactiveIndex];\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[firstInactiveIndex] = interpolant;\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[prevIndex] = lastActiveInterpolant;\n\t\t} // return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\n\n\t\tclipAction(clip, optionalRoot, blendMode) {\n\t\t\tconst root = optionalRoot || this._root,\n\t\t\t\t\t\trootUuid = root.uuid;\n\t\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip;\n\t\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\t\t\tconst actionsForClip = this._actionsByClip[clipUuid];\n\t\t\tlet prototypeAction = null;\n\n\t\t\tif (blendMode === undefined) {\n\t\t\t\tif (clipObject !== null) {\n\t\t\t\t\tblendMode = clipObject.blendMode;\n\t\t\t\t} else {\n\t\t\t\t\tblendMode = NormalAnimationBlendMode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\tconst existingAction = actionsForClip.actionByRoot[rootUuid];\n\n\t\t\t\tif (existingAction !== undefined && existingAction.blendMode === blendMode) {\n\t\t\t\t\treturn existingAction;\n\t\t\t\t} // we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\n\n\t\t\t\tprototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\n\n\t\t\t\tif (clipObject === null) clipObject = prototypeAction._clip;\n\t\t\t} // clip must be known when specified via string\n\n\n\t\t\tif (clipObject === null) return null; // allocate all resources required to run it\n\n\t\t\tconst newAction = new AnimationAction(this, clipObject, optionalRoot, blendMode);\n\n\t\t\tthis._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\n\n\n\t\t\tthis._addInactiveAction(newAction, clipUuid, rootUuid);\n\n\t\t\treturn newAction;\n\t\t} // get an existing action\n\n\n\t\texistingAction(clip, optionalRoot) {\n\t\t\tconst root = optionalRoot || this._root,\n\t\t\t\t\t\trootUuid = root.uuid,\n\t\t\t\t\t\tclipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n\t\t\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\treturn actionsForClip.actionByRoot[rootUuid] || null;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t} // deactivates all previously scheduled actions\n\n\n\t\tstopAllAction() {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tnActions = this._nActiveActions;\n\n\t\t\tfor (let i = nActions - 1; i >= 0; --i) {\n\t\t\t\tactions[i].stop();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // advance the time and update apply the animation\n\n\n\t\tupdate(deltaTime) {\n\t\t\tdeltaTime *= this.timeScale;\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\t\t\ttimeDirection = Math.sign(deltaTime),\n\t\t\t\t\t\taccuIndex = this._accuIndex ^= 1; // run active actions\n\n\t\t\tfor (let i = 0; i !== nActions; ++i) {\n\t\t\t\tconst action = actions[i];\n\n\t\t\t\taction._update(time, deltaTime, timeDirection, accuIndex);\n\t\t\t} // update scene graph\n\n\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor (let i = 0; i !== nBindings; ++i) {\n\t\t\t\tbindings[i].apply(accuIndex);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Allows you to seek to a specific time in an animation.\n\n\n\t\tsetTime(timeInSeconds) {\n\t\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\n\t\t\tfor (let i = 0; i < this._actions.length; i++) {\n\t\t\t\tthis._actions[i].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\t\t\t}\n\n\t\t\treturn this.update(timeInSeconds); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\t\t} // return this mixer's root target object\n\n\n\t\tgetRoot() {\n\t\t\treturn this._root;\n\t\t} // free all resources specific to a particular clip\n\n\n\t\tuncacheClip(clip) {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\t\t\tactionsForClip = actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\t\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor (let i = 0, n = actionsToRemove.length; i !== n; ++i) {\n\t\t\t\t\tconst action = actionsToRemove[i];\n\n\t\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\t\t\t\tlastInactiveAction = actions[actions.length - 1];\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[cacheIndex] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction(action);\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[clipUuid];\n\t\t\t}\n\t\t} // free all resources specific to a particular root target object\n\n\n\t\tuncacheRoot(root) {\n\t\t\tconst rootUuid = root.uuid,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor (const clipUuid in actionsByClip) {\n\t\t\t\tconst actionByRoot = actionsByClip[clipUuid].actionByRoot,\n\t\t\t\t\t\t\taction = actionByRoot[rootUuid];\n\n\t\t\t\tif (action !== undefined) {\n\t\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\t\tthis._removeInactiveAction(action);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\t\tbindingByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingByName !== undefined) {\n\t\t\t\tfor (const trackName in bindingByName) {\n\t\t\t\t\tconst binding = bindingByName[trackName];\n\t\t\t\t\tbinding.restoreOriginalState();\n\n\t\t\t\t\tthis._removeInactiveBinding(binding);\n\t\t\t\t}\n\t\t\t}\n\t\t} // remove a targeted clip from the cache\n\n\n\t\tuncacheAction(clip, optionalRoot) {\n\t\t\tconst action = this.existingAction(clip, optionalRoot);\n\n\t\t\tif (action !== null) {\n\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\tthis._removeInactiveAction(action);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tAnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array(1);\n\n\tclass Uniform {\n\t\tconstructor(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tconsole.warn('THREE.Uniform: Type parameter is no longer needed.');\n\t\t\t\tvalue = arguments[1];\n\t\t\t}\n\n\t\t\tthis.value = value;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\n\t\t}\n\n\t}\n\n\tclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\t\tconstructor(array, stride, meshPerAttribute = 1) {\n\t\t\tsuper(array, stride);\n\t\t\tthis.meshPerAttribute = meshPerAttribute;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone(data) {\n\t\t\tconst ib = super.clone(data);\n\t\t\tib.meshPerAttribute = this.meshPerAttribute;\n\t\t\treturn ib;\n\t\t}\n\n\t\ttoJSON(data) {\n\t\t\tconst json = super.toJSON(data);\n\t\t\tjson.isInstancedInterleavedBuffer = true;\n\t\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\t\t\treturn json;\n\t\t}\n\n\t}\n\n\tInstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n\n\tclass GLBufferAttribute {\n\t\tconstructor(buffer, type, itemSize, elementSize, count) {\n\t\t\tthis.buffer = buffer;\n\t\t\tthis.type = type;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.elementSize = elementSize;\n\t\t\tthis.count = count;\n\t\t\tthis.version = 0;\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t\tsetBuffer(buffer) {\n\t\t\tthis.buffer = buffer;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetType(type, elementSize) {\n\t\t\tthis.type = type;\n\t\t\tthis.elementSize = elementSize;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetItemSize(itemSize) {\n\t\t\tthis.itemSize = itemSize;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetCount(count) {\n\t\t\tthis.count = count;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tGLBufferAttribute.prototype.isGLBufferAttribute = true;\n\n\tclass Raycaster {\n\t\tconstructor(origin, direction, near = 0, far = Infinity) {\n\t\t\tthis.ray = new Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.camera = null;\n\t\t\tthis.layers = new Layers();\n\t\t\tthis.params = {\n\t\t\t\tMesh: {},\n\t\t\t\tLine: {\n\t\t\t\t\tthreshold: 1\n\t\t\t\t},\n\t\t\t\tLOD: {},\n\t\t\t\tPoints: {\n\t\t\t\t\tthreshold: 1\n\t\t\t\t},\n\t\t\t\tSprite: {}\n\t\t\t};\n\t\t}\n\n\t\tset(origin, direction) {\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\t\t\tthis.ray.set(origin, direction);\n\t\t}\n\n\t\tsetFromCamera(coords, camera) {\n\t\t\tif (camera && camera.isPerspectiveCamera) {\n\t\t\t\tthis.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n\t\t\t\tthis.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n\t\t\t\tthis.camera = camera;\n\t\t\t} else if (camera && camera.isOrthographicCamera) {\n\t\t\t\tthis.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\n\n\t\t\t\tthis.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n\t\t\t\tthis.camera = camera;\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Raycaster: Unsupported camera type: ' + camera.type);\n\t\t\t}\n\t\t}\n\n\t\tintersectObject(object, recursive = false, intersects = []) {\n\t\t\tintersectObject(object, this, intersects, recursive);\n\t\t\tintersects.sort(ascSort);\n\t\t\treturn intersects;\n\t\t}\n\n\t\tintersectObjects(objects, recursive = false, intersects = []) {\n\t\t\tfor (let i = 0, l = objects.length; i < l; i++) {\n\t\t\t\tintersectObject(objects[i], this, intersects, recursive);\n\t\t\t}\n\n\t\t\tintersects.sort(ascSort);\n\t\t\treturn intersects;\n\t\t}\n\n\t}\n\n\tfunction ascSort(a, b) {\n\t\treturn a.distance - b.distance;\n\t}\n\n\tfunction intersectObject(object, raycaster, intersects, recursive) {\n\t\tif (object.layers.test(raycaster.layers)) {\n\t\t\tobject.raycast(raycaster, intersects);\n\t\t}\n\n\t\tif (recursive === true) {\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tintersectObject(children[i], raycaster, intersects, true);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n\t * The azimuthal angle (theta) is measured from the positive z-axis.\n\t */\n\n\tclass Spherical {\n\t\tconstructor(radius = 1, phi = 0, theta = 0) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi; // polar angle\n\n\t\t\tthis.theta = theta; // azimuthal angle\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(radius, phi, theta) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(other) {\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\t\t\treturn this;\n\t\t} // restrict phi to be betwee EPS and PI-EPS\n\n\n\t\tmakeSafe() {\n\t\t\tconst EPS = 0.000001;\n\t\t\tthis.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromVector3(v) {\n\t\t\treturn this.setFromCartesianCoords(v.x, v.y, v.z);\n\t\t}\n\n\t\tsetFromCartesianCoords(x, y, z) {\n\t\t\tthis.radius = Math.sqrt(x * x + y * y + z * z);\n\n\t\t\tif (this.radius === 0) {\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\t\t\t} else {\n\t\t\t\tthis.theta = Math.atan2(x, z);\n\t\t\t\tthis.phi = Math.acos(clamp(y / this.radius, -1, 1));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\t/**\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t */\n\tclass Cylindrical {\n\t\tconstructor(radius = 1, theta = 0, y = 0) {\n\t\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\n\t\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\n\t\t\tthis.y = y; // height above the x-z plane\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(radius, theta, y) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.theta = theta;\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(other) {\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.theta = other.theta;\n\t\t\tthis.y = other.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromVector3(v) {\n\t\t\treturn this.setFromCartesianCoords(v.x, v.y, v.z);\n\t\t}\n\n\t\tsetFromCartesianCoords(x, y, z) {\n\t\t\tthis.radius = Math.sqrt(x * x + z * z);\n\t\t\tthis.theta = Math.atan2(x, z);\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tconst _vector$4 = /*@__PURE__*/new Vector2();\n\n\tclass Box2 {\n\t\tconstructor(min = new Vector2(+Infinity, +Infinity), max = new Vector2(-Infinity, -Infinity)) {\n\t\t\tthis.min = min;\n\t\t\tthis.max = max;\n\t\t}\n\n\t\tset(min, max) {\n\t\t\tthis.min.copy(min);\n\t\t\tthis.max.copy(max);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\n\t\t\t\tthis.expandByPoint(points[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCenterAndSize(center, size) {\n\t\t\tconst halfSize = _vector$4.copy(size).multiplyScalar(0.5);\n\n\t\t\tthis.min.copy(center).sub(halfSize);\n\t\t\tthis.max.copy(center).add(halfSize);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(box) {\n\t\t\tthis.min.copy(box.min);\n\t\t\tthis.max.copy(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeEmpty() {\n\t\t\tthis.min.x = this.min.y = +Infinity;\n\t\t\tthis.max.x = this.max.y = -Infinity;\n\t\t\treturn this;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\t\t\treturn this.max.x < this.min.x || this.max.y < this.min.y;\n\t\t}\n\n\t\tgetCenter(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n\t\t}\n\n\t\tgetSize(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\n\t\t}\n\n\t\texpandByPoint(point) {\n\t\t\tthis.min.min(point);\n\t\t\tthis.max.max(point);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByVector(vector) {\n\t\t\tthis.min.sub(vector);\n\t\t\tthis.max.add(vector);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByScalar(scalar) {\n\t\t\tthis.min.addScalar(-scalar);\n\t\t\tthis.max.addScalar(scalar);\n\t\t\treturn this;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\n\t\t}\n\n\t\tcontainsBox(box) {\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n\t\t}\n\n\t\tgetParameter(point, target) {\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\t\t\treturn target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\t// using 4 splitting planes to rule out intersections\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\t\t}\n\n\t\tclampPoint(point, target) {\n\t\t\treturn target.copy(point).clamp(this.min, this.max);\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\tconst clampedPoint = _vector$4.copy(point).clamp(this.min, this.max);\n\n\t\t\treturn clampedPoint.sub(point).length();\n\t\t}\n\n\t\tintersect(box) {\n\t\t\tthis.min.max(box.min);\n\t\t\tthis.max.min(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tunion(box) {\n\t\t\tthis.min.min(box.min);\n\t\t\tthis.max.max(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.min.add(offset);\n\t\t\tthis.max.add(offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(box) {\n\t\t\treturn box.min.equals(this.min) && box.max.equals(this.max);\n\t\t}\n\n\t}\n\n\tBox2.prototype.isBox2 = true;\n\n\tconst _startP = /*@__PURE__*/new Vector3();\n\n\tconst _startEnd = /*@__PURE__*/new Vector3();\n\n\tclass Line3 {\n\t\tconstructor(start = new Vector3(), end = new Vector3()) {\n\t\t\tthis.start = start;\n\t\t\tthis.end = end;\n\t\t}\n\n\t\tset(start, end) {\n\t\t\tthis.start.copy(start);\n\t\t\tthis.end.copy(end);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(line) {\n\t\t\tthis.start.copy(line.start);\n\t\t\tthis.end.copy(line.end);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetCenter(target) {\n\t\t\treturn target.addVectors(this.start, this.end).multiplyScalar(0.5);\n\t\t}\n\n\t\tdelta(target) {\n\t\t\treturn target.subVectors(this.end, this.start);\n\t\t}\n\n\t\tdistanceSq() {\n\t\t\treturn this.start.distanceToSquared(this.end);\n\t\t}\n\n\t\tdistance() {\n\t\t\treturn this.start.distanceTo(this.end);\n\t\t}\n\n\t\tat(t, target) {\n\t\t\treturn this.delta(target).multiplyScalar(t).add(this.start);\n\t\t}\n\n\t\tclosestPointToPointParameter(point, clampToLine) {\n\t\t\t_startP.subVectors(point, this.start);\n\n\t\t\t_startEnd.subVectors(this.end, this.start);\n\n\t\t\tconst startEnd2 = _startEnd.dot(_startEnd);\n\n\t\t\tconst startEnd_startP = _startEnd.dot(_startP);\n\n\t\t\tlet t = startEnd_startP / startEnd2;\n\n\t\t\tif (clampToLine) {\n\t\t\t\tt = clamp(t, 0, 1);\n\t\t\t}\n\n\t\t\treturn t;\n\t\t}\n\n\t\tclosestPointToPoint(point, clampToLine, target) {\n\t\t\tconst t = this.closestPointToPointParameter(point, clampToLine);\n\t\t\treturn this.delta(target).multiplyScalar(t).add(this.start);\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tthis.start.applyMatrix4(matrix);\n\t\t\tthis.end.applyMatrix4(matrix);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(line) {\n\t\t\treturn line.start.equals(this.start) && line.end.equals(this.end);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tclass ImmediateRenderObject extends Object3D {\n\t\tconstructor(material) {\n\t\t\tsuper();\n\t\t\tthis.material = material;\n\n\t\t\tthis.render = function ()\n\t\t\t/* renderCallback */\n\t\t\t{};\n\n\t\t\tthis.hasPositions = false;\n\t\t\tthis.hasNormals = false;\n\t\t\tthis.hasColors = false;\n\t\t\tthis.hasUvs = false;\n\t\t\tthis.positionArray = null;\n\t\t\tthis.normalArray = null;\n\t\t\tthis.colorArray = null;\n\t\t\tthis.uvArray = null;\n\t\t\tthis.count = 0;\n\t\t}\n\n\t}\n\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n\tconst _vector$3 = /*@__PURE__*/new Vector3();\n\n\tclass SpotLightHelper extends Object3D {\n\t\tconstructor(light, color) {\n\t\t\tsuper();\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.color = color;\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n\t\t\tfor (let i = 0, j = 1, l = 32; i < l; i++, j++) {\n\t\t\t\tconst p1 = i / l * Math.PI * 2;\n\t\t\t\tconst p2 = j / l * Math.PI * 2;\n\t\t\t\tpositions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tthis.cone = new LineSegments(geometry, material);\n\t\t\tthis.add(this.cone);\n\t\t\tthis.update();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.cone.geometry.dispose();\n\t\t\tthis.cone.material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t\tconst coneWidth = coneLength * Math.tan(this.light.angle);\n\t\t\tthis.cone.scale.set(coneWidth, coneWidth, coneLength);\n\n\t\t\t_vector$3.setFromMatrixPosition(this.light.target.matrixWorld);\n\n\t\t\tthis.cone.lookAt(_vector$3);\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.cone.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.cone.material.color.copy(this.light.color);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst _vector$2 = /*@__PURE__*/new Vector3();\n\n\tconst _boneMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _matrixWorldInv = /*@__PURE__*/new Matrix4();\n\n\tclass SkeletonHelper extends LineSegments {\n\t\tconstructor(object) {\n\t\t\tconst bones = getBoneList(object);\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst vertices = [];\n\t\t\tconst colors = [];\n\t\t\tconst color1 = new Color(0, 0, 1);\n\t\t\tconst color2 = new Color(0, 1, 0);\n\n\t\t\tfor (let i = 0; i < bones.length; i++) {\n\t\t\t\tconst bone = bones[i];\n\n\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\t\tcolors.push(color1.r, color1.g, color1.b);\n\t\t\t\t\tcolors.push(color2.r, color2.g, color2.b);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\tdepthTest: false,\n\t\t\t\tdepthWrite: false,\n\t\t\t\ttoneMapped: false,\n\t\t\t\ttransparent: true\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'SkeletonHelper';\n\t\t\tthis.isSkeletonHelper = true;\n\t\t\tthis.root = object;\n\t\t\tthis.bones = bones;\n\t\t\tthis.matrix = object.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tconst bones = this.bones;\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst position = geometry.getAttribute('position');\n\n\t\t\t_matrixWorldInv.copy(this.root.matrixWorld).invert();\n\n\t\t\tfor (let i = 0, j = 0; i < bones.length; i++) {\n\t\t\t\tconst bone = bones[i];\n\n\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\t_boneMatrix.multiplyMatrices(_matrixWorldInv, bone.matrixWorld);\n\n\t\t\t\t\t_vector$2.setFromMatrixPosition(_boneMatrix);\n\n\t\t\t\t\tposition.setXYZ(j, _vector$2.x, _vector$2.y, _vector$2.z);\n\n\t\t\t\t\t_boneMatrix.multiplyMatrices(_matrixWorldInv, bone.parent.matrixWorld);\n\n\t\t\t\t\t_vector$2.setFromMatrixPosition(_boneMatrix);\n\n\t\t\t\t\tposition.setXYZ(j + 1, _vector$2.x, _vector$2.y, _vector$2.z);\n\t\t\t\t\tj += 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeometry.getAttribute('position').needsUpdate = true;\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t}\n\n\t}\n\n\tfunction getBoneList(object) {\n\t\tconst boneList = [];\n\n\t\tif (object && object.isBone) {\n\t\t\tboneList.push(object);\n\t\t}\n\n\t\tfor (let i = 0; i < object.children.length; i++) {\n\t\t\tboneList.push.apply(boneList, getBoneList(object.children[i]));\n\t\t}\n\n\t\treturn boneList;\n\t}\n\n\tclass PointLightHelper extends Mesh {\n\t\tconstructor(light, sphereSize, color) {\n\t\t\tconst geometry = new SphereGeometry(sphereSize, 4, 2);\n\t\t\tconst material = new MeshBasicMaterial({\n\t\t\t\twireframe: true,\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.color = color;\n\t\t\tthis.type = 'PointLightHelper';\n\t\t\tthis.matrix = this.light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.update();\n\t\t\t/*\n\t\t\t// TODO: delete this comment?\n\t\t\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\t\t\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\t\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\t\t\tconst d = light.distance;\n\t\t\tif ( d === 0.0 ) {\n\t\t\t\tthis.lightDistance.visible = false;\n\t\t\t} else {\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\n\t\t\t}\n\t\t\tthis.add( this.lightDistance );\n\t\t\t*/\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.material.color.copy(this.light.color);\n\t\t\t}\n\t\t\t/*\n\t\t\tconst d = this.light.distance;\n\t\t\t\tif ( d === 0.0 ) {\n\t\t\t\t\tthis.lightDistance.visible = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.lightDistance.visible = true;\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\n\t\t\t\t}\n\t\t\t*/\n\n\t\t}\n\n\t}\n\n\tconst _vector$1 = /*@__PURE__*/new Vector3();\n\n\tconst _color1 = /*@__PURE__*/new Color();\n\n\tconst _color2 = /*@__PURE__*/new Color();\n\n\tclass HemisphereLightHelper extends Object3D {\n\t\tconstructor(light, size, color) {\n\t\t\tsuper();\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.color = color;\n\t\t\tconst geometry = new OctahedronGeometry(size);\n\t\t\tgeometry.rotateY(Math.PI * 0.5);\n\t\t\tthis.material = new MeshBasicMaterial({\n\t\t\t\twireframe: true,\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tif (this.color === undefined) this.material.vertexColors = true;\n\t\t\tconst position = geometry.getAttribute('position');\n\t\t\tconst colors = new Float32Array(position.count * 3);\n\t\t\tgeometry.setAttribute('color', new BufferAttribute(colors, 3));\n\t\t\tthis.add(new Mesh(geometry, this.material));\n\t\t\tthis.update();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.children[0].geometry.dispose();\n\t\t\tthis.children[0].material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst mesh = this.children[0];\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tconst colors = mesh.geometry.getAttribute('color');\n\n\t\t\t\t_color1.copy(this.light.color);\n\n\t\t\t\t_color2.copy(this.light.groundColor);\n\n\t\t\t\tfor (let i = 0, l = colors.count; i < l; i++) {\n\t\t\t\t\tconst color = i < l / 2 ? _color1 : _color2;\n\t\t\t\t\tcolors.setXYZ(i, color.r, color.g, color.b);\n\t\t\t\t}\n\n\t\t\t\tcolors.needsUpdate = true;\n\t\t\t}\n\n\t\t\tmesh.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate());\n\t\t}\n\n\t}\n\n\tclass GridHelper extends LineSegments {\n\t\tconstructor(size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888) {\n\t\t\tcolor1 = new Color(color1);\n\t\t\tcolor2 = new Color(color2);\n\t\t\tconst center = divisions / 2;\n\t\t\tconst step = size / divisions;\n\t\t\tconst halfSize = size / 2;\n\t\t\tconst vertices = [],\n\t\t\t\t\t\tcolors = [];\n\n\t\t\tfor (let i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\n\t\t\t\tvertices.push(-halfSize, 0, k, halfSize, 0, k);\n\t\t\t\tvertices.push(k, 0, -halfSize, k, 0, halfSize);\n\t\t\t\tconst color = i === center ? color1 : color2;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t}\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'GridHelper';\n\t\t}\n\n\t}\n\n\tclass PolarGridHelper extends LineSegments {\n\t\tconstructor(radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888) {\n\t\t\tcolor1 = new Color(color1);\n\t\t\tcolor2 = new Color(color2);\n\t\t\tconst vertices = [];\n\t\t\tconst colors = []; // create the radials\n\n\t\t\tfor (let i = 0; i <= radials; i++) {\n\t\t\t\tconst v = i / radials * (Math.PI * 2);\n\t\t\t\tconst x = Math.sin(v) * radius;\n\t\t\t\tconst z = Math.cos(v) * radius;\n\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\tvertices.push(x, 0, z);\n\t\t\t\tconst color = i & 1 ? color1 : color2;\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t} // create the circles\n\n\n\t\t\tfor (let i = 0; i <= circles; i++) {\n\t\t\t\tconst color = i & 1 ? color1 : color2;\n\t\t\t\tconst r = radius - radius / circles * i;\n\n\t\t\t\tfor (let j = 0; j < divisions; j++) {\n\t\t\t\t\t// first vertex\n\t\t\t\t\tlet v = j / divisions * (Math.PI * 2);\n\t\t\t\t\tlet x = Math.sin(v) * r;\n\t\t\t\t\tlet z = Math.cos(v) * r;\n\t\t\t\t\tvertices.push(x, 0, z);\n\t\t\t\t\tcolors.push(color.r, color.g, color.b); // second vertex\n\n\t\t\t\t\tv = (j + 1) / divisions * (Math.PI * 2);\n\t\t\t\t\tx = Math.sin(v) * r;\n\t\t\t\t\tz = Math.cos(v) * r;\n\t\t\t\t\tvertices.push(x, 0, z);\n\t\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'PolarGridHelper';\n\t\t}\n\n\t}\n\n\tconst _v1 = /*@__PURE__*/new Vector3();\n\n\tconst _v2 = /*@__PURE__*/new Vector3();\n\n\tconst _v3 = /*@__PURE__*/new Vector3();\n\n\tclass DirectionalLightHelper extends Object3D {\n\t\tconstructor(light, size, color) {\n\t\t\tsuper();\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.color = color;\n\t\t\tif (size === undefined) size = 1;\n\t\t\tlet geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tthis.lightPlane = new Line(geometry, material);\n\t\t\tthis.add(this.lightPlane);\n\t\t\tgeometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n\t\t\tthis.targetLine = new Line(geometry, material);\n\t\t\tthis.add(this.targetLine);\n\t\t\tthis.update();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.lightPlane.geometry.dispose();\n\t\t\tthis.lightPlane.material.dispose();\n\t\t\tthis.targetLine.geometry.dispose();\n\t\t\tthis.targetLine.material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\t_v1.setFromMatrixPosition(this.light.matrixWorld);\n\n\t\t\t_v2.setFromMatrixPosition(this.light.target.matrixWorld);\n\n\t\t\t_v3.subVectors(_v2, _v1);\n\n\t\t\tthis.lightPlane.lookAt(_v2);\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.lightPlane.material.color.set(this.color);\n\t\t\t\tthis.targetLine.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.lightPlane.material.color.copy(this.light.color);\n\t\t\t\tthis.targetLine.material.color.copy(this.light.color);\n\t\t\t}\n\n\t\t\tthis.targetLine.lookAt(_v2);\n\t\t\tthis.targetLine.scale.z = _v3.length();\n\t\t}\n\n\t}\n\n\tconst _vector = /*@__PURE__*/new Vector3();\n\n\tconst _camera = /*@__PURE__*/new Camera();\n\t/**\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\n\tclass CameraHelper extends LineSegments {\n\t\tconstructor(camera) {\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tcolor: 0xffffff,\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tconst vertices = [];\n\t\t\tconst colors = [];\n\t\t\tconst pointMap = {}; // colors\n\n\t\t\tconst colorFrustum = new Color(0xffaa00);\n\t\t\tconst colorCone = new Color(0xff0000);\n\t\t\tconst colorUp = new Color(0x00aaff);\n\t\t\tconst colorTarget = new Color(0xffffff);\n\t\t\tconst colorCross = new Color(0x333333); // near\n\n\t\t\taddLine('n1', 'n2', colorFrustum);\n\t\t\taddLine('n2', 'n4', colorFrustum);\n\t\t\taddLine('n4', 'n3', colorFrustum);\n\t\t\taddLine('n3', 'n1', colorFrustum); // far\n\n\t\t\taddLine('f1', 'f2', colorFrustum);\n\t\t\taddLine('f2', 'f4', colorFrustum);\n\t\t\taddLine('f4', 'f3', colorFrustum);\n\t\t\taddLine('f3', 'f1', colorFrustum); // sides\n\n\t\t\taddLine('n1', 'f1', colorFrustum);\n\t\t\taddLine('n2', 'f2', colorFrustum);\n\t\t\taddLine('n3', 'f3', colorFrustum);\n\t\t\taddLine('n4', 'f4', colorFrustum); // cone\n\n\t\t\taddLine('p', 'n1', colorCone);\n\t\t\taddLine('p', 'n2', colorCone);\n\t\t\taddLine('p', 'n3', colorCone);\n\t\t\taddLine('p', 'n4', colorCone); // up\n\n\t\t\taddLine('u1', 'u2', colorUp);\n\t\t\taddLine('u2', 'u3', colorUp);\n\t\t\taddLine('u3', 'u1', colorUp); // target\n\n\t\t\taddLine('c', 't', colorTarget);\n\t\t\taddLine('p', 'c', colorCross); // cross\n\n\t\t\taddLine('cn1', 'cn2', colorCross);\n\t\t\taddLine('cn3', 'cn4', colorCross);\n\t\t\taddLine('cf1', 'cf2', colorCross);\n\t\t\taddLine('cf3', 'cf4', colorCross);\n\n\t\t\tfunction addLine(a, b, color) {\n\t\t\t\taddPoint(a, color);\n\t\t\t\taddPoint(b, color);\n\t\t\t}\n\n\t\t\tfunction addPoint(id, color) {\n\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\n\t\t\t\tif (pointMap[id] === undefined) {\n\t\t\t\t\tpointMap[id] = [];\n\t\t\t\t}\n\n\t\t\t\tpointMap[id].push(vertices.length / 3 - 1);\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'CameraHelper';\n\t\t\tthis.camera = camera;\n\t\t\tif (this.camera.updateProjectionMatrix) this.camera.updateProjectionMatrix();\n\t\t\tthis.matrix = camera.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.pointMap = pointMap;\n\t\t\tthis.update();\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst pointMap = this.pointMap;\n\t\t\tconst w = 1,\n\t\t\t\t\t\th = 1; // we need just camera projection matrix inverse\n\t\t\t// world matrix must be identity\n\n\t\t\t_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse); // center / target\n\n\n\t\t\tsetPoint('c', pointMap, geometry, _camera, 0, 0, -1);\n\t\t\tsetPoint('t', pointMap, geometry, _camera, 0, 0, 1); // near\n\n\t\t\tsetPoint('n1', pointMap, geometry, _camera, -w, -h, -1);\n\t\t\tsetPoint('n2', pointMap, geometry, _camera, w, -h, -1);\n\t\t\tsetPoint('n3', pointMap, geometry, _camera, -w, h, -1);\n\t\t\tsetPoint('n4', pointMap, geometry, _camera, w, h, -1); // far\n\n\t\t\tsetPoint('f1', pointMap, geometry, _camera, -w, -h, 1);\n\t\t\tsetPoint('f2', pointMap, geometry, _camera, w, -h, 1);\n\t\t\tsetPoint('f3', pointMap, geometry, _camera, -w, h, 1);\n\t\t\tsetPoint('f4', pointMap, geometry, _camera, w, h, 1); // up\n\n\t\t\tsetPoint('u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\n\t\t\tsetPoint('u2', pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\n\t\t\tsetPoint('u3', pointMap, geometry, _camera, 0, h * 2, -1); // cross\n\n\t\t\tsetPoint('cf1', pointMap, geometry, _camera, -w, 0, 1);\n\t\t\tsetPoint('cf2', pointMap, geometry, _camera, w, 0, 1);\n\t\t\tsetPoint('cf3', pointMap, geometry, _camera, 0, -h, 1);\n\t\t\tsetPoint('cf4', pointMap, geometry, _camera, 0, h, 1);\n\t\t\tsetPoint('cn1', pointMap, geometry, _camera, -w, 0, -1);\n\t\t\tsetPoint('cn2', pointMap, geometry, _camera, w, 0, -1);\n\t\t\tsetPoint('cn3', pointMap, geometry, _camera, 0, -h, -1);\n\t\t\tsetPoint('cn4', pointMap, geometry, _camera, 0, h, -1);\n\t\t\tgeometry.getAttribute('position').needsUpdate = true;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t}\n\n\t}\n\n\tfunction setPoint(point, pointMap, geometry, camera, x, y, z) {\n\t\t_vector.set(x, y, z).unproject(camera);\n\n\t\tconst points = pointMap[point];\n\n\t\tif (points !== undefined) {\n\t\t\tconst position = geometry.getAttribute('position');\n\n\t\t\tfor (let i = 0, l = points.length; i < l; i++) {\n\t\t\t\tposition.setXYZ(points[i], _vector.x, _vector.y, _vector.z);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst _box = /*@__PURE__*/new Box3();\n\n\tclass BoxHelper extends LineSegments {\n\t\tconstructor(object, color = 0xffff00) {\n\t\t\tconst indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n\t\t\tconst positions = new Float32Array(8 * 3);\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setIndex(new BufferAttribute(indices, 1));\n\t\t\tgeometry.setAttribute('position', new BufferAttribute(positions, 3));\n\t\t\tsuper(geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.object = object;\n\t\t\tthis.type = 'BoxHelper';\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.update();\n\t\t}\n\n\t\tupdate(object) {\n\t\t\tif (object !== undefined) {\n\t\t\t\tconsole.warn('THREE.BoxHelper: .update() has no longer arguments.');\n\t\t\t}\n\n\t\t\tif (this.object !== undefined) {\n\t\t\t\t_box.setFromObject(this.object);\n\t\t\t}\n\n\t\t\tif (_box.isEmpty()) return;\n\t\t\tconst min = _box.min;\n\t\t\tconst max = _box.max;\n\t\t\t/*\n\t\t\t\t5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\t\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z\n\t\t\t*/\n\n\t\t\tconst position = this.geometry.attributes.position;\n\t\t\tconst array = position.array;\n\t\t\tarray[0] = max.x;\n\t\t\tarray[1] = max.y;\n\t\t\tarray[2] = max.z;\n\t\t\tarray[3] = min.x;\n\t\t\tarray[4] = max.y;\n\t\t\tarray[5] = max.z;\n\t\t\tarray[6] = min.x;\n\t\t\tarray[7] = min.y;\n\t\t\tarray[8] = max.z;\n\t\t\tarray[9] = max.x;\n\t\t\tarray[10] = min.y;\n\t\t\tarray[11] = max.z;\n\t\t\tarray[12] = max.x;\n\t\t\tarray[13] = max.y;\n\t\t\tarray[14] = min.z;\n\t\t\tarray[15] = min.x;\n\t\t\tarray[16] = max.y;\n\t\t\tarray[17] = min.z;\n\t\t\tarray[18] = min.x;\n\t\t\tarray[19] = min.y;\n\t\t\tarray[20] = min.z;\n\t\t\tarray[21] = max.x;\n\t\t\tarray[22] = min.y;\n\t\t\tarray[23] = min.z;\n\t\t\tposition.needsUpdate = true;\n\t\t\tthis.geometry.computeBoundingSphere();\n\t\t}\n\n\t\tsetFromObject(object) {\n\t\t\tthis.object = object;\n\t\t\tthis.update();\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tLineSegments.prototype.copy.call(this, source);\n\t\t\tthis.object = source.object;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Box3Helper extends LineSegments {\n\t\tconstructor(box, color = 0xffff00) {\n\t\t\tconst indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n\t\t\tconst positions = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1];\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setIndex(new BufferAttribute(indices, 1));\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tsuper(geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.box = box;\n\t\t\tthis.type = 'Box3Helper';\n\t\t\tthis.geometry.computeBoundingSphere();\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tconst box = this.box;\n\t\t\tif (box.isEmpty()) return;\n\t\t\tbox.getCenter(this.position);\n\t\t\tbox.getSize(this.scale);\n\t\t\tthis.scale.multiplyScalar(0.5);\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t}\n\n\t}\n\n\tclass PlaneHelper extends Line {\n\t\tconstructor(plane, size = 1, hex = 0xffff00) {\n\t\t\tconst color = hex;\n\t\t\tconst positions = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0];\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tgeometry.computeBoundingSphere();\n\t\t\tsuper(geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.type = 'PlaneHelper';\n\t\t\tthis.plane = plane;\n\t\t\tthis.size = size;\n\t\t\tconst positions2 = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1];\n\t\t\tconst geometry2 = new BufferGeometry();\n\t\t\tgeometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\n\t\t\tgeometry2.computeBoundingSphere();\n\t\t\tthis.add(new Mesh(geometry2, new MeshBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\topacity: 0.2,\n\t\t\t\ttransparent: true,\n\t\t\t\tdepthWrite: false,\n\t\t\t\ttoneMapped: false\n\t\t\t})));\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tlet scale = -this.plane.constant;\n\t\t\tif (Math.abs(scale) < 1e-8) scale = 1e-8; // sign does not matter\n\n\t\t\tthis.scale.set(0.5 * this.size, 0.5 * this.size, scale);\n\t\t\tthis.children[0].material.side = scale < 0 ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\t\tthis.lookAt(this.plane.normal);\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t}\n\n\t}\n\n\tconst _axis = /*@__PURE__*/new Vector3();\n\n\tlet _lineGeometry, _coneGeometry;\n\n\tclass ArrowHelper extends Object3D {\n\t\t// dir is assumed to be normalized\n\t\tconstructor(dir = new Vector3(0, 0, 1), origin = new Vector3(0, 0, 0), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ArrowHelper';\n\n\t\t\tif (_lineGeometry === undefined) {\n\t\t\t\t_lineGeometry = new BufferGeometry();\n\n\t\t\t\t_lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n\n\t\t\t\t_coneGeometry = new CylinderGeometry(0, 0.5, 1, 5, 1);\n\n\t\t\t\t_coneGeometry.translate(0, -0.5, 0);\n\t\t\t}\n\n\t\t\tthis.position.copy(origin);\n\t\t\tthis.line = new Line(_lineGeometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.line.matrixAutoUpdate = false;\n\t\t\tthis.add(this.line);\n\t\t\tthis.cone = new Mesh(_coneGeometry, new MeshBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.cone.matrixAutoUpdate = false;\n\t\t\tthis.add(this.cone);\n\t\t\tthis.setDirection(dir);\n\t\t\tthis.setLength(length, headLength, headWidth);\n\t\t}\n\n\t\tsetDirection(dir) {\n\t\t\t// dir is assumed to be normalized\n\t\t\tif (dir.y > 0.99999) {\n\t\t\t\tthis.quaternion.set(0, 0, 0, 1);\n\t\t\t} else if (dir.y < -0.99999) {\n\t\t\t\tthis.quaternion.set(1, 0, 0, 0);\n\t\t\t} else {\n\t\t\t\t_axis.set(dir.z, 0, -dir.x).normalize();\n\n\t\t\t\tconst radians = Math.acos(dir.y);\n\t\t\t\tthis.quaternion.setFromAxisAngle(_axis, radians);\n\t\t\t}\n\t\t}\n\n\t\tsetLength(length, headLength = length * 0.2, headWidth = headLength * 0.2) {\n\t\t\tthis.line.scale.set(1, Math.max(0.0001, length - headLength), 1); // see #17458\n\n\t\t\tthis.line.updateMatrix();\n\t\t\tthis.cone.scale.set(headWidth, headLength, headWidth);\n\t\t\tthis.cone.position.y = length;\n\t\t\tthis.cone.updateMatrix();\n\t\t}\n\n\t\tsetColor(color) {\n\t\t\tthis.line.material.color.set(color);\n\t\t\tthis.cone.material.color.set(color);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source, false);\n\t\t\tthis.line.copy(source.line);\n\t\t\tthis.cone.copy(source.cone);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass AxesHelper extends LineSegments {\n\t\tconstructor(size = 1) {\n\t\t\tconst vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\n\t\t\tconst colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'AxesHelper';\n\t\t}\n\n\t\tsetColors(xAxisColor, yAxisColor, zAxisColor) {\n\t\t\tconst color = new Color();\n\t\t\tconst array = this.geometry.attributes.color.array;\n\t\t\tcolor.set(xAxisColor);\n\t\t\tcolor.toArray(array, 0);\n\t\t\tcolor.toArray(array, 3);\n\t\t\tcolor.set(yAxisColor);\n\t\t\tcolor.toArray(array, 6);\n\t\t\tcolor.toArray(array, 9);\n\t\t\tcolor.set(zAxisColor);\n\t\t\tcolor.toArray(array, 12);\n\t\t\tcolor.toArray(array, 15);\n\t\t\tthis.geometry.attributes.color.needsUpdate = true;\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t}\n\n\t}\n\n\tconst _floatView = new Float32Array(1);\n\n\tconst _int32View = new Int32Array(_floatView.buffer);\n\n\tclass DataUtils {\n\t\t// Converts float32 to float16 (stored as uint16 value).\n\t\tstatic toHalfFloat(val) {\n\t\t\t// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\t\t\t/* This method is faster than the OpenEXR implementation (very often\n\t\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t\t* by James Tursa?s half-precision code. */\n\t\t\t_floatView[0] = val;\n\t\t\tconst x = _int32View[0];\n\t\t\tlet bits = x >> 16 & 0x8000;\n\t\t\t/* Get the sign */\n\n\t\t\tlet m = x >> 12 & 0x07ff;\n\t\t\t/* Keep one extra bit for rounding */\n\n\t\t\tconst e = x >> 23 & 0xff;\n\t\t\t/* Using int is faster here */\n\n\t\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t\t* half, return signed zero. */\n\n\t\t\tif (e < 103) return bits;\n\t\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\n\t\t\tif (e > 142) {\n\t\t\t\tbits |= 0x7c00;\n\t\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */\n\n\t\t\t\tbits |= (e == 255 ? 0 : 1) && x & 0x007fffff;\n\t\t\t\treturn bits;\n\t\t\t}\n\t\t\t/* If exponent underflows but not too much, return a denormal */\n\n\n\t\t\tif (e < 113) {\n\t\t\t\tm |= 0x0800;\n\t\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t\t* to 1, which is OK. */\n\n\t\t\t\tbits |= (m >> 114 - e) + (m >> 113 - e & 1);\n\t\t\t\treturn bits;\n\t\t\t}\n\n\t\t\tbits |= e - 112 << 10 | m >> 1;\n\t\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t\t* the exponent, which is OK. */\n\n\t\t\tbits += m & 1;\n\t\t\treturn bits;\n\t\t}\n\n\t}\n\n\tconst LOD_MIN = 4;\n\tconst LOD_MAX = 8;\n\tconst SIZE_MAX = Math.pow(2, LOD_MAX); // The standard deviations (radians) associated with the extra mips. These are\n\t// chosen to approximate a Trowbridge-Reitz distribution function times the\n\t// geometric shadowing function. These sigma values squared must match the\n\t// variance #defines in cube_uv_reflection_fragment.glsl.js.\n\n\tconst EXTRA_LOD_SIGMA = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582];\n\tconst TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length; // The maximum length of the blur for loop. Smaller sigmas will use fewer\n\t// samples and exit early, but not recompile the shader.\n\n\tconst MAX_SAMPLES = 20;\n\tconst ENCODINGS = {\n\t\t[LinearEncoding]: 0,\n\t\t[sRGBEncoding]: 1,\n\t\t[RGBEEncoding]: 2,\n\t\t[RGBM7Encoding]: 3,\n\t\t[RGBM16Encoding]: 4,\n\t\t[RGBDEncoding]: 5,\n\t\t[GammaEncoding]: 6\n\t};\n\tconst backgroundMaterial = new MeshBasicMaterial({\n\t\tside: BackSide,\n\t\tdepthWrite: false,\n\t\tdepthTest: false\n\t});\n\tconst backgroundBox = new Mesh(new BoxGeometry(), backgroundMaterial);\n\n\tconst _flatCamera = /*@__PURE__*/new OrthographicCamera();\n\n\tconst {\n\t\t_lodPlanes,\n\t\t_sizeLods,\n\t\t_sigmas\n\t} = /*@__PURE__*/_createPlanes();\n\n\tconst _clearColor = /*@__PURE__*/new Color();\n\n\tlet _oldTarget = null; // Golden Ratio\n\n\tconst PHI = (1 + Math.sqrt(5)) / 2;\n\tconst INV_PHI = 1 / PHI; // Vertices of a dodecahedron (except the opposites, which represent the\n\t// same axis), used as axis directions evenly spread on a sphere.\n\n\tconst _axisDirections = [/*@__PURE__*/new Vector3(1, 1, 1), /*@__PURE__*/new Vector3(-1, 1, 1), /*@__PURE__*/new Vector3(1, 1, -1), /*@__PURE__*/new Vector3(-1, 1, -1), /*@__PURE__*/new Vector3(0, PHI, INV_PHI), /*@__PURE__*/new Vector3(0, PHI, -INV_PHI), /*@__PURE__*/new Vector3(INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(-INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(PHI, INV_PHI, 0), /*@__PURE__*/new Vector3(-PHI, INV_PHI, 0)];\n\t/**\n\t * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n\t * (PMREM) from a cubeMap environment texture. This allows different levels of\n\t * blur to be quickly accessed based on material roughness. It is packed into a\n\t * special CubeUV format that allows us to perform custom interpolation so that\n\t * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n\t * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n\t * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n\t * higher roughness levels. In this way we maintain resolution to smoothly\n\t * interpolate diffuse lighting while limiting sampling computation.\n\t *\n\t * Paper: Fast, Accurate Image-Based Lighting\n\t * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n\t*/\n\n\tfunction convertLinearToRGBE(color) {\n\t\tconst maxComponent = Math.max(color.r, color.g, color.b);\n\t\tconst fExp = Math.min(Math.max(Math.ceil(Math.log2(maxComponent)), -128.0), 127.0);\n\t\tcolor.multiplyScalar(Math.pow(2.0, -fExp));\n\t\tconst alpha = (fExp + 128.0) / 255.0;\n\t\treturn alpha;\n\t}\n\n\tclass PMREMGenerator {\n\t\tconstructor(renderer) {\n\t\t\tthis._renderer = renderer;\n\t\t\tthis._pingPongRenderTarget = null;\n\t\t\tthis._blurMaterial = _getBlurShader(MAX_SAMPLES);\n\t\t\tthis._equirectShader = null;\n\t\t\tthis._cubemapShader = null;\n\n\t\t\tthis._compileMaterial(this._blurMaterial);\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t\t * is placed at the origin).\n\t\t */\n\n\n\t\tfromScene(scene, sigma = 0, near = 0.1, far = 100) {\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\n\t\t\tthis._sceneToCubeUV(scene, near, far, cubeUVRenderTarget);\n\n\t\t\tif (sigma > 0) {\n\t\t\t\tthis._blur(cubeUVRenderTarget, 0, 0, sigma);\n\t\t\t}\n\n\t\t\tthis._applyPMREM(cubeUVRenderTarget);\n\n\t\t\tthis._cleanup(cubeUVRenderTarget);\n\n\t\t\treturn cubeUVRenderTarget;\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\n\n\t\tfromEquirectangular(equirectangular) {\n\t\t\treturn this._fromTexture(equirectangular);\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\n\n\t\tfromCubemap(cubemap) {\n\t\t\treturn this._fromTexture(cubemap);\n\t\t}\n\t\t/**\n\t\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\n\n\t\tcompileCubemapShader() {\n\t\t\tif (this._cubemapShader === null) {\n\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\n\t\t\t\tthis._compileMaterial(this._cubemapShader);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\n\n\t\tcompileEquirectangularShader() {\n\t\t\tif (this._equirectShader === null) {\n\t\t\t\tthis._equirectShader = _getEquirectShader();\n\n\t\t\t\tthis._compileMaterial(this._equirectShader);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t\t * one of them will cause any others to also become unusable.\n\t\t */\n\n\n\t\tdispose() {\n\t\t\tthis._blurMaterial.dispose();\n\n\t\t\tif (this._cubemapShader !== null) this._cubemapShader.dispose();\n\t\t\tif (this._equirectShader !== null) this._equirectShader.dispose();\n\n\t\t\tfor (let i = 0; i < _lodPlanes.length; i++) {\n\t\t\t\t_lodPlanes[i].dispose();\n\t\t\t}\n\t\t} // private interface\n\n\n\t\t_cleanup(outputTarget) {\n\t\t\tthis._pingPongRenderTarget.dispose();\n\n\t\t\tthis._renderer.setRenderTarget(_oldTarget);\n\n\t\t\toutputTarget.scissorTest = false;\n\n\t\t\t_setViewport(outputTarget, 0, 0, outputTarget.width, outputTarget.height);\n\t\t}\n\n\t\t_fromTexture(texture) {\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\t\tconst cubeUVRenderTarget = this._allocateTargets(texture);\n\n\t\t\tthis._textureToCubeUV(texture, cubeUVRenderTarget);\n\n\t\t\tthis._applyPMREM(cubeUVRenderTarget);\n\n\t\t\tthis._cleanup(cubeUVRenderTarget);\n\n\t\t\treturn cubeUVRenderTarget;\n\t\t}\n\n\t\t_allocateTargets(texture) {\n\t\t\t// warning: null texture is valid\n\t\t\tconst params = {\n\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\tminFilter: NearestFilter,\n\t\t\t\tgenerateMipmaps: false,\n\t\t\t\ttype: UnsignedByteType,\n\t\t\t\tformat: RGBEFormat,\n\t\t\t\tencoding: _isLDR(texture) ? texture.encoding : RGBEEncoding,\n\t\t\t\tdepthBuffer: false\n\t\t\t};\n\n\t\t\tconst cubeUVRenderTarget = _createRenderTarget(params);\n\n\t\t\tcubeUVRenderTarget.depthBuffer = texture ? false : true;\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget(params);\n\t\t\treturn cubeUVRenderTarget;\n\t\t}\n\n\t\t_compileMaterial(material) {\n\t\t\tconst tmpMesh = new Mesh(_lodPlanes[0], material);\n\n\t\t\tthis._renderer.compile(tmpMesh, _flatCamera);\n\t\t}\n\n\t\t_sceneToCubeUV(scene, near, far, cubeUVRenderTarget) {\n\t\t\tconst fov = 90;\n\t\t\tconst aspect = 1;\n\t\t\tconst cubeCamera = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tconst upSign = [1, -1, 1, 1, 1, 1];\n\t\t\tconst forwardSign = [1, 1, 1, -1, -1, -1];\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst originalAutoClear = renderer.autoClear;\n\t\t\tconst outputEncoding = renderer.outputEncoding;\n\t\t\tconst toneMapping = renderer.toneMapping;\n\t\t\trenderer.getClearColor(_clearColor);\n\t\t\trenderer.toneMapping = NoToneMapping;\n\t\t\trenderer.outputEncoding = LinearEncoding;\n\t\t\trenderer.autoClear = false;\n\t\t\tlet useSolidColor = false;\n\t\t\tconst background = scene.background;\n\n\t\t\tif (background) {\n\t\t\t\tif (background.isColor) {\n\t\t\t\t\tbackgroundMaterial.color.copy(background).convertSRGBToLinear();\n\t\t\t\t\tscene.background = null;\n\t\t\t\t\tconst alpha = convertLinearToRGBE(backgroundMaterial.color);\n\t\t\t\t\tbackgroundMaterial.opacity = alpha;\n\t\t\t\t\tuseSolidColor = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbackgroundMaterial.color.copy(_clearColor).convertSRGBToLinear();\n\t\t\t\tconst alpha = convertLinearToRGBE(backgroundMaterial.color);\n\t\t\t\tbackgroundMaterial.opacity = alpha;\n\t\t\t\tuseSolidColor = true;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tconst col = i % 3;\n\n\t\t\t\tif (col == 0) {\n\t\t\t\t\tcubeCamera.up.set(0, upSign[i], 0);\n\t\t\t\t\tcubeCamera.lookAt(forwardSign[i], 0, 0);\n\t\t\t\t} else if (col == 1) {\n\t\t\t\t\tcubeCamera.up.set(0, 0, upSign[i]);\n\t\t\t\t\tcubeCamera.lookAt(0, forwardSign[i], 0);\n\t\t\t\t} else {\n\t\t\t\t\tcubeCamera.up.set(0, upSign[i], 0);\n\t\t\t\t\tcubeCamera.lookAt(0, 0, forwardSign[i]);\n\t\t\t\t}\n\n\t\t\t\t_setViewport(cubeUVRenderTarget, col * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX);\n\n\t\t\t\trenderer.setRenderTarget(cubeUVRenderTarget);\n\n\t\t\t\tif (useSolidColor) {\n\t\t\t\t\trenderer.render(backgroundBox, cubeCamera);\n\t\t\t\t}\n\n\t\t\t\trenderer.render(scene, cubeCamera);\n\t\t\t}\n\n\t\t\trenderer.toneMapping = toneMapping;\n\t\t\trenderer.outputEncoding = outputEncoding;\n\t\t\trenderer.autoClear = originalAutoClear;\n\t\t}\n\n\t\t_textureToCubeUV(texture, cubeUVRenderTarget) {\n\t\t\tconst renderer = this._renderer;\n\n\t\t\tif (texture.isCubeTexture) {\n\t\t\t\tif (this._cubemapShader == null) {\n\t\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._equirectShader == null) {\n\t\t\t\t\tthis._equirectShader = _getEquirectShader();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst material = texture.isCubeTexture ? this._cubemapShader : this._equirectShader;\n\t\t\tconst mesh = new Mesh(_lodPlanes[0], material);\n\t\t\tconst uniforms = material.uniforms;\n\t\t\tuniforms['envMap'].value = texture;\n\n\t\t\tif (!texture.isCubeTexture) {\n\t\t\t\tuniforms['texelSize'].value.set(1.0 / texture.image.width, 1.0 / texture.image.height);\n\t\t\t}\n\n\t\t\tuniforms['inputEncoding'].value = ENCODINGS[texture.encoding];\n\t\t\tuniforms['outputEncoding'].value = ENCODINGS[cubeUVRenderTarget.texture.encoding];\n\n\t\t\t_setViewport(cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX);\n\n\t\t\trenderer.setRenderTarget(cubeUVRenderTarget);\n\t\t\trenderer.render(mesh, _flatCamera);\n\t\t}\n\n\t\t_applyPMREM(cubeUVRenderTarget) {\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst autoClear = renderer.autoClear;\n\t\t\trenderer.autoClear = false;\n\n\t\t\tfor (let i = 1; i < TOTAL_LODS; i++) {\n\t\t\t\tconst sigma = Math.sqrt(_sigmas[i] * _sigmas[i] - _sigmas[i - 1] * _sigmas[i - 1]);\n\t\t\t\tconst poleAxis = _axisDirections[(i - 1) % _axisDirections.length];\n\n\t\t\t\tthis._blur(cubeUVRenderTarget, i - 1, i, sigma, poleAxis);\n\t\t\t}\n\n\t\t\trenderer.autoClear = autoClear;\n\t\t}\n\t\t/**\n\t\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t\t * accurate at the poles, but still does a decent job.\n\t\t */\n\n\n\t\t_blur(cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis) {\n\t\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\t\tthis._halfBlur(cubeUVRenderTarget, pingPongRenderTarget, lodIn, lodOut, sigma, 'latitudinal', poleAxis);\n\n\t\t\tthis._halfBlur(pingPongRenderTarget, cubeUVRenderTarget, lodOut, lodOut, sigma, 'longitudinal', poleAxis);\n\t\t}\n\n\t\t_halfBlur(targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis) {\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst blurMaterial = this._blurMaterial;\n\n\t\t\tif (direction !== 'latitudinal' && direction !== 'longitudinal') {\n\t\t\t\tconsole.error('blur direction must be either latitudinal or longitudinal!');\n\t\t\t} // Number of standard deviations at which to cut off the discrete approximation.\n\n\n\t\t\tconst STANDARD_DEVIATIONS = 3;\n\t\t\tconst blurMesh = new Mesh(_lodPlanes[lodOut], blurMaterial);\n\t\t\tconst blurUniforms = blurMaterial.uniforms;\n\t\t\tconst pixels = _sizeLods[lodIn] - 1;\n\t\t\tconst radiansPerPixel = isFinite(sigmaRadians) ? Math.PI / (2 * pixels) : 2 * Math.PI / (2 * MAX_SAMPLES - 1);\n\t\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\t\tconst samples = isFinite(sigmaRadians) ? 1 + Math.floor(STANDARD_DEVIATIONS * sigmaPixels) : MAX_SAMPLES;\n\n\t\t\tif (samples > MAX_SAMPLES) {\n\t\t\t\tconsole.warn(`sigmaRadians, ${sigmaRadians}, is too large and will clip, as it requested ${samples} samples when the maximum is set to ${MAX_SAMPLES}`);\n\t\t\t}\n\n\t\t\tconst weights = [];\n\t\t\tlet sum = 0;\n\n\t\t\tfor (let i = 0; i < MAX_SAMPLES; ++i) {\n\t\t\t\tconst x = i / sigmaPixels;\n\t\t\t\tconst weight = Math.exp(-x * x / 2);\n\t\t\t\tweights.push(weight);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tsum += weight;\n\t\t\t\t} else if (i < samples) {\n\t\t\t\t\tsum += 2 * weight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < weights.length; i++) {\n\t\t\t\tweights[i] = weights[i] / sum;\n\t\t\t}\n\n\t\t\tblurUniforms['envMap'].value = targetIn.texture;\n\t\t\tblurUniforms['samples'].value = samples;\n\t\t\tblurUniforms['weights'].value = weights;\n\t\t\tblurUniforms['latitudinal'].value = direction === 'latitudinal';\n\n\t\t\tif (poleAxis) {\n\t\t\t\tblurUniforms['poleAxis'].value = poleAxis;\n\t\t\t}\n\n\t\t\tblurUniforms['dTheta'].value = radiansPerPixel;\n\t\t\tblurUniforms['mipInt'].value = LOD_MAX - lodIn;\n\t\t\tblurUniforms['inputEncoding'].value = ENCODINGS[targetIn.texture.encoding];\n\t\t\tblurUniforms['outputEncoding'].value = ENCODINGS[targetIn.texture.encoding];\n\t\t\tconst outputSize = _sizeLods[lodOut];\n\t\t\tconst x = 3 * Math.max(0, SIZE_MAX - 2 * outputSize);\n\t\t\tconst y = (lodOut === 0 ? 0 : 2 * SIZE_MAX) + 2 * outputSize * (lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0);\n\n\t\t\t_setViewport(targetOut, x, y, 3 * outputSize, 2 * outputSize);\n\n\t\t\trenderer.setRenderTarget(targetOut);\n\t\t\trenderer.render(blurMesh, _flatCamera);\n\t\t}\n\n\t}\n\n\tfunction _isLDR(texture) {\n\t\tif (texture === undefined || texture.type !== UnsignedByteType) return false;\n\t\treturn texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\n\t}\n\n\tfunction _createPlanes() {\n\t\tconst _lodPlanes = [];\n\t\tconst _sizeLods = [];\n\t\tconst _sigmas = [];\n\t\tlet lod = LOD_MAX;\n\n\t\tfor (let i = 0; i < TOTAL_LODS; i++) {\n\t\t\tconst sizeLod = Math.pow(2, lod);\n\n\t\t\t_sizeLods.push(sizeLod);\n\n\t\t\tlet sigma = 1.0 / sizeLod;\n\n\t\t\tif (i > LOD_MAX - LOD_MIN) {\n\t\t\t\tsigma = EXTRA_LOD_SIGMA[i - LOD_MAX + LOD_MIN - 1];\n\t\t\t} else if (i == 0) {\n\t\t\t\tsigma = 0;\n\t\t\t}\n\n\t\t\t_sigmas.push(sigma);\n\n\t\t\tconst texelSize = 1.0 / (sizeLod - 1);\n\t\t\tconst min = -texelSize / 2;\n\t\t\tconst max = 1 + texelSize / 2;\n\t\t\tconst uv1 = [min, min, max, min, max, max, min, min, max, max, min, max];\n\t\t\tconst cubeFaces = 6;\n\t\t\tconst vertices = 6;\n\t\t\tconst positionSize = 3;\n\t\t\tconst uvSize = 2;\n\t\t\tconst faceIndexSize = 1;\n\t\t\tconst position = new Float32Array(positionSize * vertices * cubeFaces);\n\t\t\tconst uv = new Float32Array(uvSize * vertices * cubeFaces);\n\t\t\tconst faceIndex = new Float32Array(faceIndexSize * vertices * cubeFaces);\n\n\t\t\tfor (let face = 0; face < cubeFaces; face++) {\n\t\t\t\tconst x = face % 3 * 2 / 3 - 1;\n\t\t\t\tconst y = face > 2 ? 0 : -1;\n\t\t\t\tconst coordinates = [x, y, 0, x + 2 / 3, y, 0, x + 2 / 3, y + 1, 0, x, y, 0, x + 2 / 3, y + 1, 0, x, y + 1, 0];\n\t\t\t\tposition.set(coordinates, positionSize * vertices * face);\n\t\t\t\tuv.set(uv1, uvSize * vertices * face);\n\t\t\t\tconst fill = [face, face, face, face, face, face];\n\t\t\t\tfaceIndex.set(fill, faceIndexSize * vertices * face);\n\t\t\t}\n\n\t\t\tconst planes = new BufferGeometry();\n\t\t\tplanes.setAttribute('position', new BufferAttribute(position, positionSize));\n\t\t\tplanes.setAttribute('uv', new BufferAttribute(uv, uvSize));\n\t\t\tplanes.setAttribute('faceIndex', new BufferAttribute(faceIndex, faceIndexSize));\n\n\t\t\t_lodPlanes.push(planes);\n\n\t\t\tif (lod > LOD_MIN) {\n\t\t\t\tlod--;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t_lodPlanes,\n\t\t\t_sizeLods,\n\t\t\t_sigmas\n\t\t};\n\t}\n\n\tfunction _createRenderTarget(params) {\n\t\tconst cubeUVRenderTarget = new WebGLRenderTarget(3 * SIZE_MAX, 3 * SIZE_MAX, params);\n\t\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\t\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\t\tcubeUVRenderTarget.scissorTest = true;\n\t\treturn cubeUVRenderTarget;\n\t}\n\n\tfunction _setViewport(target, x, y, width, height) {\n\t\ttarget.viewport.set(x, y, width, height);\n\t\ttarget.scissor.set(x, y, width, height);\n\t}\n\n\tfunction _getBlurShader(maxSamples) {\n\t\tconst weights = new Float32Array(maxSamples);\n\t\tconst poleAxis = new Vector3(0, 1, 0);\n\t\tconst shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'SphericalGaussianBlur',\n\t\t\tdefines: {\n\t\t\t\t'n': maxSamples\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'samples': {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\t'weights': {\n\t\t\t\t\tvalue: weights\n\t\t\t\t},\n\t\t\t\t'latitudinal': {\n\t\t\t\t\tvalue: false\n\t\t\t\t},\n\t\t\t\t'dTheta': {\n\t\t\t\t\tvalue: 0\n\t\t\t\t},\n\t\t\t\t'mipInt': {\n\t\t\t\t\tvalue: 0\n\t\t\t\t},\n\t\t\t\t'poleAxis': {\n\t\t\t\t\tvalue: poleAxis\n\t\t\t\t},\n\t\t\t\t'inputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t},\n\t\t\t\t'outputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getEquirectShader() {\n\t\tconst texelSize = new Vector2(1, 1);\n\t\tconst shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'EquirectangularToCubeUV',\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'texelSize': {\n\t\t\t\t\tvalue: texelSize\n\t\t\t\t},\n\t\t\t\t'inputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t},\n\t\t\t\t'outputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getCubemapShader() {\n\t\tconst shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'CubemapToCubeUV',\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'inputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t},\n\t\t\t\t'outputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${_getEncodings()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getCommonVertexShader() {\n\t\treturn (\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`\n\t\t);\n\t}\n\n\tfunction _getEncodings() {\n\t\treturn (\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t`\n\t\t);\n\t}\n\n\tconst LineStrip = 0;\n\tconst LinePieces = 1;\n\tconst NoColors = 0;\n\tconst FaceColors = 1;\n\tconst VertexColors = 2;\n\tfunction MeshFaceMaterial(materials) {\n\t\tconsole.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');\n\t\treturn materials;\n\t}\n\tfunction MultiMaterial(materials = []) {\n\t\tconsole.warn('THREE.MultiMaterial has been removed. Use an Array instead.');\n\t\tmaterials.isMultiMaterial = true;\n\t\tmaterials.materials = materials;\n\n\t\tmaterials.clone = function () {\n\t\t\treturn materials.slice();\n\t\t};\n\n\t\treturn materials;\n\t}\n\tfunction PointCloud(geometry, material) {\n\t\tconsole.warn('THREE.PointCloud has been renamed to THREE.Points.');\n\t\treturn new Points(geometry, material);\n\t}\n\tfunction Particle(material) {\n\t\tconsole.warn('THREE.Particle has been renamed to THREE.Sprite.');\n\t\treturn new Sprite(material);\n\t}\n\tfunction ParticleSystem(geometry, material) {\n\t\tconsole.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\n\t\treturn new Points(geometry, material);\n\t}\n\tfunction PointCloudMaterial(parameters) {\n\t\tconsole.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction ParticleBasicMaterial(parameters) {\n\t\tconsole.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction ParticleSystemMaterial(parameters) {\n\t\tconsole.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction Vertex(x, y, z) {\n\t\tconsole.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\n\t\treturn new Vector3(x, y, z);\n\t} //\n\n\tfunction DynamicBufferAttribute(array, itemSize) {\n\t\tconsole.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.');\n\t\treturn new BufferAttribute(array, itemSize).setUsage(DynamicDrawUsage);\n\t}\n\tfunction Int8Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');\n\t\treturn new Int8BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint8Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');\n\t\treturn new Uint8BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint8ClampedAttribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');\n\t\treturn new Uint8ClampedBufferAttribute(array, itemSize);\n\t}\n\tfunction Int16Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');\n\t\treturn new Int16BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint16Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');\n\t\treturn new Uint16BufferAttribute(array, itemSize);\n\t}\n\tfunction Int32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');\n\t\treturn new Int32BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');\n\t\treturn new Uint32BufferAttribute(array, itemSize);\n\t}\n\tfunction Float32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');\n\t\treturn new Float32BufferAttribute(array, itemSize);\n\t}\n\tfunction Float64Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');\n\t\treturn new Float64BufferAttribute(array, itemSize);\n\t} //\n\n\tCurve.create = function (construct, getPoint) {\n\t\tconsole.log('THREE.Curve.create() has been deprecated');\n\t\tconstruct.prototype = Object.create(Curve.prototype);\n\t\tconstruct.prototype.constructor = construct;\n\t\tconstruct.prototype.getPoint = getPoint;\n\t\treturn construct;\n\t}; //\n\n\n\tPath.prototype.fromPoints = function (points) {\n\t\tconsole.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');\n\t\treturn this.setFromPoints(points);\n\t}; //\n\n\n\tfunction AxisHelper(size) {\n\t\tconsole.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');\n\t\treturn new AxesHelper(size);\n\t}\n\tfunction BoundingBoxHelper(object, color) {\n\t\tconsole.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');\n\t\treturn new BoxHelper(object, color);\n\t}\n\tfunction EdgesHelper(object, hex) {\n\t\tconsole.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');\n\t\treturn new LineSegments(new EdgesGeometry(object.geometry), new LineBasicMaterial({\n\t\t\tcolor: hex !== undefined ? hex : 0xffffff\n\t\t}));\n\t}\n\n\tGridHelper.prototype.setColors = function () {\n\t\tconsole.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\t\tconsole.error('THREE.SkeletonHelper: update() no longer needs to be called.');\n\t};\n\n\tfunction WireframeHelper(object, hex) {\n\t\tconsole.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');\n\t\treturn new LineSegments(new WireframeGeometry(object.geometry), new LineBasicMaterial({\n\t\t\tcolor: hex !== undefined ? hex : 0xffffff\n\t\t}));\n\t} //\n\n\tLoader.prototype.extractUrlBase = function (url) {\n\t\tconsole.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');\n\t\treturn LoaderUtils.extractUrlBase(url);\n\t};\n\n\tLoader.Handlers = {\n\t\tadd: function ()\n\t\t/* regex, loader */\n\t\t{\n\t\t\tconsole.error('THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.');\n\t\t},\n\t\tget: function ()\n\t\t/* file */\n\t\t{\n\t\t\tconsole.error('THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.');\n\t\t}\n\t};\n\tfunction XHRLoader(manager) {\n\t\tconsole.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');\n\t\treturn new FileLoader(manager);\n\t}\n\tfunction BinaryTextureLoader(manager) {\n\t\tconsole.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');\n\t\treturn new DataTextureLoader(manager);\n\t} //\n\n\tBox2.prototype.center = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box2: .center() has been renamed to .getCenter().');\n\t\treturn this.getCenter(optionalTarget);\n\t};\n\n\tBox2.prototype.empty = function () {\n\t\tconsole.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\n\t\treturn this.isEmpty();\n\t};\n\n\tBox2.prototype.isIntersectionBox = function (box) {\n\t\tconsole.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\treturn this.intersectsBox(box);\n\t};\n\n\tBox2.prototype.size = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box2: .size() has been renamed to .getSize().');\n\t\treturn this.getSize(optionalTarget);\n\t}; //\n\n\n\tBox3.prototype.center = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box3: .center() has been renamed to .getCenter().');\n\t\treturn this.getCenter(optionalTarget);\n\t};\n\n\tBox3.prototype.empty = function () {\n\t\tconsole.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\n\t\treturn this.isEmpty();\n\t};\n\n\tBox3.prototype.isIntersectionBox = function (box) {\n\t\tconsole.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\treturn this.intersectsBox(box);\n\t};\n\n\tBox3.prototype.isIntersectionSphere = function (sphere) {\n\t\tconsole.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n\t\treturn this.intersectsSphere(sphere);\n\t};\n\n\tBox3.prototype.size = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box3: .size() has been renamed to .getSize().');\n\t\treturn this.getSize(optionalTarget);\n\t}; //\n\n\n\tSphere.prototype.empty = function () {\n\t\tconsole.warn('THREE.Sphere: .empty() has been renamed to .isEmpty().');\n\t\treturn this.isEmpty();\n\t}; //\n\n\n\tFrustum.prototype.setFromMatrix = function (m) {\n\t\tconsole.warn('THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().');\n\t\treturn this.setFromProjectionMatrix(m);\n\t}; //\n\n\n\tLine3.prototype.center = function (optionalTarget) {\n\t\tconsole.warn('THREE.Line3: .center() has been renamed to .getCenter().');\n\t\treturn this.getCenter(optionalTarget);\n\t}; //\n\n\n\tMatrix3.prototype.flattenToArrayOffset = function (array, offset) {\n\t\tconsole.warn('THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\n\t\treturn this.toArray(array, offset);\n\t};\n\n\tMatrix3.prototype.multiplyVector3 = function (vector) {\n\t\tconsole.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n\t\treturn vector.applyMatrix3(this);\n\t};\n\n\tMatrix3.prototype.multiplyVector3Array = function ()\n\t/* a */\n\t{\n\t\tconsole.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');\n\t};\n\n\tMatrix3.prototype.applyToBufferAttribute = function (attribute) {\n\t\tconsole.warn('THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.');\n\t\treturn attribute.applyMatrix3(this);\n\t};\n\n\tMatrix3.prototype.applyToVector3Array = function ()\n\t/* array, offset, length */\n\t{\n\t\tconsole.error('THREE.Matrix3: .applyToVector3Array() has been removed.');\n\t};\n\n\tMatrix3.prototype.getInverse = function (matrix) {\n\t\tconsole.warn('THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\n\t\treturn this.copy(matrix).invert();\n\t}; //\n\n\n\tMatrix4.prototype.extractPosition = function (m) {\n\t\tconsole.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n\t\treturn this.copyPosition(m);\n\t};\n\n\tMatrix4.prototype.flattenToArrayOffset = function (array, offset) {\n\t\tconsole.warn('THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\n\t\treturn this.toArray(array, offset);\n\t};\n\n\tMatrix4.prototype.getPosition = function () {\n\t\tconsole.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n\t\treturn new Vector3().setFromMatrixColumn(this, 3);\n\t};\n\n\tMatrix4.prototype.setRotationFromQuaternion = function (q) {\n\t\tconsole.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n\t\treturn this.makeRotationFromQuaternion(q);\n\t};\n\n\tMatrix4.prototype.multiplyToArray = function () {\n\t\tconsole.warn('THREE.Matrix4: .multiplyToArray() has been removed.');\n\t};\n\n\tMatrix4.prototype.multiplyVector3 = function (vector) {\n\t\tconsole.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\treturn vector.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.multiplyVector4 = function (vector) {\n\t\tconsole.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\treturn vector.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.multiplyVector3Array = function ()\n\t/* a */\n\t{\n\t\tconsole.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateAxis = function (v) {\n\t\tconsole.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n\t\tv.transformDirection(this);\n\t};\n\n\tMatrix4.prototype.crossVector = function (vector) {\n\t\tconsole.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\treturn vector.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.translate = function () {\n\t\tconsole.error('THREE.Matrix4: .translate() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateX = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateX() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateY = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateY() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateZ = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateZ() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateByAxis = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateByAxis() has been removed.');\n\t};\n\n\tMatrix4.prototype.applyToBufferAttribute = function (attribute) {\n\t\tconsole.warn('THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.');\n\t\treturn attribute.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.applyToVector3Array = function ()\n\t/* array, offset, length */\n\t{\n\t\tconsole.error('THREE.Matrix4: .applyToVector3Array() has been removed.');\n\t};\n\n\tMatrix4.prototype.makeFrustum = function (left, right, bottom, top, near, far) {\n\t\tconsole.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');\n\t\treturn this.makePerspective(left, right, top, bottom, near, far);\n\t};\n\n\tMatrix4.prototype.getInverse = function (matrix) {\n\t\tconsole.warn('THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\n\t\treturn this.copy(matrix).invert();\n\t}; //\n\n\n\tPlane.prototype.isIntersectionLine = function (line) {\n\t\tconsole.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\n\t\treturn this.intersectsLine(line);\n\t}; //\n\n\n\tQuaternion.prototype.multiplyVector3 = function (vector) {\n\t\tconsole.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n\t\treturn vector.applyQuaternion(this);\n\t};\n\n\tQuaternion.prototype.inverse = function () {\n\t\tconsole.warn('THREE.Quaternion: .inverse() has been renamed to invert().');\n\t\treturn this.invert();\n\t}; //\n\n\n\tRay.prototype.isIntersectionBox = function (box) {\n\t\tconsole.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\treturn this.intersectsBox(box);\n\t};\n\n\tRay.prototype.isIntersectionPlane = function (plane) {\n\t\tconsole.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\n\t\treturn this.intersectsPlane(plane);\n\t};\n\n\tRay.prototype.isIntersectionSphere = function (sphere) {\n\t\tconsole.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n\t\treturn this.intersectsSphere(sphere);\n\t}; //\n\n\n\tTriangle.prototype.area = function () {\n\t\tconsole.warn('THREE.Triangle: .area() has been renamed to .getArea().');\n\t\treturn this.getArea();\n\t};\n\n\tTriangle.prototype.barycoordFromPoint = function (point, target) {\n\t\tconsole.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n\t\treturn this.getBarycoord(point, target);\n\t};\n\n\tTriangle.prototype.midpoint = function (target) {\n\t\tconsole.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');\n\t\treturn this.getMidpoint(target);\n\t};\n\n\tTriangle.prototypenormal = function (target) {\n\t\tconsole.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n\t\treturn this.getNormal(target);\n\t};\n\n\tTriangle.prototype.plane = function (target) {\n\t\tconsole.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');\n\t\treturn this.getPlane(target);\n\t};\n\n\tTriangle.barycoordFromPoint = function (point, a, b, c, target) {\n\t\tconsole.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n\t\treturn Triangle.getBarycoord(point, a, b, c, target);\n\t};\n\n\tTriangle.normal = function (a, b, c, target) {\n\t\tconsole.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n\t\treturn Triangle.getNormal(a, b, c, target);\n\t}; //\n\n\n\tShape.prototype.extractAllPoints = function (divisions) {\n\t\tconsole.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');\n\t\treturn this.extractPoints(divisions);\n\t};\n\n\tShape.prototype.extrude = function (options) {\n\t\tconsole.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');\n\t\treturn new ExtrudeGeometry(this, options);\n\t};\n\n\tShape.prototype.makeGeometry = function (options) {\n\t\tconsole.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');\n\t\treturn new ShapeGeometry(this, options);\n\t}; //\n\n\n\tVector2.prototype.fromAttribute = function (attribute, index, offset) {\n\t\tconsole.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t};\n\n\tVector2.prototype.distanceToManhattan = function (v) {\n\t\tconsole.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n\t\treturn this.manhattanDistanceTo(v);\n\t};\n\n\tVector2.prototype.lengthManhattan = function () {\n\t\tconsole.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\treturn this.manhattanLength();\n\t}; //\n\n\n\tVector3.prototype.setEulerFromRotationMatrix = function () {\n\t\tconsole.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n\t};\n\n\tVector3.prototype.setEulerFromQuaternion = function () {\n\t\tconsole.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n\t};\n\n\tVector3.prototype.getPositionFromMatrix = function (m) {\n\t\tconsole.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n\t\treturn this.setFromMatrixPosition(m);\n\t};\n\n\tVector3.prototype.getScaleFromMatrix = function (m) {\n\t\tconsole.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n\t\treturn this.setFromMatrixScale(m);\n\t};\n\n\tVector3.prototype.getColumnFromMatrix = function (index, matrix) {\n\t\tconsole.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n\t\treturn this.setFromMatrixColumn(matrix, index);\n\t};\n\n\tVector3.prototype.applyProjection = function (m) {\n\t\tconsole.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');\n\t\treturn this.applyMatrix4(m);\n\t};\n\n\tVector3.prototype.fromAttribute = function (attribute, index, offset) {\n\t\tconsole.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t};\n\n\tVector3.prototype.distanceToManhattan = function (v) {\n\t\tconsole.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n\t\treturn this.manhattanDistanceTo(v);\n\t};\n\n\tVector3.prototype.lengthManhattan = function () {\n\t\tconsole.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\treturn this.manhattanLength();\n\t}; //\n\n\n\tVector4.prototype.fromAttribute = function (attribute, index, offset) {\n\t\tconsole.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t};\n\n\tVector4.prototype.lengthManhattan = function () {\n\t\tconsole.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\treturn this.manhattanLength();\n\t}; //\n\n\n\tObject3D.prototype.getChildByName = function (name) {\n\t\tconsole.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n\t\treturn this.getObjectByName(name);\n\t};\n\n\tObject3D.prototype.renderDepth = function () {\n\t\tconsole.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\n\t};\n\n\tObject3D.prototype.translate = function (distance, axis) {\n\t\tconsole.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n\t\treturn this.translateOnAxis(axis, distance);\n\t};\n\n\tObject3D.prototype.getWorldRotation = function () {\n\t\tconsole.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');\n\t};\n\n\tObject3D.prototype.applyMatrix = function (matrix) {\n\t\tconsole.warn('THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().');\n\t\treturn this.applyMatrix4(matrix);\n\t};\n\n\tObject.defineProperties(Object3D.prototype, {\n\t\teulerOrder: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n\t\t\t\treturn this.rotation.order;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n\t\t\t\tthis.rotation.order = value;\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n\t\t\t}\n\t\t}\n\t});\n\n\tMesh.prototype.setDrawMode = function () {\n\t\tconsole.error('THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\n\t};\n\n\tObject.defineProperties(Mesh.prototype, {\n\t\tdrawMode: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.');\n\t\t\t\treturn TrianglesDrawMode;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\n\t\t\t}\n\t\t}\n\t});\n\n\tSkinnedMesh.prototype.initBones = function () {\n\t\tconsole.error('THREE.SkinnedMesh: initBones() has been removed.');\n\t}; //\n\n\n\tPerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\n\t\tconsole.warn('THREE.PerspectiveCamera.setLens is deprecated. ' + 'Use .setFocalLength and .filmGauge for a photographic setup.');\n\t\tif (filmGauge !== undefined) this.filmGauge = filmGauge;\n\t\tthis.setFocalLength(focalLength);\n\t}; //\n\n\n\tObject.defineProperties(Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Light: .onlyShadow has been removed.');\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\n\t\t\t\tthis.shadow.camera.fov = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\n\t\t\t\tthis.shadow.camera.left = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\n\t\t\t\tthis.shadow.camera.right = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\n\t\t\t\tthis.shadow.camera.top = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\n\t\t\t\tthis.shadow.camera.bottom = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\n\t\t\t\tthis.shadow.camera.near = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\n\t\t\t\tthis.shadow.camera.far = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowBias is now .shadow.bias.');\n\t\t\t\tthis.shadow.bias = value;\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Light: .shadowDarkness has been removed.');\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\n\t\t\t\tthis.shadow.mapSize.width = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\n\t\t\t\tthis.shadow.mapSize.height = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tObject.defineProperties(BufferAttribute.prototype, {\n\t\tlength: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');\n\t\t\t\treturn this.array.length;\n\t\t\t}\n\t\t},\n\t\tdynamic: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n\t\t\t\treturn this.usage === DynamicDrawUsage;\n\t\t\t},\n\t\t\tset: function ()\n\t\t\t/* value */\n\t\t\t{\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n\t\t\t\tthis.setUsage(DynamicDrawUsage);\n\t\t\t}\n\t\t}\n\t});\n\n\tBufferAttribute.prototype.setDynamic = function (value) {\n\t\tconsole.warn('THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.');\n\t\tthis.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n\t\treturn this;\n\t};\n\n\tBufferAttribute.prototype.copyIndicesArray = function ()\n\t/* indices */\n\t{\n\t\tconsole.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');\n\t}, BufferAttribute.prototype.setArray = function ()\n\t/* array */\n\t{\n\t\tconsole.error('THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n\t}; //\n\n\tBufferGeometry.prototype.addIndex = function (index) {\n\t\tconsole.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\n\t\tthis.setIndex(index);\n\t};\n\n\tBufferGeometry.prototype.addAttribute = function (name, attribute) {\n\t\tconsole.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().');\n\n\t\tif (!(attribute && attribute.isBufferAttribute) && !(attribute && attribute.isInterleavedBufferAttribute)) {\n\t\t\tconsole.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n\t\t\treturn this.setAttribute(name, new BufferAttribute(arguments[1], arguments[2]));\n\t\t}\n\n\t\tif (name === 'index') {\n\t\t\tconsole.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n\t\t\tthis.setIndex(attribute);\n\t\t\treturn this;\n\t\t}\n\n\t\treturn this.setAttribute(name, attribute);\n\t};\n\n\tBufferGeometry.prototype.addDrawCall = function (start, count, indexOffset) {\n\t\tif (indexOffset !== undefined) {\n\t\t\tconsole.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\n\t\t}\n\n\t\tconsole.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\n\t\tthis.addGroup(start, count);\n\t};\n\n\tBufferGeometry.prototype.clearDrawCalls = function () {\n\t\tconsole.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\n\t\tthis.clearGroups();\n\t};\n\n\tBufferGeometry.prototype.computeOffsets = function () {\n\t\tconsole.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\n\t};\n\n\tBufferGeometry.prototype.removeAttribute = function (name) {\n\t\tconsole.warn('THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().');\n\t\treturn this.deleteAttribute(name);\n\t};\n\n\tBufferGeometry.prototype.applyMatrix = function (matrix) {\n\t\tconsole.warn('THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().');\n\t\treturn this.applyMatrix4(matrix);\n\t};\n\n\tObject.defineProperties(BufferGeometry.prototype, {\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t}\n\t});\n\n\tInterleavedBuffer.prototype.setDynamic = function (value) {\n\t\tconsole.warn('THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.');\n\t\tthis.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n\t\treturn this;\n\t};\n\n\tInterleavedBuffer.prototype.setArray = function ()\n\t/* array */\n\t{\n\t\tconsole.error('THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n\t}; //\n\n\n\tExtrudeGeometry.prototype.getArrays = function () {\n\t\tconsole.error('THREE.ExtrudeGeometry: .getArrays() has been removed.');\n\t};\n\n\tExtrudeGeometry.prototype.addShapeList = function () {\n\t\tconsole.error('THREE.ExtrudeGeometry: .addShapeList() has been removed.');\n\t};\n\n\tExtrudeGeometry.prototype.addShape = function () {\n\t\tconsole.error('THREE.ExtrudeGeometry: .addShape() has been removed.');\n\t}; //\n\n\n\tScene.prototype.dispose = function () {\n\t\tconsole.error('THREE.Scene: .dispose() has been removed.');\n\t}; //\n\n\n\tUniform.prototype.onUpdate = function () {\n\t\tconsole.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');\n\t\treturn this;\n\t}; //\n\n\n\tObject.defineProperties(Material.prototype, {\n\t\twrapAround: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Material: .wrapAround has been removed.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Material: .wrapAround has been removed.');\n\t\t\t}\n\t\t},\n\t\toverdraw: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Material: .overdraw has been removed.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Material: .overdraw has been removed.');\n\t\t\t}\n\t\t},\n\t\twrapRGB: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Material: .wrapRGB has been removed.');\n\t\t\t\treturn new Color();\n\t\t\t}\n\t\t},\n\t\tshading: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t\tthis.flatShading = value === FlatShading;\n\t\t\t}\n\t\t},\n\t\tstencilMask: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n\t\t\t\treturn this.stencilFuncMask;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n\t\t\t\tthis.stencilFuncMask = value;\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(ShaderMaterial.prototype, {\n\t\tderivatives: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n\t\t\t\treturn this.extensions.derivatives;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n\t\t\t\tthis.extensions.derivatives = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tWebGLRenderer.prototype.clearTarget = function (renderTarget, color, depth, stencil) {\n\t\tconsole.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');\n\t\tthis.setRenderTarget(renderTarget);\n\t\tthis.clear(color, depth, stencil);\n\t};\n\n\tWebGLRenderer.prototype.animate = function (callback) {\n\t\tconsole.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');\n\t\tthis.setAnimationLoop(callback);\n\t};\n\n\tWebGLRenderer.prototype.getCurrentRenderTarget = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');\n\t\treturn this.getRenderTarget();\n\t};\n\n\tWebGLRenderer.prototype.getMaxAnisotropy = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');\n\t\treturn this.capabilities.getMaxAnisotropy();\n\t};\n\n\tWebGLRenderer.prototype.getPrecision = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');\n\t\treturn this.capabilities.precision;\n\t};\n\n\tWebGLRenderer.prototype.resetGLState = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');\n\t\treturn this.state.reset();\n\t};\n\n\tWebGLRenderer.prototype.supportsFloatTextures = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\n\t\treturn this.extensions.get('OES_texture_float');\n\t};\n\n\tWebGLRenderer.prototype.supportsHalfFloatTextures = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\n\t\treturn this.extensions.get('OES_texture_half_float');\n\t};\n\n\tWebGLRenderer.prototype.supportsStandardDerivatives = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\n\t\treturn this.extensions.get('OES_standard_derivatives');\n\t};\n\n\tWebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\n\t\treturn this.extensions.get('WEBGL_compressed_texture_s3tc');\n\t};\n\n\tWebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\n\t\treturn this.extensions.get('WEBGL_compressed_texture_pvrtc');\n\t};\n\n\tWebGLRenderer.prototype.supportsBlendMinMax = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\n\t\treturn this.extensions.get('EXT_blend_minmax');\n\t};\n\n\tWebGLRenderer.prototype.supportsVertexTextures = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');\n\t\treturn this.capabilities.vertexTextures;\n\t};\n\n\tWebGLRenderer.prototype.supportsInstancedArrays = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\n\t\treturn this.extensions.get('ANGLE_instanced_arrays');\n\t};\n\n\tWebGLRenderer.prototype.enableScissorTest = function (boolean) {\n\t\tconsole.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\n\t\tthis.setScissorTest(boolean);\n\t};\n\n\tWebGLRenderer.prototype.initMaterial = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.addPrePlugin = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.addPostPlugin = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.updateShadowMap = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setFaceCulling = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.allocTextureUnit = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setTexture = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setTexture() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setTexture2D = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setTextureCube = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.getActiveMipMapLevel = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().');\n\t\treturn this.getActiveMipmapLevel();\n\t};\n\n\tObject.defineProperties(WebGLRenderer.prototype, {\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.enabled;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\n\t\t\t\tthis.shadowMap.enabled = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.type;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\n\t\t\t\tthis.shadowMap.type = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function ()\n\t\t\t/* value */\n\t\t\t{\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\tcontext: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.');\n\t\t\t\treturn this.getContext();\n\t\t\t}\n\t\t},\n\t\tvr: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .vr has been renamed to .xr');\n\t\t\t\treturn this.xr;\n\t\t\t}\n\t\t},\n\t\tgammaInput: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\n\t\t\t}\n\t\t},\n\t\tgammaOutput: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\n\t\t\t\tthis.outputEncoding = value === true ? sRGBEncoding : LinearEncoding;\n\t\t\t}\n\t\t},\n\t\ttoneMappingWhitePoint: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\n\t\t\t\treturn 1.0;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(WebGLShadowMap.prototype, {\n\t\tcullFace: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function ()\n\t\t\t/* cullFace */\n\t\t\t{\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\trenderReverseSided: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\trenderSingleSided: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t}\n\t});\n\tfunction WebGLRenderTargetCube(width, height, options) {\n\t\tconsole.warn('THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).');\n\t\treturn new WebGLCubeRenderTarget(width, options);\n\t} //\n\n\tObject.defineProperties(WebGLRenderTarget.prototype, {\n\t\twrapS: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n\t\t\t\treturn this.texture.wrapS;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n\t\t\t\tthis.texture.wrapS = value;\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n\t\t\t\treturn this.texture.wrapT;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n\t\t\t\tthis.texture.wrapT = value;\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n\t\t\t\treturn this.texture.magFilter;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n\t\t\t\tthis.texture.magFilter = value;\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n\t\t\t\treturn this.texture.minFilter;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n\t\t\t\tthis.texture.minFilter = value;\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n\t\t\t\treturn this.texture.anisotropy;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n\t\t\t\tthis.texture.anisotropy = value;\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n\t\t\t\treturn this.texture.offset;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n\t\t\t\tthis.texture.offset = value;\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n\t\t\t\treturn this.texture.repeat;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n\t\t\t\tthis.texture.repeat = value;\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n\t\t\t\treturn this.texture.format;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n\t\t\t\tthis.texture.format = value;\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n\t\t\t\treturn this.texture.type;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n\t\t\t\tthis.texture.type = value;\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n\t\t\t\treturn this.texture.generateMipmaps;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n\t\t\t\tthis.texture.generateMipmaps = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tAudio.prototype.load = function (file) {\n\t\tconsole.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');\n\t\tconst scope = this;\n\t\tconst audioLoader = new AudioLoader();\n\t\taudioLoader.load(file, function (buffer) {\n\t\t\tscope.setBuffer(buffer);\n\t\t});\n\t\treturn this;\n\t};\n\n\tAudioAnalyser.prototype.getData = function () {\n\t\tconsole.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\n\t\treturn this.getFrequencyData();\n\t}; //\n\n\n\tCubeCamera.prototype.updateCubeMap = function (renderer, scene) {\n\t\tconsole.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');\n\t\treturn this.update(renderer, scene);\n\t};\n\n\tCubeCamera.prototype.clear = function (renderer, color, depth, stencil) {\n\t\tconsole.warn('THREE.CubeCamera: .clear() is now .renderTarget.clear().');\n\t\treturn this.renderTarget.clear(renderer, color, depth, stencil);\n\t};\n\n\tImageUtils.crossOrigin = undefined;\n\n\tImageUtils.loadTexture = function (url, mapping, onLoad, onError) {\n\t\tconsole.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\n\t\tconst loader = new TextureLoader();\n\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\tconst texture = loader.load(url, onLoad, undefined, onError);\n\t\tif (mapping) texture.mapping = mapping;\n\t\treturn texture;\n\t};\n\n\tImageUtils.loadTextureCube = function (urls, mapping, onLoad, onError) {\n\t\tconsole.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\n\t\tconst loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\tconst texture = loader.load(urls, onLoad, undefined, onError);\n\t\tif (mapping) texture.mapping = mapping;\n\t\treturn texture;\n\t};\n\n\tImageUtils.loadCompressedTexture = function () {\n\t\tconsole.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n\t};\n\n\tImageUtils.loadCompressedTextureCube = function () {\n\t\tconsole.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n\t}; //\n\n\n\tfunction CanvasRenderer() {\n\t\tconsole.error('THREE.CanvasRenderer has been removed');\n\t} //\n\n\tfunction JSONLoader() {\n\t\tconsole.error('THREE.JSONLoader has been removed.');\n\t} //\n\n\tconst SceneUtils = {\n\t\tcreateMultiMaterialObject: function ()\n\t\t/* geometry, materials */\n\t\t{\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t},\n\t\tdetach: function ()\n\t\t/* child, parent, scene */\n\t\t{\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t},\n\t\tattach: function ()\n\t\t/* child, scene, parent */\n\t\t{\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t}\n\t}; //\n\n\tfunction LensFlare() {\n\t\tconsole.error('THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js');\n\t}\n\n\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t/* eslint-disable no-undef */\n\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register', {\n\t\t\tdetail: {\n\t\t\t\trevision: REVISION\n\t\t\t}\n\t\t}));\n\t\t/* eslint-enable no-undef */\n\n\t}\n\n\tif (typeof window !== 'undefined') {\n\t\tif (window.__THREE__) {\n\t\t\tconsole.warn('WARNING: Multiple instances of Three.js being imported.');\n\t\t} else {\n\t\t\twindow.__THREE__ = REVISION;\n\t\t}\n\t}\n\n\texports.ACESFilmicToneMapping = ACESFilmicToneMapping;\n\texports.AddEquation = AddEquation;\n\texports.AddOperation = AddOperation;\n\texports.AdditiveAnimationBlendMode = AdditiveAnimationBlendMode;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.AlphaFormat = AlphaFormat;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.AlwaysStencilFunc = AlwaysStencilFunc;\n\texports.AmbientLight = AmbientLight;\n\texports.AmbientLightProbe = AmbientLightProbe;\n\texports.AnimationClip = AnimationClip;\n\texports.AnimationLoader = AnimationLoader;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationUtils = AnimationUtils;\n\texports.ArcCurve = ArcCurve;\n\texports.ArrayCamera = ArrayCamera;\n\texports.ArrowHelper = ArrowHelper;\n\texports.Audio = Audio;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.AudioContext = AudioContext;\n\texports.AudioListener = AudioListener;\n\texports.AudioLoader = AudioLoader;\n\texports.AxesHelper = AxesHelper;\n\texports.AxisHelper = AxisHelper;\n\texports.BackSide = BackSide;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.Bone = Bone;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.Box2 = Box2;\n\texports.Box3 = Box3;\n\texports.Box3Helper = Box3Helper;\n\texports.BoxBufferGeometry = BoxGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.BoxHelper = BoxHelper;\n\texports.BufferAttribute = BufferAttribute;\n\texports.BufferGeometry = BufferGeometry;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.ByteType = ByteType;\n\texports.Cache = Cache;\n\texports.Camera = Camera;\n\texports.CameraHelper = CameraHelper;\n\texports.CanvasRenderer = CanvasRenderer;\n\texports.CanvasTexture = CanvasTexture;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.CircleBufferGeometry = CircleGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.Clock = Clock;\n\texports.Color = Color;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.ConeBufferGeometry = ConeGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.CubeCamera = CubeCamera;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.CubeTexture = CubeTexture;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.CullFaceNone = CullFaceNone;\n\texports.Curve = Curve;\n\texports.CurvePath = CurvePath;\n\texports.CustomBlending = CustomBlending;\n\texports.CustomToneMapping = CustomToneMapping;\n\texports.CylinderBufferGeometry = CylinderGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.Cylindrical = Cylindrical;\n\texports.DataTexture = DataTexture;\n\texports.DataTexture2DArray = DataTexture2DArray;\n\texports.DataTexture3D = DataTexture3D;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.DataUtils = DataUtils;\n\texports.DecrementStencilOp = DecrementStencilOp;\n\texports.DecrementWrapStencilOp = DecrementWrapStencilOp;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.DepthTexture = DepthTexture;\n\texports.DirectionalLight = DirectionalLight;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.DodecahedronBufferGeometry = DodecahedronGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DoubleSide = DoubleSide;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.DynamicCopyUsage = DynamicCopyUsage;\n\texports.DynamicDrawUsage = DynamicDrawUsage;\n\texports.DynamicReadUsage = DynamicReadUsage;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.EdgesHelper = EdgesHelper;\n\texports.EllipseCurve = EllipseCurve;\n\texports.EqualDepth = EqualDepth;\n\texports.EqualStencilFunc = EqualStencilFunc;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.Euler = Euler;\n\texports.EventDispatcher = EventDispatcher;\n\texports.ExtrudeBufferGeometry = ExtrudeGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.FaceColors = FaceColors;\n\texports.FileLoader = FileLoader;\n\texports.FlatShading = FlatShading;\n\texports.Float16BufferAttribute = Float16BufferAttribute;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Float32BufferAttribute = Float32BufferAttribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.Float64BufferAttribute = Float64BufferAttribute;\n\texports.FloatType = FloatType;\n\texports.Fog = Fog;\n\texports.FogExp2 = FogExp2;\n\texports.Font = Font;\n\texports.FontLoader = FontLoader;\n\texports.FrontSide = FrontSide;\n\texports.Frustum = Frustum;\n\texports.GLBufferAttribute = GLBufferAttribute;\n\texports.GLSL1 = GLSL1;\n\texports.GLSL3 = GLSL3;\n\texports.GammaEncoding = GammaEncoding;\n\texports.GreaterDepth = GreaterDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\n\texports.GreaterStencilFunc = GreaterStencilFunc;\n\texports.GridHelper = GridHelper;\n\texports.Group = Group;\n\texports.HalfFloatType = HalfFloatType;\n\texports.HemisphereLight = HemisphereLight;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.HemisphereLightProbe = HemisphereLightProbe;\n\texports.IcosahedronBufferGeometry = IcosahedronGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.ImageBitmapLoader = ImageBitmapLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.ImageUtils = ImageUtils;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.IncrementStencilOp = IncrementStencilOp;\n\texports.IncrementWrapStencilOp = IncrementWrapStencilOp;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InstancedMesh = InstancedMesh;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Int16BufferAttribute = Int16BufferAttribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Int32BufferAttribute = Int32BufferAttribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.Int8BufferAttribute = Int8BufferAttribute;\n\texports.IntType = IntType;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.Interpolant = Interpolant;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.InvertStencilOp = InvertStencilOp;\n\texports.JSONLoader = JSONLoader;\n\texports.KeepStencilOp = KeepStencilOp;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.LOD = LOD;\n\texports.LatheBufferGeometry = LatheGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.Layers = Layers;\n\texports.LensFlare = LensFlare;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.LessEqualStencilFunc = LessEqualStencilFunc;\n\texports.LessStencilFunc = LessStencilFunc;\n\texports.Light = Light;\n\texports.LightProbe = LightProbe;\n\texports.Line = Line;\n\texports.Line3 = Line3;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.LineCurve = LineCurve;\n\texports.LineCurve3 = LineCurve3;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineLoop = LineLoop;\n\texports.LinePieces = LinePieces;\n\texports.LineSegments = LineSegments;\n\texports.LineStrip = LineStrip;\n\texports.LinearEncoding = LinearEncoding;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\n\texports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.Loader = Loader;\n\texports.LoaderUtils = LoaderUtils;\n\texports.LoadingManager = LoadingManager;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopPingPong = LoopPingPong;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.MOUSE = MOUSE;\n\texports.Material = Material;\n\texports.MaterialLoader = MaterialLoader;\n\texports.Math = MathUtils;\n\texports.MathUtils = MathUtils;\n\texports.Matrix3 = Matrix3;\n\texports.Matrix4 = Matrix4;\n\texports.MaxEquation = MaxEquation;\n\texports.Mesh = Mesh;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\n\texports.MeshFaceMaterial = MeshFaceMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshMatcapMaterial = MeshMatcapMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshToonMaterial = MeshToonMaterial;\n\texports.MinEquation = MinEquation;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.MixOperation = MixOperation;\n\texports.MultiMaterial = MultiMaterial;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\n\texports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\n\texports.NeverDepth = NeverDepth;\n\texports.NeverStencilFunc = NeverStencilFunc;\n\texports.NoBlending = NoBlending;\n\texports.NoColors = NoColors;\n\texports.NoToneMapping = NoToneMapping;\n\texports.NormalAnimationBlendMode = NormalAnimationBlendMode;\n\texports.NormalBlending = NormalBlending;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.NotEqualStencilFunc = NotEqualStencilFunc;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.Object3D = Object3D;\n\texports.ObjectLoader = ObjectLoader;\n\texports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\n\texports.OctahedronBufferGeometry = OctahedronGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OneFactor = OneFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.PMREMGenerator = PMREMGenerator;\n\texports.ParametricBufferGeometry = ParametricGeometry;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.Particle = Particle;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystem = ParticleSystem;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Path = Path;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.Plane = Plane;\n\texports.PlaneBufferGeometry = PlaneGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.PlaneHelper = PlaneHelper;\n\texports.PointCloud = PointCloud;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.PointLight = PointLight;\n\texports.PointLightHelper = PointLightHelper;\n\texports.Points = Points;\n\texports.PointsMaterial = PointsMaterial;\n\texports.PolarGridHelper = PolarGridHelper;\n\texports.PolyhedronBufferGeometry = PolyhedronGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PositionalAudio = PositionalAudio;\n\texports.PropertyBinding = PropertyBinding;\n\texports.PropertyMixer = PropertyMixer;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.Quaternion = Quaternion;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.REVISION = REVISION;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.RGBAFormat = RGBAFormat;\n\texports.RGBAIntegerFormat = RGBAIntegerFormat;\n\texports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\n\texports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\n\texports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\n\texports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\n\texports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\n\texports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\n\texports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\n\texports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\n\texports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\n\texports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\n\texports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\n\texports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\n\texports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\n\texports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\n\texports.RGBA_BPTC_Format = RGBA_BPTC_Format;\n\texports.RGBA_ETC2_EAC_Format = RGBA_ETC2_EAC_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.RGBEFormat = RGBEFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBIntegerFormat = RGBIntegerFormat;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.RGB_ETC2_Format = RGB_ETC2_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGFormat = RGFormat;\n\texports.RGIntegerFormat = RGIntegerFormat;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.Ray = Ray;\n\texports.Raycaster = Raycaster;\n\texports.RectAreaLight = RectAreaLight;\n\texports.RedFormat = RedFormat;\n\texports.RedIntegerFormat = RedIntegerFormat;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ReplaceStencilOp = ReplaceStencilOp;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.RingBufferGeometry = RingGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.SRGB8_ALPHA8_ASTC_10x10_Format = SRGB8_ALPHA8_ASTC_10x10_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x5_Format = SRGB8_ALPHA8_ASTC_10x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x6_Format = SRGB8_ALPHA8_ASTC_10x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x8_Format = SRGB8_ALPHA8_ASTC_10x8_Format;\n\texports.SRGB8_ALPHA8_ASTC_12x10_Format = SRGB8_ALPHA8_ASTC_12x10_Format;\n\texports.SRGB8_ALPHA8_ASTC_12x12_Format = SRGB8_ALPHA8_ASTC_12x12_Format;\n\texports.SRGB8_ALPHA8_ASTC_4x4_Format = SRGB8_ALPHA8_ASTC_4x4_Format;\n\texports.SRGB8_ALPHA8_ASTC_5x4_Format = SRGB8_ALPHA8_ASTC_5x4_Format;\n\texports.SRGB8_ALPHA8_ASTC_5x5_Format = SRGB8_ALPHA8_ASTC_5x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_6x5_Format = SRGB8_ALPHA8_ASTC_6x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_6x6_Format = SRGB8_ALPHA8_ASTC_6x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x5_Format = SRGB8_ALPHA8_ASTC_8x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x6_Format = SRGB8_ALPHA8_ASTC_8x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x8_Format = SRGB8_ALPHA8_ASTC_8x8_Format;\n\texports.Scene = Scene;\n\texports.SceneUtils = SceneUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.ShaderLib = ShaderLib;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.Shape = Shape;\n\texports.ShapeBufferGeometry = ShapeGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ShapePath = ShapePath;\n\texports.ShapeUtils = ShapeUtils;\n\texports.ShortType = ShortType;\n\texports.Skeleton = Skeleton;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.SmoothShading = SmoothShading;\n\texports.Sphere = Sphere;\n\texports.SphereBufferGeometry = SphereGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.Spherical = Spherical;\n\texports.SphericalHarmonics3 = SphericalHarmonics3;\n\texports.SplineCurve = SplineCurve;\n\texports.SpotLight = SpotLight;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.Sprite = Sprite;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.StaticCopyUsage = StaticCopyUsage;\n\texports.StaticDrawUsage = StaticDrawUsage;\n\texports.StaticReadUsage = StaticReadUsage;\n\texports.StereoCamera = StereoCamera;\n\texports.StreamCopyUsage = StreamCopyUsage;\n\texports.StreamDrawUsage = StreamDrawUsage;\n\texports.StreamReadUsage = StreamReadUsage;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.SubtractEquation = SubtractEquation;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.TOUCH = TOUCH;\n\texports.TangentSpaceNormalMap = TangentSpaceNormalMap;\n\texports.TetrahedronBufferGeometry = TetrahedronGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TextBufferGeometry = TextGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.Texture = Texture;\n\texports.TextureLoader = TextureLoader;\n\texports.TorusBufferGeometry = TorusGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.Triangle = Triangle;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TubeBufferGeometry = TubeGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.UVMapping = UVMapping;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\texports.Uniform = Uniform;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.VSMShadowMap = VSMShadowMap;\n\texports.Vector2 = Vector2;\n\texports.Vector3 = Vector3;\n\texports.Vector4 = Vector4;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.Vertex = Vertex;\n\texports.VertexColors = VertexColors;\n\texports.VideoTexture = VideoTexture;\n\texports.WebGL1Renderer = WebGL1Renderer;\n\texports.WebGLCubeRenderTarget = WebGLCubeRenderTarget;\n\texports.WebGLMultipleRenderTargets = WebGLMultipleRenderTargets;\n\texports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.WebGLUtils = WebGLUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.WireframeHelper = WireframeHelper;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.XHRLoader = XHRLoader;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroFactor = ZeroFactor;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.ZeroStencilOp = ZeroStencilOp;\n\texports.sRGBEncoding = sRGBEncoding;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"],"names":[],"version":3,"file":"pointBlob.04930d8b.js.map","sourceRoot":"../../../../../"}