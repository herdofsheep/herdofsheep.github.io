import{L as e}from"./lodash-b171aca0.js";import{Scene as t,Color as i,OrthographicCamera as n,HemisphereLight as s,Mesh as r,WebGLRenderer as a,Group as o,Matrix4 as c,Quaternion as d,Vector3 as h,Euler as l,MeshStandardMaterial as m}from"three";import{GLTFLoader as u}from"three/examples/jsm/loaders/GLTFLoader.js";import"three/examples/jsm/utils/BufferGeometryUtils.js";window.customElements.define("question-mark",class extends e{static get properties(){return{container:{type:Object},camera:{type:Object},controls:{type:Object},scene:{type:Object},renderer:{type:Object},que:{type:Object},ques:{type:Array},duplicated:{tpye:Boolean}}}constructor(){super(),this.duplicated=!1,this.init(),this.animate()}init(){this.container=document.getElementById("container"),this.scene=new t,this.scene.background=new i(16777215);var e=this.container.clientWidth,o=this.container.clientHeight;this.camera=new n(e/-2,e/2,o/2,o/-2,-100,1e3);var c=new s(4655894,100,10);c.position.set(0,0,10),this.scene.add(c),this.que=this.loadModel("/src/assets/models/gltf/questionmark.glb"),this.queAll=new r,this.renderer=new a({antialias:!0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(e,o),this.renderer.gammaOutput=!0,this.container.appendChild(this.renderer.domElement),window.addEventListener("resize",this.onWindowResize.bind(this),!1)}loadModel(e){var t=new u,i=new o;return t.load(e,(function(e){e.scene.traverse((function(e){})),i.add(e.scene)})),i}onWindowResize(){var e=this.container.clientWidth,t=this.container.clientHeight;this.camera.aspect=e/t,this.camera.updateProjectionMatrix(),this.renderer.setSize(e,t)}animate(){window.requestAnimationFrame(()=>this.animate()),0==this.duplicated&&this.duplicate(),this.render()}render(){var e=5e-4*Date.now();if(this.ques)for(let t=0;t<this.ques.length;t++)this.ques[t].rotation.x=3.14*Math.cos(.03*e*(t+100))-90;this.renderer.render(this.scene,this.camera),this.camera.lookAt(this.que.position)}duplicate(){if(_.get(this.que,["children",0,"children"],null)){var e=[];const n=new c,s=new d;for(let a=0;a<14;a++){var t=this.que.children[0].children.find(e=>"Mesh"==e.type).geometry.clone();const o=new h(50*a-350+14,0,5);s.setFromEuler(new l(0,0,0));const c=new h(5,5,5);n.compose(o,s,c),t.applyMatrix4(n);var i=new m({color:16713736});t=new r(t,i),e.push(t)}for(let t=0;t<e.length;t++)this.scene.add(e[t]);this.ques=e,this.duplicated=!0}}});
